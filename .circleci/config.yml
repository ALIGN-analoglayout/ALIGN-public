version: 2.1

executors:
  docker-executor:
    docker:
      - image: docker:18.06.3-ce-git
    working_directory: /work/workspace

  git-executor:
    docker:
      - image: alpine/git
    working_directory: /work/workspace

jobs:
  start:
    executor: git-executor
    steps:
      - attach_workspace:
          at: /work/workspace
      - checkout
      - persist_to_workspace:
          root: /work/workspace
          paths: .


  build-tally:
    executor: docker-executor
    steps:
      - setup_remote_docker

      - attach_workspace:
          at: /work/workspace

      - run: |
          cd Pysat
          docker build -f Dockerfile.tally -t tally_image .
          docker run --name tally_container tally_image bash -c "source /general/bin/activate && cd tally && coverage run --source=tally,tests setup.py test && coverage html && coverage xml && coverage-badge -o htmlcov/coverage.svg && mkdir -p /test-reports/tally && cp /tally/junit.xml /test-reports/tally && mkdir -p /coverage-reports/tally && cp -r /tally/coverage.xml /tally/htmlcov /coverage-reports/tally"
          docker cp tally_container:coverage-reports /work/workspace
          docker cp tally_container:test-reports /work/workspace
          docker rm tally_container

      - persist_to_workspace:
          root: /work/workspace
          paths:
            - test-reports/tally
            - coverage-reports/tally

  build-sgi:
    executor: docker-executor
    steps:
      - setup_remote_docker

      - attach_workspace:
          at: /work/workspace

      - run: |
          (cd Pysat; docker build -f Dockerfile.tally -t tally_image .)
          cd Experimental/SATBasedMonomorphism
          docker build -t sgi_image .
          docker run --name sgi_container sgi_image bash -c "source /general/bin/activate && cd sgi && coverage run --source=sgi,tests setup.py test && coverage html && coverage xml && coverage-badge -o htmlcov/coverage.svg && mkdir -p /test-reports/sgi && cp /sgi/junit.xml /test-reports/sgi && mkdir -p /coverage-reports/sgi && cp -r /sgi/coverage.xml /sgi/htmlcov /coverage-reports/sgi"

          docker cp sgi_container:coverage-reports /work/workspace
          docker cp sgi_container:test-reports /work/workspace
          docker rm sgi_container

      - persist_to_workspace:
          root: /work/workspace
          paths:
            - test-reports/sgi
            - coverage-reports/sgi


  build-sci:
    executor: docker-executor
    steps:
      - setup_remote_docker

      - attach_workspace:
          at: /work/workspace

      - run: |
          cd sub_circuit_identification
          docker build -t topology .

          docker run --name sci_container topology bash -c "source sympy/bin/activate && cd DEMO/src && pytest --junitxml=junit.xml --cov=. && coverage html && coverage xml && mkdir -p /test-reports/sci && cp /DEMO/src/junit.xml /test-reports/sci && mkdir -p /coverage-reports/sci && cp -r /DEMO/src/coverage.xml /DEMO/src/htmlcov /coverage-reports/sci"

          docker cp sci_container:coverage-reports /work/workspace
          docker cp sci_container:test-reports /work/workspace
          docker rm sci_container

      - persist_to_workspace:
          root: /work/workspace
          paths:
            - test-reports/sci
            - coverage-reports/sci


  build-PlacementEditor:
    executor: docker-executor
    steps:
      - setup_remote_docker

      - attach_workspace:
          at: /work/workspace

      - run: |
          cd PlacementEditor
          docker build -t pe_image .
          docker run --name pe_container pe_image bash -c "npm run test && mkdir -p /test-reports/PlacementEditor && cp junit.xml /test-reports/PlacementEditor"
          docker cp pe_container:test-reports /work/workspace
          docker rm pe_container

      - persist_to_workspace:
          root: /work/workspace
          paths:
            - test-reports/PlacementEditor


  finish:
    executor: git-executor

    steps:
      - attach_workspace:
          at: /work/workspace

      - store_test_results:
          path: test-reports

      - store_artifacts:
          path: test-reports

      - store_artifacts:
          path: coverage-reports

workflows:
  version: 2.1

  full:
    jobs:
      - start
      - build-tally:
          requires:
            - start
      - build-sgi:
          requires:
            - start
      - build-PlacementEditor:
          requires:
            - start
      - build-sci:
          requires:
            - start
      - finish:
          requires:
            - build-tally
            - build-sgi
            - build-PlacementEditor
            - build-sci
