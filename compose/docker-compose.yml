#
# Docker-compose file for running ALIGN Analog flow
# Requires:
#  ALIGN_HOME:  point to to the ALIGN source area
#  WORKDIR:     point to the current work area for running flow (containers need this to mount area)
#
# TO RUN:
#   docker-compose up -d
#   Can also be in work area and run with a file flag for docker-compose:
#
# To rebuild incremental step engine:
#   docker-compose up -d --build <step> 
version: '3.4'


# YAML anchors for creating defaults
x-environment:
  &default-environment
  - http_proxy
  - https_proxy

x-service: &default-service
  environment: *default-environment
  network_mode: host
  command: /bin/bash -c "/usr/bin/tail -f /dev/null"
  user: "1000:1000"
  volumes:
    - ${ALIGN_WORK_DIR}:/dataVolume
    
x-build:  &default-build
  dockerfile: Dockerfile
  network: host
  args: *default-environment

# Start of services
services:
  transfer-service:
    <<: *default-service
    image: ubuntu
    container_name: transfer_cont

  topology-service:
    <<: *default-service
    image: topology
    build:
      <<: *default-build
      context: ${ALIGN_HOME}/sub_circuit_identification
    container_name: topology_cont

  cellfabric-service:
    <<: *default-service
    image: cellfabric_image
    build:
      <<: *default-build
      context: ${ALIGN_HOME}/
      dockerfile: CellFabric/Dockerfile
    container_name: cellfabric_cont

  protobuf-service:
    <<: *default-service
    image: with_protobuf
    build:
      <<: *default-build
      context: ${ALIGN_HOME}/Build
      dockerfile: Dockerfile.build
    container_name: protobuf_cont

  placeroute-service:
    <<: *default-service
    image: placeroute_image
    build:
      <<: *default-build
      context: ${ALIGN_HOME}/PlaceRouteHierFlow
    container_name: placeroute_cont

  klayoutconvert-service:
    <<: *default-service
    image: klayoutconvert_image
    build:
      <<: *default-build
      context: ${ALIGN_HOME}/Build/ThirdParty/Klayout
      dockerfile: Dockerfile.convert
    container_name: klayoutconvert_cont
  
