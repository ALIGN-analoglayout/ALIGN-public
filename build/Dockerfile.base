#
# Base container starts here
#
FROM ubuntu:18.04 as align_base

#
# Set required environment variables
#
ENV http_proxy=$http_proxy
ENV https_proxy=$https_proxy

# Update packages
RUN apt-get -qq update && DEBIAN_FRONTEND=noninterative apt-get -qq install \
    # Python dependencies
    python3 \
    python3-pip \
    python3-venv \
    # C++ Dependencies
    g++\
    cmake \
    libboost-container-dev \
    # Other Dependencies
    git \
    vim \
    graphviz \
    gnuplot \
    curl \
    wget \
    gfortran \
    xvfb < /dev/null > /dev/null \
    # libgraphviz-dev \
    # protobuf-compiler \
    # lcov \
&&    apt-get -qq clean


# Create Virtual Env
ENV venv=/opt/venv
ENV python=$venv/bin/python
ENV pip=$venv/bin/pip

RUN python3 -m venv $venv

# Upgrade pip & install testing dependencies
# Note: Package dependencies are in setup.py
RUN $pip install --upgrade pip -q
RUN $pip install -q \
    pytest \
    pytest-cov \
    pytest-timeout \
    coverage-badge

# Lpsolve
RUN \
    git clone https://www.github.com/ALIGN-analoglayout/lpsolve.git  /usr/local/lib/lpsolve
ENV LD_LIBRARY_PATH=/usr/local/lib/lpsolve/lp_solve_5.5.2.5_dev_ux64

# SuperLU
RUN \
    mkdir -p /opt && \
    cd /opt && \
    git clone https://www.github.com/ALIGN-analoglayout/superlu.git && \
    cd superlu && \
    tar xvfz superlu_5.2.1.tar.gz && \
    cd SuperLU_5.2.1 && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make
ENV SuperLu_DIR=/opt/superlu

# Googletest
RUN cd /opt && \
    git clone https://github.com/google/googletest.git && \
    cd googletest && \
    git checkout c9ccac7cb7345901884aabf5d1a786cfa6e2f397 && \
    cd googletest && \
    mkdir mybuild && \
    cd mybuild && \
    cmake CMAKE_INSTALL_MESSAGE=NEVER .. && \
    make -s

# JSON
RUN cd /opt && \
    git clone https://github.com/nlohmann/json.git

# KLayout
RUN curl -o /klayout_0.26.6-1_amd64.deb https://www.klayout.org/downloads/Ubuntu-18/klayout_0.26.6-1_amd64.deb

RUN DEBIAN_FRONTEND=noninterative apt-get install -qq /klayout_0.26.6-1_amd64.deb < /dev/null > /dev/null

from align_base as align_image

ENV ALIGN_HOME=/ALIGN-public

COPY . $ALIGN_HOME

RUN cd $ALIGN_HOME && \
    $pip install -q . && \
    cd PlaceRouteHierFlow && \
    make -j4 -s
