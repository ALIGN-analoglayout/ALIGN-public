/*
————————————————————————————————————————————————————————————————————————————
Description		: ASAP7 Calibre DRC Deck
Date Created 		: April 24, 2015
Last Modified On 	: November 11, 2017
————————————————————————————————————————————————————————————————————————————
*/
/*
————————————————————————————————————————————————————————————————————————————
This file includes SVRF/TVF Technology licensed by Mentor Graphics
Corporation. “SVRF/TVF Technology” means Mentor Graphics’ Standard
Verification Rule Format (“SVRF”) and Tcl Verification Format (“TVF”)
proprietary syntaxes for expressing process rules. SVRF/TVF Technology
constitutes or contains trade secrets and confidential information of
Mentor Graphics Corporation and any use is subject to the terms and
conditions of the Mentor Graphics End-User License Agreement, which may be
viewed at http://www.mentor.com/terms_conditions/enduser. SVRF/TVF
Technology may be used solely with Mentor Graphics’ Calibre® software
products, by your company’s employees and on-site contractors, excluding
Mentor Graphics competitors, who are under obligations of confidentiality
and whose job performance requires access for your internal business
purposes.
————————————————————————————————————————————————————————————————————————————
*/
/*
————————————————————————————————————————————————————————————————————————————
			Specification Statements                              	  
————————————————————————————————————————————————————————————————————————————
*/
LAYOUT SYSTEM 			GDSII
LAYOUT PATH 			"./test.gds"
LAYOUT PRIMARY 			TOPCELL
DRC SUMMARY REPORT 		drc_report
DRC RESULTS DATABASE 		drc_results.db
DRC INCREMENTAL CONNECT YES
PRECISION			10000
LAYOUT PRECISION 		4000
LAYOUT MAGNIFY			AUTO
RESOLUTION			1
/*
————————————————————————————————————————————————————————————————————————————
			Original Layers
————————————————————————————————————————————————————————————————————————————
*/
layer	WELL		1	
layer 	FIN		2 	
layer   GATE  		7 	
layer	GCUT		10	
layer	ACTIVE		11	
layer   SDT		88	
layer	NSELECT		12	
layer	PSELECT		13	
layer	SLVT		97	
layer	LVT		98	
layer	SRAMDRC		99	
layer	SRAMVT		110	
layer	DUMMY		8	
layer	LIG		16	
layer	LISD		17	
layer	V0		18	
layer	M1		19	
layer	V1		21	
layer	M2		20	
layer	V2		25	
layer	M3		30	
layer	V3		35	
layer	M4		40	
layer	V4		45	
layer	M5		50	
layer	V5		55	
layer	M6		60	
layer	V6		65	
layer	M7		70	
layer	V7		75	
layer	M8		80	
layer	V8		85	
layer	M9		90	
layer	V9		95	
layer	Pad		96	
layer	BOUNDARY	100	
/*——————————————————————————————————————————————————————————————————————————————————————————
Connectivity in the stack is as follows:
______ ________________________________________________________________________________ Pad
      |        
      | V9       
______|________________________________________________________________________________ M9
            |   
            | V8  
____________|___________________________________________________________________________ M8
                |
                |V7
________________|______ _________________________________________________________________ M7
                       |
                       |V6
_______________________|_____ ___________________________________________________________ M6
                             |
                             |V5
_____________________________|_______ ___________________________________________________ M5
                                     |
                                     |V4
_____________________________________|_______ ___________________________________________ M4
                                             |
                                             | V3
_____________________________________________|_______ ____________________________________ M3
                                                     |
                                                     | V2
_____________________________________________________|_______ ____________________________ M2
                                                             |
                                                             | V1
_____________________________________________________________|_______ ____________________ M1
                                                                     |
                                                                     | V0
_____________________________________________________________________|_______ ____________ LIG_____ _____LISD
									     |			   |
									     |			   |
_____________________________________________________________________________|____________ GATE    |
                                                                                                   |SDT   
									     			   |
___________________________________________________________________________________________________|_____ACTIVE   
————————————————————————————————————————————————————————————————————————————————————————————*/
/*
————————————————————————————————————————————————————————————————————————————
		Derived Global Boolean Layers and Net Connections
————————————————————————————————————————————————————————————————————————————
*/
GATE_NGC = GATE NOT GCUT
GATE_NGC_NIS = GATE_NGC NOT INTERACT SRAMDRC
GATE_NGC_NIA = GATE_NGC NOT INTERACT ACTIVE
GATE_NGC_HE = GATE_NGC ANGLE == 0
GATE_NGC_VE = GATE_NGC ANGLE == 90
GATE_NGC_NIS_HE =  GATE_NGC_NIS ANGLE == 0
GATE_NGC_NIS_VE =  GATE_NGC_NIS ANGLE == 90
GATE_NGC_NIA_HE =  GATE_NGC_NIA ANGLE == 0
GATE_NGC_NIA_VE =  GATE_NGC_NIA ANGLE == 90
ACTIVE_HE = ACTIVE ANGLE == 0
ACTIVE_VE = ACTIVE ANGLE == 90
ACTIVE_IS = ACTIVE INTERACT SRAMDRC
ACTIVE_NIS = ACTIVE NOT INTERACT SRAMDRC
ACTIVE_IS_HE = ACTIVE_IS ANGLE == 0
ACTIVE_IS_VE = ACTIVE_IS ANGLE == 90
ACTIVE_NIS_HE = ACTIVE_NIS ANGLE == 0
ACTIVE_NIS_VE = ACTIVE_NIS ANGLE == 90
ACTIVE_IGNGC = ACTIVE INTERACT GATE_NGC
ACTIVE_NIGNGC = ACTIVE NOT INTERACT GATE_NGC
ACTIVE_IGNGC_HE = ACTIVE_IGNGC ANGLE == 0
ACTIVE_IGNGC_VE = ACTIVE_IGNGC ANGLE == 90
ACTIVE_NIGNGC_HE = ACTIVE_NIGNGC ANGLE == 0
ACTIVE_NIGNGC_VE = ACTIVE_NIGNGC ANGLE == 90
ACTIVE_SD = ACTIVE_IGNGC NOT GATE_NGC
ACTIVE_SD_HE = ACTIVE_SD ANGLE == 0
ACTIVE_SD_VE = ACTIVE_SD ANGLE == 90
/*
————————————————————————————————————————————————————————————————————————————
Net Connectivity
————————————————————————————————————————————————————————————————————————————
*/
CONNECT ACTIVE_SD LISD BY SDT
CONNECT LISD LIG
CONNECT GATE_NGC LIG
CONNECT LIG M1 BY V0
CONNECT LISD M1 BY V0
CONNECT M2 M1 BY V1
CONNECT M3 M2 BY V2
CONNECT M4 M3 BY V3
CONNECT M5 M4 BY V4
CONNECT M6 M5 BY V5
CONNECT M7 M6 BY V6
CONNECT M8 M7 BY V7
CONNECT M9 M8 BY V8
WELL_HE = WELL ANGLE == 0
WELL_VE = WELL ANGLE == 90
FIN_HE = FIN ANGLE == 0
FIN_VE = FIN ANGLE == 90
GATE_HE = GATE ANGLE == 0
GATE_VE = GATE ANGLE == 90
CHANNEL = (GATE_NGC NOT SRAMDRC) AND ACTIVE
CHANNEL_HE = CHANNEL ANGLE == 0
CHANNEL_VE = CHANNEL ANGLE == 90
CHANNELR = ACTIVE AND GATE_NGC
CHANNELR_HE =  CHANNELR ANGLE == 0
CHANNELR_VE =  CHANNELR ANGLE == 90
GCUT_HE = GCUT ANGLE == 0
GCUT_VE = GCUT ANGLE == 90
NSELECT_HE = NSELECT ANGLE == 0
NSELECT_VE = NSELECT ANGLE == 90
PSELECT_HE = PSELECT ANGLE == 0
PSELECT_VE = PSELECT ANGLE == 90
PSELECT_ENCA = PSELECT ENCLOSE ACTIVE
PSELECT_ENCA_OW = PSELECT_ENCA OR WELL
PSELECT_ENCA_AW = PSELECT_ENCA AND WELL
PSELECT_ENCA_CW = PSELECT_ENCA CUT WELL
SLVT_HE = SLVT ANGLE == 0
SLVT_VE = SLVT ANGLE == 90
LVT_HE = LVT ANGLE == 0
LVT_VE = LVT ANGLE == 90
SRAMVT_HE = SRAMVT ANGLE == 0
SRAMVT_VE = SRAMVT ANGLE == 90
DUMMY_HE = DUMMY ANGLE == 0
DUMMY_VE = DUMMY ANGLE == 90
SDT_HE = SDT ANGLE == 0
SDT_VE = SDT ANGLE == 90
SDT_IS = SDT INTERACT SRAMDRC
SDT_NIS = SDT NOT INTERACT SRAMDRC
SDT_IS_HE = SDT_IS ANGLE == 0
SDT_IS_VE = SDT_IS ANGLE == 90
SDT_NIS_HE = SDT_NIS ANGLE == 0
SDT_NIS_VE = SDT_NIS ANGLE == 90
SDT_AND_ACTIVE = SDT AND ACTIVE
SDT_AND_LISD = SDT AND LISD
SDT_AND_ACTIVE_HE = SDT_AND_ACTIVE ANGLE == 0
SDT_AND_ACTIVE_VE = SDT_AND_ACTIVE ANGLE == 90
SDT_AND_LISD_HE = SDT_AND_LISD ANGLE == 0
SDT_AND_LISD_VE = SDT_AND_LISD ANGLE == 90
SDT_NIS_AND_ACTIVE = SDT_NIS AND ACTIVE
SDT_NIS_AND_LISD = SDT_NIS AND LISD
SDT_NIS_AND_ACTIVE_HE = SDT_NIS_AND_ACTIVE ANGLE == 0
SDT_NIS_AND_ACTIVE_VE = SDT_NIS_AND_ACTIVE ANGLE == 90
SDT_NIS_AND_LISD_HE = SDT_NIS_AND_LISD ANGLE == 0
SDT_NIS_AND_LISD_VE = SDT_NIS_AND_LISD ANGLE == 90
LISD_IS  = LISD INTERACT SRAMDRC
LISD_IS_HE = LISD_IS ANGLE == 0
LISD_IS_VE = LISD_IS ANGLE == 90
LISD_OS = LISD OUTSIDE SRAMDRC
LISD_SIDE = LENGTH LISD > 0.036
LISD_TIP = LENGTH LISD <= 0.036
LISD_OS_WIDE_TIP = LENGTH LISD_OS >= 0.024 <= 0.036
LISD_OS_NARROW_TIP = LENGTH LISD_OS < 0.024
LISD_IS_TIP = LENGTH LISD_IS <= 0.036
LIG_SIDE = LENGTH LIG > 0.036
LIG_TIP = LENGTH LIG <= 0.036
LIG_WIDE_TIP = LENGTH LIG >= 0.024 <= 0.036
LIG_NARROW_TIP = LENGTH LIG < 0.024
LISD_OS_HE = LISD_OS ANGLE == 0
LISD_HE = LISD ANGLE == 0
LISD_VE = LISD ANGLE == 90
LIG_HE = LIG ANGLE == 0
LIG_VE = LIG ANGLE == 90
LISD_ILIG = LISD INTERACT LIG
LISD_NILIG = LISD NOT INTERACT LIG
LIG_IS = LIG INTERACT SRAMDRC
LIG_OS = LIG OUTSIDE SRAMDRC
LIG_OS_HE = LIG_OS ANGLE == 0
LIG_OS_VE = LIG_OS ANGLE == 90
V0_HE = V0 ANGLE == 0
V0_VE = V0 ANGLE == 90
V0_ILISD = V0 INTERACT LISD
V0_ILISD_HE = V0_ILISD ANGLE == 0
V0_ILISD_VE = V0_ILISD ANGLE == 90
V0_ILIG = V0 INTERACT LIG
V0_ILIG_HE = V0_ILIG ANGLE == 0
V0_ILIG_VE = V0_ILIG ANGLE == 90
V0_ILIG_NINSLISD = V0_ILIG NOT INSIDE LISD
V0_ILIG_NINSLISD_HE = V0_ILIG_NINSLISD ANGLE == 0
V0_ILIG_NINSLISD_VE = V0_ILIG_NINSLISD ANGLE == 90
V0_ILISD_NILIG = V0_ILISD NOT INTERACT LIG
V0_ILISD_NILIG_HE = V0_ILISD_NILIG ANGLE == 0
V0_ILISD_NILIG_VE = V0_ILISD_NILIG ANGLE == 90
V0_ILIG_CLISD = V0_ILIG CUT LIG
V0_ILIG_CLISD_HE = V0_ILIG_CLISD ANGLE == 0
V0_ILIG_CLISD_VE = V0_ILIG_CLISD ANGLE == 90
V0AM1 = V0 AND M1
V0AM1_HE = V0AM1 ANGLE == 0
V0AM1_VE = V0AM1 ANGLE == 90
/*
————————————————————————————————————————————————————————————————————————————
Variable Specification
————————————————————————————————————————————————————————————————————————————
*/
VARIABLE VAR_OPT_MEEF_MIN 2.5
VARIABLE VAR_OPT_MEEF_MAX 4
VARIABLE VAR_OPT_CDU 0.001
VARIABLE VAR_OPT_ERR 0.002
VARIABLE VAR_EUV_MISALI 0.004
VARIABLE VAR_EUV_MISALI_GRDBND (VAR_EUV_MISALI+0.001)
VARIABLE VAR_OPT_MISALI 0.007
VARIABLE VAR_OPT_EUV_MISALI 0.005
VARIABLE VAR_OPT_EUV_MISALI_GRDBND (VAR_OPT_EUV_MISALI+0.002)
VARIABLE VAR_OPT_RES 0.040 
VARIABLE VAR_BLOCK_MASK_W VAR_OPT_RES
VARIABLE VAR_BLOCK_MASK_T2T (VAR_BLOCK_MASK_W+(VAR_OPT_MEEF_MAX*VAR_OPT_CDU))
V0NCIEM1 = V0 NOT COINCIDENT INSIDE EDGE M1
V0NCIEM1B = CONVEX EDGE V0NCIEM1 > 0
V0SAV = V0 NOT WITH EDGE V0NCIEM1B 
V0SAVCIEM1 = V0SAV COINCIDENT INSIDE EDGE M1
V0SAVNCIEM1 = V0SAV NOT COINCIDENT INSIDE EDGE M1
V0SAVCIEM1B = CONVEX EDGE V0SAVCIEM1 == 2
V0SAVNEC_NARROW_ERR = INTERNAL V0SAVNCIEM1 V0SAVCIEM1B < 0.018 OPPOSITE
V0SAVNEC_NARROW = DFM COPY V0SAVNEC_NARROW_ERR REGION
V0SAVNEC_NARROW_ED = DFM COPY V0SAVNEC_NARROW_ERR EDGE
V0SAVNEC_WIDE_ERR = INTERNAL V0SAVNCIEM1 V0SAVCIEM1B > 0.018 < 10 OPPOSITE
V0SAVNEC_WIDE = DFM COPY V0SAVNEC_WIDE_ERR REGION
V0SAVNEC_WIDE_ED = DFM COPY V0SAVNEC_WIDE_ERR EDGE
V0SAVNEC_AW = V0SAV WITH EDGE V0SAVCIEM1B
V0SAVNEC = V0SAVNEC_AW NOT V0SAVNEC_NARROW
V0SAVNECCIEM1 = V0SAVNEC COINCIDENT INSIDE EDGE M1
V0SAVNECCIEM1_TIP = CONVEX EDGE V0SAVNECCIEM1 == 2
V0SAVNECCIEM1_SIDE = CONVEX EDGE V0SAVNECCIEM1 < 2
V0SAVNECCIEM1_EE = EXPAND EDGE V0SAVNECCIEM1 OUTSIDE BY 0.005 CORNER FILL
V0SAVNECCIEM1_EENCF = EXPAND EDGE V0SAVNECCIEM1 OUTSIDE BY 0.005
V0SAVNECCIEM1_PROJ = V0SAVNECCIEM1_EENCF NOT TOUCH EDGE V0SAVNEC ENDPOINT ALSO
V0SAVNECMASK = DFM COPY V0SAVNEC V0SAVNECCIEM1_EE
V0SAVWEC_NARROW_ERR = INTERNAL V0SAVNCIEM1 < 0.018 OPPOSITE
V0SAVWEC_NARROW = DFM COPY V0SAVWEC_NARROW_ERR REGION
V0SAVWEC_NARROW_ED = DFM COPY V0SAVWEC_NARROW_ERR EDGE
V0SAVWEC_WIDE_ERR = INTERNAL V0SAVNCIEM1 > 0.018 < 1 OPPOSITE
V0SAVWEC_WIDE = DFM COPY V0SAVWEC_WIDE_ERR REGION
V0SAVWEC_WIDE_ED = DFM COPY V0SAVWEC_WIDE_ERR EDGE
V0SAVWEC_AW = V0SAV NOT WITH EDGE V0SAVCIEM1B
V0SAVWEC = V0SAVWEC_AW NOT V0SAVWEC_NARROW
V0SAVWECCIEM1 = V0SAVWEC COINCIDENT INSIDE EDGE M1
V0SAVWECCIEM1_EE = EXPAND EDGE V0SAVWECCIEM1 OUTSIDE BY 0.005
V0SAVWECCIEM1_PROJ = V0SAVWECCIEM1_EE NOT TOUCH EDGE V0SAVWEC ENDPOINT ALSO
V0SAVWECMASK = DFM COPY V0SAVWEC V0SAVWECCIEM1_EE
V0SAVCIEM1_PROJ = DFM COPY V0SAVNECCIEM1_PROJ V0SAVWECCIEM1_PROJ
V0SAVCIEM1_PROJ_EE2 = EXPAND EDGE V0SAVCIEM1_PROJ OUTSIDE BY 0.022
V0SAVNECTIEEE2 = V0SAVNEC TOUCH INSIDE EDGE V0SAVCIEM1_PROJ_EE2 ENDPOINT ALSO
V0SAVNEC_ALIGNED = V0SAVNEC WITH EDGE V0SAVNECTIEEE2
V0SAVNECMASK_ALIGNED = V0SAVNECMASK ENCLOSE V0SAVNEC_ALIGNED
V0SAVWECTIEEE2 = V0SAVWEC TOUCH INSIDE EDGE V0SAVCIEM1_PROJ_EE2 ENDPOINT ALSO
V0SAVWEC_ALIGNED = V0SAVWEC WITH EDGE V0SAVWECTIEEE2
V0SAVWECMASK_ALIGNED = V0SAVWECMASK ENCLOSE V0SAVWEC_ALIGNED
V0SAV_ALIGNED = DFM COPY V0SAVNEC_ALIGNED V0SAVWEC_ALIGNED
V0SAVMASK_ALIGNED = DFM COPY V0SAVNECMASK_ALIGNED V0SAVWECMASK_ALIGNED
V0SAVMASK_MGBL = WITH NEIGHBOR V0SAVMASK_ALIGNED >= 1 SPACE <= 0.017 SQUARE
V0SAVMASK_MGBL_SU = SIZE V0SAVMASK_MGBL BY 0.0085
V0SAVMASK_MGBL_SUSD = SIZE V0SAVMASK_MGBL_SU BY -0.0085
V0SAVMASK_MGBL_SUSDB = CONVEX EDGE V0SAVMASK_MGBL_SUSD ANGLE1 == 90 ANGLE2 > 90
V0SAVMASK_MGBL_MRGD = V0SAVMASK_MGBL_SUSD NOT WITH EDGE V0SAVMASK_MGBL_SUSDB 
V0MASK = DFM COPY V0SAVNECMASK V0SAVWECMASK V0SAVMASK_MGBL_SUSD
M4_WIDE_PSZ = SIZE M4 BY -0.012
M5_WIDE_PSZ = SIZE M5 BY -0.012
M6_WIDE_PSZ = SIZE M6 BY -0.016
M7_WIDE_PSZ = SIZE M7 BY -0.016
M4_WIDE = SIZE M4_WIDE_PSZ BY 0.012
M5_WIDE = SIZE M5_WIDE_PSZ BY 0.012
M6_WIDE = SIZE M6_WIDE_PSZ BY 0.016
M7_WIDE = SIZE M7_WIDE_PSZ BY 0.016
M1_VE = M1 ANGLE ==90
M1_HE = M1 ANGLE ==0
M2_VE = M2 ANGLE ==90
M2_HE = M2 ANGLE ==0
M3_VE = M3 ANGLE ==90
M3_HE = M3 ANGLE ==0
M4_VE = M4 ANGLE ==90
M4_HE = M4 ANGLE ==0
M5_VE = M5 ANGLE ==90
M5_HE = M5 ANGLE ==0
M6_VE = M6 ANGLE ==90
M6_HE = M6 ANGLE ==0
M7_VE = M7 ANGLE ==90
M7_HE = M7 ANGLE ==0
M8_VE = M8 ANGLE ==90
M8_HE = M8 ANGLE ==0
V1_VE = V1 ANGLE ==90
V1_HE = V1 ANGLE ==0
V2_VE = V2 ANGLE ==90
V2_HE = V2 ANGLE ==0
V3_VE = V3 ANGLE ==90
V3_HE = V3 ANGLE ==0
V4_VE = V4 ANGLE ==90
V4_HE = V4 ANGLE ==0
V5_VE = V5 ANGLE ==90
V5_HE = V5 ANGLE ==0
V6_VE = V6 ANGLE ==90
V6_HE = V6 ANGLE ==0
V7_VE = V7 ANGLE ==90
V7_HE = V7 ANGLE ==0
M4_WIDE_VE = M4_WIDE ANGLE ==90
M5_WIDE_VE = M5_WIDE ANGLE ==90
M6_WIDE_VE = M6_WIDE ANGLE ==90
M7_WIDE_VE = M7_WIDE ANGLE ==90
M4_WIDE_HE = M4_WIDE ANGLE ==0
M5_WIDE_HE = M5_WIDE ANGLE ==0
M6_WIDE_HE = M6_WIDE ANGLE ==0
M7_WIDE_HE = M7_WIDE ANGLE ==0
M1_SIDE = LENGTH M1 > 0.036
M2_SIDE = LENGTH M2 > 0.036
M3_SIDE = LENGTH M3 > 0.036
M1_TIP = LENGTH M1 <= 0.036
M2_TIP = LENGTH M2 <= 0.036
M3_TIP = LENGTH M3 <= 0.036
M1_WIDE_TIP = LENGTH M1 >= 0.024 <= 0.036
M2_WIDE_TIP = LENGTH M2 >= 0.024 <= 0.036
M3_WIDE_TIP = LENGTH M3 >= 0.024 <= 0.036
M1_NARROW_TIP = LENGTH M1 < 0.024
M2_NARROW_TIP = LENGTH M2 < 0.024
M3_NARROW_TIP = LENGTH M3 < 0.024
M4_SIDE = LENGTH M4 > 0.048
M5_SIDE = LENGTH M5 > 0.048
M6_SIDE = LENGTH M6 > 0.064
M7_SIDE = LENGTH M7 > 0.064
M4_TIP = LENGTH M4 <= 0.048
M5_TIP = LENGTH M5 <= 0.048
M6_TIP = LENGTH M6 <= 0.064
M7_TIP = LENGTH M7 <= 0.064
M4_SIDE_VE = M4_SIDE ANGLE == 90
M5_SIDE_VE = M5_SIDE ANGLE == 90
M6_SIDE_VE = M6_SIDE ANGLE == 90
M7_SIDE_VE = M7_SIDE ANGLE == 90
M4_SIDE_HE = M4_SIDE ANGLE == 0
M5_SIDE_HE = M5_SIDE ANGLE == 0
M6_SIDE_HE = M6_SIDE ANGLE == 0
M7_SIDE_HE = M7_SIDE ANGLE == 0
M4_TIP_VE = M4_TIP ANGLE == 90
M5_TIP_VE = M5_TIP ANGLE == 90
M6_TIP_VE = M6_TIP ANGLE == 90
M7_TIP_VE = M7_TIP ANGLE == 90
M4_TIP_HE = M4_TIP ANGLE == 0
M5_TIP_HE = M5_TIP ANGLE == 0
M6_TIP_HE = M6_TIP ANGLE == 0
M7_TIP_HE = M7_TIP ANGLE == 0
M8_TIP = LENGTH M8 < 0.080
M8_SIDE = LENGTH M8 >= 0.080
M9_TIP = LENGTH M9 < 0.080
M9_SIDE = LENGTH M9 >= 0.080
M4_EXTENT = EXTENT M4 
M5_EXTENT = EXTENT M5 
M6_EXTENT = EXTENT M6 
M7_EXTENT = EXTENT M7 
M4_EXTENT_VE = M4_EXTENT ANGLE == 90
M5_EXTENT_VE = M5_EXTENT ANGLE == 90
M6_EXTENT_VE = M6_EXTENT ANGLE == 90
M7_EXTENT_VE = M7_EXTENT ANGLE == 90
M4_EXTENT_HE = M4_EXTENT ANGLE == 0
M5_EXTENT_HE = M5_EXTENT ANGLE == 0
M6_EXTENT_HE = M6_EXTENT ANGLE == 0
M7_EXTENT_HE = M7_EXTENT ANGLE == 0
M4_EXTENT_SU = SIZE M4_EXTENT BY 0.180
M5_EXTENT_SU = SIZE M5_EXTENT BY 0.180
M6_EXTENT_SU = SIZE M6_EXTENT BY 0.180
M7_EXTENT_SU = SIZE M7_EXTENT BY 0.180
M4_EXTENT_SU_VE = M4_EXTENT_SU ANGLE == 90
M5_EXTENT_SU_VE = M5_EXTENT_SU ANGLE == 90
M6_EXTENT_SU_VE = M6_EXTENT_SU ANGLE == 90
M7_EXTENT_SU_VE = M7_EXTENT_SU ANGLE == 90
M4_EXTENT_SU_HE = M4_EXTENT_SU ANGLE == 0
M5_EXTENT_SU_HE = M5_EXTENT_SU ANGLE == 0
M6_EXTENT_SU_HE = M6_EXTENT_SU ANGLE == 0
M7_EXTENT_SU_HE = M7_EXTENT_SU ANGLE == 0
/*
————————————————————————————————————————————————————————————————————————————
			Layer Resolution Specification
————————————————————————————————————————————————————————————————————————————
*/
V1NCIEM2 = V1 NOT COINCIDENT INSIDE EDGE M2
V2NCIEM3 = V2 NOT COINCIDENT INSIDE EDGE M3
V3NCIEM4 = V3 NOT COINCIDENT INSIDE EDGE M4
V4NCIEM5 = V4 NOT COINCIDENT INSIDE EDGE M5
V5NCIEM6 = V5 NOT COINCIDENT INSIDE EDGE M6
V6NCIEM7 = V6 NOT COINCIDENT INSIDE EDGE M7
V7NCIEM8 = V7 NOT COINCIDENT INSIDE EDGE M8
V8NCIEM9 = V8 NOT COINCIDENT INSIDE EDGE M9
V1NCIEM2B = CONVEX EDGE V1NCIEM2 > 0
V2NCIEM3B = CONVEX EDGE V2NCIEM3 > 0
V3NCIEM4B = CONVEX EDGE V3NCIEM4 > 0
V4NCIEM5B = CONVEX EDGE V4NCIEM5 > 0
V5NCIEM6B = CONVEX EDGE V5NCIEM6 > 0
V6NCIEM7B = CONVEX EDGE V6NCIEM7 > 0
V7NCIEM8B = CONVEX EDGE V7NCIEM8 > 0
V8NCIEM9B = CONVEX EDGE V8NCIEM9 > 0
V1SAV = V1 NOT WITH EDGE V1NCIEM2B 
V2SAV = V2 NOT WITH EDGE V2NCIEM3B 
V3SAV = V3 NOT WITH EDGE V3NCIEM4B 
V4SAV = V4 NOT WITH EDGE V4NCIEM5B 
V5SAV = V5 NOT WITH EDGE V5NCIEM6B 
V6SAV = V6 NOT WITH EDGE V6NCIEM7B 
V7SAV = V7 NOT WITH EDGE V7NCIEM8B 
V8SAV = V8 NOT WITH EDGE V8NCIEM9B 
V1SAVCIEM2 = V1SAV COINCIDENT INSIDE EDGE M2
V2SAVCIEM3 = V2SAV COINCIDENT INSIDE EDGE M3
V3SAVCIEM4 = V3SAV COINCIDENT INSIDE EDGE M4
V4SAVCIEM5 = V4SAV COINCIDENT INSIDE EDGE M5
V5SAVCIEM6 = V5SAV COINCIDENT INSIDE EDGE M6
V6SAVCIEM7 = V6SAV COINCIDENT INSIDE EDGE M7
V7SAVCIEM8 = V7SAV COINCIDENT INSIDE EDGE M8
V8SAVCIEM9 = V8SAV COINCIDENT INSIDE EDGE M9
V1SAVNCIEM2 = V1SAV NOT COINCIDENT INSIDE EDGE M2
V2SAVNCIEM3 = V2SAV NOT COINCIDENT INSIDE EDGE M3
V3SAVNCIEM4 = V3SAV NOT COINCIDENT INSIDE EDGE M4
V4SAVNCIEM5 = V4SAV NOT COINCIDENT INSIDE EDGE M5
V5SAVNCIEM6 = V5SAV NOT COINCIDENT INSIDE EDGE M6
V6SAVNCIEM7 = V6SAV NOT COINCIDENT INSIDE EDGE M7
V7SAVNCIEM8 = V7SAV NOT COINCIDENT INSIDE EDGE M8
V8SAVNCIEM9 = V8SAV NOT COINCIDENT INSIDE EDGE M9
V1SAVCIEM2B = CONVEX EDGE V1SAVCIEM2 == 2
V2SAVCIEM3B = CONVEX EDGE V2SAVCIEM3 == 2
V3SAVCIEM4B = CONVEX EDGE V3SAVCIEM4 == 2
V4SAVCIEM5B = CONVEX EDGE V4SAVCIEM5 == 2
V5SAVCIEM6B = CONVEX EDGE V5SAVCIEM6 == 2
V6SAVCIEM7B = CONVEX EDGE V6SAVCIEM7 == 2
V7SAVCIEM8B = CONVEX EDGE V7SAVCIEM8 == 2
V8SAVCIEM9B = CONVEX EDGE V8SAVCIEM9 == 2
V1SAVNEC_NARROW_ERR = INTERNAL V1SAVNCIEM2 V1SAVCIEM2B < 0.018 OPPOSITE
V2SAVNEC_NARROW_ERR = INTERNAL V2SAVNCIEM3 V2SAVCIEM3B < 0.018 OPPOSITE
V3SAVNEC_NARROW_ERR = INTERNAL V3SAVNCIEM4 V3SAVCIEM4B < 0.018 OPPOSITE
V4SAVNEC_NARROW_ERR = INTERNAL V4SAVNCIEM5 V4SAVCIEM5B < 0.024 OPPOSITE
V5SAVNEC_NARROW_ERR = INTERNAL V5SAVNCIEM6 V5SAVCIEM6B < 0.024 OPPOSITE
V6SAVNEC_NARROW_ERR = INTERNAL V6SAVNCIEM7 V6SAVCIEM7B < 0.032 OPPOSITE
V7SAVNEC_NARROW_ERR = INTERNAL V7SAVNCIEM8 V7SAVCIEM8B < 0.032 OPPOSITE
V8SAVNEC_NARROW_ERR = INTERNAL V8SAVNCIEM9 V8SAVCIEM9B < 0.040 OPPOSITE
V1SAVNEC_NARROW = DFM COPY V1SAVNEC_NARROW_ERR REGION
V2SAVNEC_NARROW = DFM COPY V2SAVNEC_NARROW_ERR REGION
V3SAVNEC_NARROW = DFM COPY V3SAVNEC_NARROW_ERR REGION
V4SAVNEC_NARROW = DFM COPY V4SAVNEC_NARROW_ERR REGION
V5SAVNEC_NARROW = DFM COPY V5SAVNEC_NARROW_ERR REGION
V6SAVNEC_NARROW = DFM COPY V6SAVNEC_NARROW_ERR REGION
V7SAVNEC_NARROW = DFM COPY V7SAVNEC_NARROW_ERR REGION
V8SAVNEC_NARROW = DFM COPY V8SAVNEC_NARROW_ERR REGION
V1SAVNEC_NARROW_ED = DFM COPY V1SAVNEC_NARROW_ERR EDGE
V2SAVNEC_NARROW_ED = DFM COPY V2SAVNEC_NARROW_ERR EDGE
V3SAVNEC_NARROW_ED = DFM COPY V3SAVNEC_NARROW_ERR EDGE
V4SAVNEC_NARROW_ED = DFM COPY V4SAVNEC_NARROW_ERR EDGE
V5SAVNEC_NARROW_ED = DFM COPY V5SAVNEC_NARROW_ERR EDGE
V6SAVNEC_NARROW_ED = DFM COPY V6SAVNEC_NARROW_ERR EDGE
V7SAVNEC_NARROW_ED = DFM COPY V7SAVNEC_NARROW_ERR EDGE
V8SAVNEC_NARROW_ED = DFM COPY V8SAVNEC_NARROW_ERR EDGE
V1SAVNEC_WIDE_ERR = INTERNAL V1SAVNCIEM2 V1SAVCIEM2B > 0.018 < 10 OPPOSITE
V2SAVNEC_WIDE_ERR = INTERNAL V2SAVNCIEM3 V2SAVCIEM3B > 0.018 < 10 OPPOSITE
V3SAVNEC_WIDE_ERR = INTERNAL V3SAVNCIEM4 V3SAVCIEM4B > 0.018 < 10 OPPOSITE
V4SAVNEC_WIDE_ERR = INTERNAL V4SAVNCIEM5 V4SAVCIEM5B > 0.024 < 10 OPPOSITE
V5SAVNEC_WIDE_ERR = INTERNAL V5SAVNCIEM6 V5SAVCIEM6B > 0.024 < 10 OPPOSITE
V6SAVNEC_WIDE_ERR = INTERNAL V6SAVNCIEM7 V6SAVCIEM7B > 0.032 < 10 OPPOSITE
V7SAVNEC_WIDE_ERR = INTERNAL V7SAVNCIEM8 V7SAVCIEM8B > 0.032 < 10 OPPOSITE
V8SAVNEC_WIDE_ERR = INTERNAL V8SAVNCIEM9 V8SAVCIEM9B > 0.040 < 10 OPPOSITE
V1SAVNEC_WIDE = DFM COPY V1SAVNEC_WIDE_ERR REGION
V2SAVNEC_WIDE = DFM COPY V2SAVNEC_WIDE_ERR REGION
V3SAVNEC_WIDE = DFM COPY V3SAVNEC_WIDE_ERR REGION
V4SAVNEC_WIDE = DFM COPY V4SAVNEC_WIDE_ERR REGION
V5SAVNEC_WIDE = DFM COPY V5SAVNEC_WIDE_ERR REGION
V6SAVNEC_WIDE = DFM COPY V6SAVNEC_WIDE_ERR REGION
V7SAVNEC_WIDE = DFM COPY V7SAVNEC_WIDE_ERR REGION
V8SAVNEC_WIDE = DFM COPY V8SAVNEC_WIDE_ERR REGION
V1SAVNEC_WIDE_ED = DFM COPY V1SAVNEC_WIDE_ERR EDGE
V2SAVNEC_WIDE_ED = DFM COPY V2SAVNEC_WIDE_ERR EDGE
V3SAVNEC_WIDE_ED = DFM COPY V3SAVNEC_WIDE_ERR EDGE
V4SAVNEC_WIDE_ED = DFM COPY V4SAVNEC_WIDE_ERR EDGE
V5SAVNEC_WIDE_ED = DFM COPY V5SAVNEC_WIDE_ERR EDGE
V6SAVNEC_WIDE_ED = DFM COPY V6SAVNEC_WIDE_ERR EDGE
V7SAVNEC_WIDE_ED = DFM COPY V7SAVNEC_WIDE_ERR EDGE
V8SAVNEC_WIDE_ED = DFM COPY V8SAVNEC_WIDE_ERR EDGE
V1SAVNEC_AW = V1SAV WITH EDGE V1SAVCIEM2B
V2SAVNEC_AW = V2SAV WITH EDGE V2SAVCIEM3B
V3SAVNEC_AW = V3SAV WITH EDGE V3SAVCIEM4B
V4SAVNEC_AW = V4SAV WITH EDGE V4SAVCIEM5B
V5SAVNEC_AW = V5SAV WITH EDGE V5SAVCIEM6B
V6SAVNEC_AW = V6SAV WITH EDGE V6SAVCIEM7B
V7SAVNEC_AW = V7SAV WITH EDGE V7SAVCIEM8B
V8SAVNEC_AW = V8SAV WITH EDGE V8SAVCIEM9B
V1SAVNEC = V1SAVNEC_AW NOT V1SAVNEC_NARROW
V2SAVNEC = V2SAVNEC_AW NOT V2SAVNEC_NARROW
V3SAVNEC = V3SAVNEC_AW NOT V3SAVNEC_NARROW
V4SAVNEC = V4SAVNEC_AW NOT V4SAVNEC_NARROW
V5SAVNEC = V5SAVNEC_AW NOT V5SAVNEC_NARROW
V6SAVNEC = V6SAVNEC_AW NOT V6SAVNEC_NARROW
V7SAVNEC = V7SAVNEC_AW NOT V7SAVNEC_NARROW
V8SAVNEC = V8SAVNEC_AW NOT V8SAVNEC_NARROW
V1SAVNECCIEM2 = V1SAVNEC COINCIDENT INSIDE EDGE M2
V2SAVNECCIEM3 = V2SAVNEC COINCIDENT INSIDE EDGE M3
V3SAVNECCIEM4 = V3SAVNEC COINCIDENT INSIDE EDGE M4
V4SAVNECCIEM5 = V4SAVNEC COINCIDENT INSIDE EDGE M5
V5SAVNECCIEM6 = V5SAVNEC COINCIDENT INSIDE EDGE M6
V6SAVNECCIEM7 = V6SAVNEC COINCIDENT INSIDE EDGE M7
V7SAVNECCIEM8 = V7SAVNEC COINCIDENT INSIDE EDGE M8
V8SAVNECCIEM9 = V8SAVNEC COINCIDENT INSIDE EDGE M9
V1SAVNECCIEM2_TIP = CONVEX EDGE V1SAVNECCIEM2 == 2
V2SAVNECCIEM3_TIP = CONVEX EDGE V2SAVNECCIEM3 == 2
V3SAVNECCIEM4_TIP = CONVEX EDGE V3SAVNECCIEM4 == 2
V4SAVNECCIEM5_TIP = CONVEX EDGE V4SAVNECCIEM5 == 2
V5SAVNECCIEM6_TIP = CONVEX EDGE V5SAVNECCIEM6 == 2
V6SAVNECCIEM7_TIP = CONVEX EDGE V6SAVNECCIEM7 == 2
V7SAVNECCIEM8_TIP = CONVEX EDGE V7SAVNECCIEM8 == 2
V8SAVNECCIEM9_TIP = CONVEX EDGE V8SAVNECCIEM9 == 2
V1SAVNECCIEM2_SIDE = CONVEX EDGE V1SAVNECCIEM2 < 2
V2SAVNECCIEM3_SIDE = CONVEX EDGE V2SAVNECCIEM3 < 2
V3SAVNECCIEM4_SIDE = CONVEX EDGE V3SAVNECCIEM4 < 2
V4SAVNECCIEM5_SIDE = CONVEX EDGE V4SAVNECCIEM5 < 2
V5SAVNECCIEM6_SIDE = CONVEX EDGE V5SAVNECCIEM6 < 2
V6SAVNECCIEM7_SIDE = CONVEX EDGE V6SAVNECCIEM7 < 2
V7SAVNECCIEM8_SIDE = CONVEX EDGE V7SAVNECCIEM8 < 2
V8SAVNECCIEM9_SIDE = CONVEX EDGE V8SAVNECCIEM9 < 2
V1SAVNECCIEM2_EE = EXPAND EDGE V1SAVNECCIEM2 OUTSIDE BY 0.005 CORNER FILL
V2SAVNECCIEM3_EE = EXPAND EDGE V2SAVNECCIEM3 OUTSIDE BY 0.005 CORNER FILL
V3SAVNECCIEM4_EE = EXPAND EDGE V3SAVNECCIEM4 OUTSIDE BY 0.005 CORNER FILL
V4SAVNECCIEM5_EE = EXPAND EDGE V4SAVNECCIEM5 OUTSIDE BY 0.007 CORNER FILL
V5SAVNECCIEM6_EE = EXPAND EDGE V5SAVNECCIEM6 OUTSIDE BY 0.007 CORNER FILL
V6SAVNECCIEM7_EE = EXPAND EDGE V6SAVNECCIEM7 OUTSIDE BY 0.007 CORNER FILL
V7SAVNECCIEM8_EE = EXPAND EDGE V7SAVNECCIEM8 OUTSIDE BY 0.007 CORNER FILL
V8SAVNECCIEM9_EE = EXPAND EDGE V8SAVNECCIEM9 OUTSIDE BY 0.007 CORNER FILL
V1SAVNECCIEM2_EENCF = EXPAND EDGE V1SAVNECCIEM2 OUTSIDE BY 0.005
V2SAVNECCIEM3_EENCF = EXPAND EDGE V2SAVNECCIEM3 OUTSIDE BY 0.005
V3SAVNECCIEM4_EENCF = EXPAND EDGE V3SAVNECCIEM4 OUTSIDE BY 0.005
V4SAVNECCIEM5_EENCF = EXPAND EDGE V4SAVNECCIEM5 OUTSIDE BY 0.007
V5SAVNECCIEM6_EENCF = EXPAND EDGE V5SAVNECCIEM6 OUTSIDE BY 0.007
V6SAVNECCIEM7_EENCF = EXPAND EDGE V6SAVNECCIEM7 OUTSIDE BY 0.007
V7SAVNECCIEM8_EENCF = EXPAND EDGE V7SAVNECCIEM8 OUTSIDE BY 0.007
V8SAVNECCIEM9_EENCF = EXPAND EDGE V8SAVNECCIEM9 OUTSIDE BY 0.007
V1SAVNECCIEM2_PROJ = V1SAVNECCIEM2_EENCF NOT TOUCH EDGE V1SAVNEC ENDPOINT ALSO
V2SAVNECCIEM3_PROJ = V2SAVNECCIEM3_EENCF NOT TOUCH EDGE V2SAVNEC ENDPOINT ALSO
V3SAVNECCIEM4_PROJ = V3SAVNECCIEM4_EENCF NOT TOUCH EDGE V3SAVNEC ENDPOINT ALSO
V4SAVNECCIEM5_PROJ = V4SAVNECCIEM5_EENCF NOT TOUCH EDGE V4SAVNEC ENDPOINT ALSO
V5SAVNECCIEM6_PROJ = V5SAVNECCIEM6_EENCF NOT TOUCH EDGE V5SAVNEC ENDPOINT ALSO
V6SAVNECCIEM7_PROJ = V6SAVNECCIEM7_EENCF NOT TOUCH EDGE V6SAVNEC ENDPOINT ALSO
V7SAVNECCIEM8_PROJ = V7SAVNECCIEM8_EENCF NOT TOUCH EDGE V7SAVNEC ENDPOINT ALSO
V8SAVNECCIEM9_PROJ = V8SAVNECCIEM9_EENCF NOT TOUCH EDGE V8SAVNEC ENDPOINT ALSO
V1SAVNECMASK = DFM COPY V1SAVNEC V1SAVNECCIEM2_EE
V2SAVNECMASK = DFM COPY V2SAVNEC V2SAVNECCIEM3_EE
V3SAVNECMASK = DFM COPY V3SAVNEC V3SAVNECCIEM4_EE
V4SAVNECMASK = DFM COPY V4SAVNEC V4SAVNECCIEM5_EE
V5SAVNECMASK = DFM COPY V5SAVNEC V5SAVNECCIEM6_EE
V6SAVNECMASK = DFM COPY V6SAVNEC V6SAVNECCIEM7_EE
V7SAVNECMASK = DFM COPY V7SAVNEC V7SAVNECCIEM8_EE
V8SAVNECMASK = DFM COPY V8SAVNEC V8SAVNECCIEM9_EE
V1SAVWEC_NARROW_ERR = INTERNAL V1SAVNCIEM2 < 0.018 OPPOSITE
V2SAVWEC_NARROW_ERR = INTERNAL V2SAVNCIEM3 < 0.018 OPPOSITE
V3SAVWEC_NARROW_ERR = INTERNAL V3SAVNCIEM4 < 0.018 OPPOSITE
V4SAVWEC_NARROW_ERR = INTERNAL V4SAVNCIEM5 < 0.024 OPPOSITE
V5SAVWEC_NARROW_ERR = INTERNAL V5SAVNCIEM6 < 0.024 OPPOSITE
V6SAVWEC_NARROW_ERR = INTERNAL V6SAVNCIEM7 < 0.032 OPPOSITE
V7SAVWEC_NARROW_ERR = INTERNAL V7SAVNCIEM8 < 0.032 OPPOSITE
V8SAVWEC_NARROW_ERR = INTERNAL V8SAVNCIEM9 < 0.040 OPPOSITE
V1SAVWEC_NARROW = DFM COPY V1SAVWEC_NARROW_ERR REGION
V2SAVWEC_NARROW = DFM COPY V2SAVWEC_NARROW_ERR REGION
V3SAVWEC_NARROW = DFM COPY V3SAVWEC_NARROW_ERR REGION
V4SAVWEC_NARROW = DFM COPY V4SAVWEC_NARROW_ERR REGION
V5SAVWEC_NARROW = DFM COPY V5SAVWEC_NARROW_ERR REGION
V6SAVWEC_NARROW = DFM COPY V6SAVWEC_NARROW_ERR REGION
V7SAVWEC_NARROW = DFM COPY V7SAVWEC_NARROW_ERR REGION
V8SAVWEC_NARROW = DFM COPY V8SAVWEC_NARROW_ERR REGION
V1SAVWEC_NARROW_ED = DFM COPY V1SAVWEC_NARROW_ERR EDGE
V2SAVWEC_NARROW_ED = DFM COPY V2SAVWEC_NARROW_ERR EDGE
V3SAVWEC_NARROW_ED = DFM COPY V3SAVWEC_NARROW_ERR EDGE
V4SAVWEC_NARROW_ED = DFM COPY V4SAVWEC_NARROW_ERR EDGE
V5SAVWEC_NARROW_ED = DFM COPY V5SAVWEC_NARROW_ERR EDGE
V6SAVWEC_NARROW_ED = DFM COPY V6SAVWEC_NARROW_ERR EDGE
V7SAVWEC_NARROW_ED = DFM COPY V7SAVWEC_NARROW_ERR EDGE
V8SAVWEC_NARROW_ED = DFM COPY V8SAVWEC_NARROW_ERR EDGE
V1SAVWEC_WIDE_ERR = INTERNAL V1SAVNCIEM2 > 0.018 < 1 OPPOSITE
V2SAVWEC_WIDE_ERR = INTERNAL V2SAVNCIEM3 > 0.018 < 1 OPPOSITE
V3SAVWEC_WIDE_ERR = INTERNAL V3SAVNCIEM4 > 0.018 < 1 OPPOSITE
V4SAVWEC_WIDE_ERR = INTERNAL V4SAVNCIEM5 > 0.024 < 1 OPPOSITE
V5SAVWEC_WIDE_ERR = INTERNAL V5SAVNCIEM6 > 0.024 < 1 OPPOSITE
V6SAVWEC_WIDE_ERR = INTERNAL V6SAVNCIEM7 > 0.032 < 1 OPPOSITE
V7SAVWEC_WIDE_ERR = INTERNAL V7SAVNCIEM8 > 0.032 < 1 OPPOSITE
V8SAVWEC_WIDE_ERR = INTERNAL V8SAVNCIEM9 > 0.040 < 1 OPPOSITE
V1SAVWEC_WIDE = DFM COPY V1SAVWEC_WIDE_ERR REGION
V2SAVWEC_WIDE = DFM COPY V2SAVWEC_WIDE_ERR REGION
V3SAVWEC_WIDE = DFM COPY V3SAVWEC_WIDE_ERR REGION
V4SAVWEC_WIDE = DFM COPY V4SAVWEC_WIDE_ERR REGION
V5SAVWEC_WIDE = DFM COPY V5SAVWEC_WIDE_ERR REGION
V6SAVWEC_WIDE = DFM COPY V6SAVWEC_WIDE_ERR REGION
V7SAVWEC_WIDE = DFM COPY V7SAVWEC_WIDE_ERR REGION
V8SAVWEC_WIDE = DFM COPY V8SAVWEC_WIDE_ERR REGION
V1SAVWEC_WIDE_ED = DFM COPY V1SAVWEC_WIDE_ERR EDGE
V2SAVWEC_WIDE_ED = DFM COPY V2SAVWEC_WIDE_ERR EDGE
V3SAVWEC_WIDE_ED = DFM COPY V3SAVWEC_WIDE_ERR EDGE
V4SAVWEC_WIDE_ED = DFM COPY V4SAVWEC_WIDE_ERR EDGE
V5SAVWEC_WIDE_ED = DFM COPY V5SAVWEC_WIDE_ERR EDGE
V6SAVWEC_WIDE_ED = DFM COPY V6SAVWEC_WIDE_ERR EDGE
V7SAVWEC_WIDE_ED = DFM COPY V7SAVWEC_WIDE_ERR EDGE
V8SAVWEC_WIDE_ED = DFM COPY V8SAVWEC_WIDE_ERR EDGE
V1SAVWEC_AW = V1SAV NOT WITH EDGE V1SAVCIEM2B
V2SAVWEC_AW = V2SAV NOT WITH EDGE V2SAVCIEM3B
V3SAVWEC_AW = V3SAV NOT WITH EDGE V3SAVCIEM4B
V4SAVWEC_AW = V4SAV NOT WITH EDGE V4SAVCIEM5B
V5SAVWEC_AW = V5SAV NOT WITH EDGE V5SAVCIEM6B
V6SAVWEC_AW = V6SAV NOT WITH EDGE V6SAVCIEM7B
V7SAVWEC_AW = V7SAV NOT WITH EDGE V7SAVCIEM8B
V8SAVWEC_AW = V8SAV NOT WITH EDGE V8SAVCIEM9B
V1SAVWEC = V1SAVWEC_AW NOT V1SAVWEC_NARROW
V2SAVWEC = V2SAVWEC_AW NOT V2SAVWEC_NARROW
V3SAVWEC = V3SAVWEC_AW NOT V3SAVWEC_NARROW
V4SAVWEC = V4SAVWEC_AW NOT V4SAVWEC_NARROW
V5SAVWEC = V5SAVWEC_AW NOT V5SAVWEC_NARROW
V6SAVWEC = V6SAVWEC_AW NOT V6SAVWEC_NARROW
V7SAVWEC = V7SAVWEC_AW NOT V7SAVWEC_NARROW
V8SAVWEC = V8SAVWEC_AW NOT V8SAVWEC_NARROW
V1SAVWECCIEM2 = V1SAVWEC COINCIDENT INSIDE EDGE M2
V2SAVWECCIEM3 = V2SAVWEC COINCIDENT INSIDE EDGE M3
V3SAVWECCIEM4 = V3SAVWEC COINCIDENT INSIDE EDGE M4
V4SAVWECCIEM5 = V4SAVWEC COINCIDENT INSIDE EDGE M5
V5SAVWECCIEM6 = V5SAVWEC COINCIDENT INSIDE EDGE M6
V6SAVWECCIEM7 = V6SAVWEC COINCIDENT INSIDE EDGE M7
V7SAVWECCIEM8 = V7SAVWEC COINCIDENT INSIDE EDGE M8
V8SAVWECCIEM9 = V8SAVWEC COINCIDENT INSIDE EDGE M9
V1SAVWECCIEM2_EE = EXPAND EDGE V1SAVWECCIEM2 OUTSIDE BY 0.005
V2SAVWECCIEM3_EE = EXPAND EDGE V2SAVWECCIEM3 OUTSIDE BY 0.005
V3SAVWECCIEM4_EE = EXPAND EDGE V3SAVWECCIEM4 OUTSIDE BY 0.005
V4SAVWECCIEM5_EE = EXPAND EDGE V4SAVWECCIEM5 OUTSIDE BY 0.007
V5SAVWECCIEM6_EE = EXPAND EDGE V5SAVWECCIEM6 OUTSIDE BY 0.007
V6SAVWECCIEM7_EE = EXPAND EDGE V6SAVWECCIEM7 OUTSIDE BY 0.007
V7SAVWECCIEM8_EE = EXPAND EDGE V7SAVWECCIEM8 OUTSIDE BY 0.007
V8SAVWECCIEM9_EE = EXPAND EDGE V8SAVWECCIEM9 OUTSIDE BY 0.007
V1SAVWECCIEM2_PROJ = V1SAVWECCIEM2_EE NOT TOUCH EDGE V1SAVWEC ENDPOINT ALSO
V2SAVWECCIEM3_PROJ = V2SAVWECCIEM3_EE NOT TOUCH EDGE V2SAVWEC ENDPOINT ALSO
V3SAVWECCIEM4_PROJ = V3SAVWECCIEM4_EE NOT TOUCH EDGE V3SAVWEC ENDPOINT ALSO
V4SAVWECCIEM5_PROJ = V4SAVWECCIEM5_EE NOT TOUCH EDGE V4SAVWEC ENDPOINT ALSO
V5SAVWECCIEM6_PROJ = V5SAVWECCIEM6_EE NOT TOUCH EDGE V5SAVWEC ENDPOINT ALSO
V6SAVWECCIEM7_PROJ = V6SAVWECCIEM7_EE NOT TOUCH EDGE V6SAVWEC ENDPOINT ALSO
V7SAVWECCIEM8_PROJ = V7SAVWECCIEM8_EE NOT TOUCH EDGE V7SAVWEC ENDPOINT ALSO
V8SAVWECCIEM9_PROJ = V8SAVWECCIEM9_EE NOT TOUCH EDGE V8SAVWEC ENDPOINT ALSO
V1SAVWECMASK = DFM COPY V1SAVWEC V1SAVWECCIEM2_EE
V2SAVWECMASK = DFM COPY V2SAVWEC V2SAVWECCIEM3_EE
V3SAVWECMASK = DFM COPY V3SAVWEC V3SAVWECCIEM4_EE
V4SAVWECMASK = DFM COPY V4SAVWEC V4SAVWECCIEM5_EE
V5SAVWECMASK = DFM COPY V5SAVWEC V5SAVWECCIEM6_EE
V6SAVWECMASK = DFM COPY V6SAVWEC V6SAVWECCIEM7_EE
V7SAVWECMASK = DFM COPY V7SAVWEC V7SAVWECCIEM8_EE
V8SAVWECMASK = DFM COPY V8SAVWEC V8SAVWECCIEM9_EE
V1SAVCIEM2_PROJ = DFM COPY V1SAVNECCIEM2_PROJ V1SAVWECCIEM2_PROJ
V2SAVCIEM3_PROJ = DFM COPY V2SAVNECCIEM3_PROJ V2SAVWECCIEM3_PROJ
V3SAVCIEM4_PROJ = DFM COPY V3SAVNECCIEM4_PROJ V3SAVWECCIEM4_PROJ
V4SAVCIEM5_PROJ = DFM COPY V4SAVNECCIEM5_PROJ V4SAVWECCIEM5_PROJ
V5SAVCIEM6_PROJ = DFM COPY V5SAVNECCIEM6_PROJ V5SAVWECCIEM6_PROJ
V6SAVCIEM7_PROJ = DFM COPY V6SAVNECCIEM7_PROJ V6SAVWECCIEM7_PROJ
V7SAVCIEM8_PROJ = DFM COPY V7SAVNECCIEM8_PROJ V7SAVWECCIEM8_PROJ
V8SAVCIEM9_PROJ = DFM COPY V8SAVNECCIEM9_PROJ V8SAVWECCIEM9_PROJ
V1SAVCIEM2_PROJ_EE2 = EXPAND EDGE V1SAVCIEM2_PROJ OUTSIDE BY 0.022
V2SAVCIEM3_PROJ_EE2 = EXPAND EDGE V2SAVCIEM3_PROJ OUTSIDE BY 0.022
V3SAVCIEM4_PROJ_EE2 = EXPAND EDGE V3SAVCIEM4_PROJ OUTSIDE BY 0.022
V4SAVCIEM5_PROJ_EE2 = EXPAND EDGE V4SAVCIEM5_PROJ OUTSIDE BY 0.030
V5SAVCIEM6_PROJ_EE2 = EXPAND EDGE V5SAVCIEM6_PROJ OUTSIDE BY 0.030
V6SAVCIEM7_PROJ_EE2 = EXPAND EDGE V6SAVCIEM7_PROJ OUTSIDE BY 0.038
V7SAVCIEM8_PROJ_EE2 = EXPAND EDGE V7SAVCIEM8_PROJ OUTSIDE BY 0.038
V8SAVCIEM9_PROJ_EE2 = EXPAND EDGE V8SAVCIEM9_PROJ OUTSIDE BY 0.046
V1SAVNECTIEEE2 = V1SAVNEC TOUCH INSIDE EDGE V1SAVCIEM2_PROJ_EE2 ENDPOINT ALSO
V2SAVNECTIEEE2 = V2SAVNEC TOUCH INSIDE EDGE V2SAVCIEM3_PROJ_EE2 ENDPOINT ALSO
V3SAVNECTIEEE2 = V3SAVNEC TOUCH INSIDE EDGE V3SAVCIEM4_PROJ_EE2 ENDPOINT ALSO
V4SAVNECTIEEE2 = V4SAVNEC TOUCH INSIDE EDGE V4SAVCIEM5_PROJ_EE2 ENDPOINT ALSO
V5SAVNECTIEEE2 = V5SAVNEC TOUCH INSIDE EDGE V5SAVCIEM6_PROJ_EE2 ENDPOINT ALSO
V6SAVNECTIEEE2 = V6SAVNEC TOUCH INSIDE EDGE V6SAVCIEM7_PROJ_EE2 ENDPOINT ALSO
V7SAVNECTIEEE2 = V7SAVNEC TOUCH INSIDE EDGE V7SAVCIEM8_PROJ_EE2 ENDPOINT ALSO
V8SAVNECTIEEE2 = V8SAVNEC TOUCH INSIDE EDGE V8SAVCIEM9_PROJ_EE2 ENDPOINT ALSO
V1SAVNEC_ALIGNED = V1SAVNEC WITH EDGE V1SAVNECTIEEE2
V2SAVNEC_ALIGNED = V2SAVNEC WITH EDGE V2SAVNECTIEEE2
V3SAVNEC_ALIGNED = V3SAVNEC WITH EDGE V3SAVNECTIEEE2
V4SAVNEC_ALIGNED = V4SAVNEC WITH EDGE V4SAVNECTIEEE2
V5SAVNEC_ALIGNED = V5SAVNEC WITH EDGE V5SAVNECTIEEE2
V6SAVNEC_ALIGNED = V6SAVNEC WITH EDGE V6SAVNECTIEEE2
V7SAVNEC_ALIGNED = V7SAVNEC WITH EDGE V7SAVNECTIEEE2
V8SAVNEC_ALIGNED = V8SAVNEC WITH EDGE V8SAVNECTIEEE2
V1SAVNECMASK_ALIGNED = V1SAVNECMASK ENCLOSE V1SAVNEC_ALIGNED
V2SAVNECMASK_ALIGNED = V2SAVNECMASK ENCLOSE V2SAVNEC_ALIGNED
V3SAVNECMASK_ALIGNED = V3SAVNECMASK ENCLOSE V3SAVNEC_ALIGNED
V4SAVNECMASK_ALIGNED = V4SAVNECMASK ENCLOSE V4SAVNEC_ALIGNED
V5SAVNECMASK_ALIGNED = V5SAVNECMASK ENCLOSE V5SAVNEC_ALIGNED
V6SAVNECMASK_ALIGNED = V6SAVNECMASK ENCLOSE V6SAVNEC_ALIGNED
V7SAVNECMASK_ALIGNED = V7SAVNECMASK ENCLOSE V7SAVNEC_ALIGNED
V8SAVNECMASK_ALIGNED = V8SAVNECMASK ENCLOSE V8SAVNEC_ALIGNED
V1SAVWECTIEEE2 = V1SAVWEC TOUCH INSIDE EDGE V1SAVCIEM2_PROJ_EE2 ENDPOINT ALSO
V2SAVWECTIEEE2 = V2SAVWEC TOUCH INSIDE EDGE V2SAVCIEM3_PROJ_EE2 ENDPOINT ALSO
V3SAVWECTIEEE2 = V3SAVWEC TOUCH INSIDE EDGE V3SAVCIEM4_PROJ_EE2 ENDPOINT ALSO
V4SAVWECTIEEE2 = V4SAVWEC TOUCH INSIDE EDGE V4SAVCIEM5_PROJ_EE2 ENDPOINT ALSO
V5SAVWECTIEEE2 = V5SAVWEC TOUCH INSIDE EDGE V5SAVCIEM6_PROJ_EE2 ENDPOINT ALSO
V6SAVWECTIEEE2 = V6SAVWEC TOUCH INSIDE EDGE V6SAVCIEM7_PROJ_EE2 ENDPOINT ALSO
V7SAVWECTIEEE2 = V7SAVWEC TOUCH INSIDE EDGE V7SAVCIEM8_PROJ_EE2 ENDPOINT ALSO
V8SAVWECTIEEE2 = V8SAVWEC TOUCH INSIDE EDGE V8SAVCIEM9_PROJ_EE2 ENDPOINT ALSO
V1SAVWEC_ALIGNED = V1SAVWEC WITH EDGE V1SAVWECTIEEE2
V2SAVWEC_ALIGNED = V2SAVWEC WITH EDGE V2SAVWECTIEEE2
V3SAVWEC_ALIGNED = V3SAVWEC WITH EDGE V3SAVWECTIEEE2
V4SAVWEC_ALIGNED = V4SAVWEC WITH EDGE V4SAVWECTIEEE2
V5SAVWEC_ALIGNED = V5SAVWEC WITH EDGE V5SAVWECTIEEE2
V6SAVWEC_ALIGNED = V6SAVWEC WITH EDGE V6SAVWECTIEEE2
V7SAVWEC_ALIGNED = V7SAVWEC WITH EDGE V7SAVWECTIEEE2
V8SAVWEC_ALIGNED = V8SAVWEC WITH EDGE V8SAVWECTIEEE2
V1SAVWECMASK_ALIGNED = V1SAVWECMASK ENCLOSE V1SAVWEC_ALIGNED
V2SAVWECMASK_ALIGNED = V2SAVWECMASK ENCLOSE V2SAVWEC_ALIGNED
V3SAVWECMASK_ALIGNED = V3SAVWECMASK ENCLOSE V3SAVWEC_ALIGNED
V4SAVWECMASK_ALIGNED = V4SAVWECMASK ENCLOSE V4SAVWEC_ALIGNED
V5SAVWECMASK_ALIGNED = V5SAVWECMASK ENCLOSE V5SAVWEC_ALIGNED
V6SAVWECMASK_ALIGNED = V6SAVWECMASK ENCLOSE V6SAVWEC_ALIGNED
V7SAVWECMASK_ALIGNED = V7SAVWECMASK ENCLOSE V7SAVWEC_ALIGNED
V8SAVWECMASK_ALIGNED = V8SAVWECMASK ENCLOSE V8SAVWEC_ALIGNED
V1SAV_ALIGNED = DFM COPY V1SAVNEC_ALIGNED V1SAVWEC_ALIGNED
V2SAV_ALIGNED = DFM COPY V2SAVNEC_ALIGNED V2SAVWEC_ALIGNED
V3SAV_ALIGNED = DFM COPY V3SAVNEC_ALIGNED V3SAVWEC_ALIGNED
V4SAV_ALIGNED = DFM COPY V4SAVNEC_ALIGNED V4SAVWEC_ALIGNED
V5SAV_ALIGNED = DFM COPY V5SAVNEC_ALIGNED V5SAVWEC_ALIGNED
V6SAV_ALIGNED = DFM COPY V6SAVNEC_ALIGNED V6SAVWEC_ALIGNED
V7SAV_ALIGNED = DFM COPY V7SAVNEC_ALIGNED V7SAVWEC_ALIGNED
V8SAV_ALIGNED = DFM COPY V8SAVNEC_ALIGNED V8SAVWEC_ALIGNED
V1SAVMASK_ALIGNED = DFM COPY V1SAVNECMASK_ALIGNED V1SAVWECMASK_ALIGNED
V2SAVMASK_ALIGNED = DFM COPY V2SAVNECMASK_ALIGNED V2SAVWECMASK_ALIGNED
V3SAVMASK_ALIGNED = DFM COPY V3SAVNECMASK_ALIGNED V3SAVWECMASK_ALIGNED
V4SAVMASK_ALIGNED = DFM COPY V4SAVNECMASK_ALIGNED V4SAVWECMASK_ALIGNED
V5SAVMASK_ALIGNED = DFM COPY V5SAVNECMASK_ALIGNED V5SAVWECMASK_ALIGNED
V6SAVMASK_ALIGNED = DFM COPY V6SAVNECMASK_ALIGNED V6SAVWECMASK_ALIGNED
V7SAVMASK_ALIGNED = DFM COPY V7SAVNECMASK_ALIGNED V7SAVWECMASK_ALIGNED
V8SAVMASK_ALIGNED = DFM COPY V8SAVNECMASK_ALIGNED V8SAVWECMASK_ALIGNED
V1SAVMASK_MGBL = WITH NEIGHBOR V1SAVMASK_ALIGNED >= 1 SPACE <= 0.017 SQUARE
V2SAVMASK_MGBL = WITH NEIGHBOR V2SAVMASK_ALIGNED >= 1 SPACE <= 0.017 SQUARE
V3SAVMASK_MGBL = WITH NEIGHBOR V3SAVMASK_ALIGNED >= 1 SPACE <= 0.017 SQUARE
V4SAVMASK_MGBL = WITH NEIGHBOR V4SAVMASK_ALIGNED >= 1 SPACE <= 0.023 SQUARE
V5SAVMASK_MGBL = WITH NEIGHBOR V5SAVMASK_ALIGNED >= 1 SPACE <= 0.023 SQUARE
V6SAVMASK_MGBL = WITH NEIGHBOR V6SAVMASK_ALIGNED >= 1 SPACE <= 0.031 SQUARE
V7SAVMASK_MGBL = WITH NEIGHBOR V7SAVMASK_ALIGNED >= 1 SPACE <= 0.031 SQUARE
V8SAVMASK_MGBL = WITH NEIGHBOR V8SAVMASK_ALIGNED >= 1 SPACE <= 0.039 SQUARE
V1SAVMASK_MGBL_SU = SIZE V1SAVMASK_MGBL BY 0.0085
V2SAVMASK_MGBL_SU = SIZE V2SAVMASK_MGBL BY 0.0085
V3SAVMASK_MGBL_SU = SIZE V3SAVMASK_MGBL BY 0.0085
V4SAVMASK_MGBL_SU = SIZE V4SAVMASK_MGBL BY 0.0115
V5SAVMASK_MGBL_SU = SIZE V5SAVMASK_MGBL BY 0.0115
V6SAVMASK_MGBL_SU = SIZE V6SAVMASK_MGBL BY 0.0155
V7SAVMASK_MGBL_SU = SIZE V7SAVMASK_MGBL BY 0.0155
V8SAVMASK_MGBL_SU = SIZE V8SAVMASK_MGBL BY 0.0195
V1SAVMASK_MGBL_SUSD = SIZE V1SAVMASK_MGBL_SU BY -0.0085
V2SAVMASK_MGBL_SUSD = SIZE V2SAVMASK_MGBL_SU BY -0.0085
V3SAVMASK_MGBL_SUSD = SIZE V3SAVMASK_MGBL_SU BY -0.0085
V4SAVMASK_MGBL_SUSD = SIZE V4SAVMASK_MGBL_SU BY -0.0115
V5SAVMASK_MGBL_SUSD = SIZE V5SAVMASK_MGBL_SU BY -0.0115
V6SAVMASK_MGBL_SUSD = SIZE V6SAVMASK_MGBL_SU BY -0.0155
V7SAVMASK_MGBL_SUSD = SIZE V7SAVMASK_MGBL_SU BY -0.0155
V8SAVMASK_MGBL_SUSD = SIZE V8SAVMASK_MGBL_SU BY -0.0195
V1SAVMASK_MGBL_SUSDB = CONVEX EDGE V1SAVMASK_MGBL_SUSD ANGLE1 == 90 ANGLE2 > 90
V2SAVMASK_MGBL_SUSDB = CONVEX EDGE V2SAVMASK_MGBL_SUSD ANGLE1 == 90 ANGLE2 > 90
V3SAVMASK_MGBL_SUSDB = CONVEX EDGE V3SAVMASK_MGBL_SUSD ANGLE1 == 90 ANGLE2 > 90
V4SAVMASK_MGBL_SUSDB = CONVEX EDGE V4SAVMASK_MGBL_SUSD ANGLE1 == 90 ANGLE2 > 90
V5SAVMASK_MGBL_SUSDB = CONVEX EDGE V5SAVMASK_MGBL_SUSD ANGLE1 == 90 ANGLE2 > 90
V6SAVMASK_MGBL_SUSDB = CONVEX EDGE V6SAVMASK_MGBL_SUSD ANGLE1 == 90 ANGLE2 > 90
V7SAVMASK_MGBL_SUSDB = CONVEX EDGE V7SAVMASK_MGBL_SUSD ANGLE1 == 90 ANGLE2 > 90
V8SAVMASK_MGBL_SUSDB = CONVEX EDGE V8SAVMASK_MGBL_SUSD ANGLE1 == 90 ANGLE2 > 90
V1SAVMASK_MGBL_MRGD = V1SAVMASK_MGBL_SUSD NOT WITH EDGE V1SAVMASK_MGBL_SUSDB 
V2SAVMASK_MGBL_MRGD = V2SAVMASK_MGBL_SUSD NOT WITH EDGE V2SAVMASK_MGBL_SUSDB 
V3SAVMASK_MGBL_MRGD = V3SAVMASK_MGBL_SUSD NOT WITH EDGE V3SAVMASK_MGBL_SUSDB 
V4SAVMASK_MGBL_MRGD = V4SAVMASK_MGBL_SUSD NOT WITH EDGE V4SAVMASK_MGBL_SUSDB 
V5SAVMASK_MGBL_MRGD = V5SAVMASK_MGBL_SUSD NOT WITH EDGE V5SAVMASK_MGBL_SUSDB 
V6SAVMASK_MGBL_MRGD = V6SAVMASK_MGBL_SUSD NOT WITH EDGE V6SAVMASK_MGBL_SUSDB 
V7SAVMASK_MGBL_MRGD = V7SAVMASK_MGBL_SUSD NOT WITH EDGE V7SAVMASK_MGBL_SUSDB 
V8SAVMASK_MGBL_MRGD = V8SAVMASK_MGBL_SUSD NOT WITH EDGE V8SAVMASK_MGBL_SUSDB 
V1MASK = DFM COPY V1SAVNECMASK V1SAVWECMASK V1SAVMASK_MGBL_SUSD
V2MASK = DFM COPY V2SAVNECMASK V2SAVWECMASK V2SAVMASK_MGBL_SUSD
V3MASK = DFM COPY V3SAVNECMASK V3SAVWECMASK V3SAVMASK_MGBL_SUSD
V4MASK = DFM COPY V4SAVNECMASK V4SAVWECMASK V4SAVMASK_MGBL_SUSD
V5MASK = DFM COPY V5SAVNECMASK V5SAVWECMASK V5SAVMASK_MGBL_SUSD
V6MASK = DFM COPY V6SAVNECMASK V6SAVWECMASK V6SAVMASK_MGBL_SUSD
V7MASK = DFM COPY V7SAVNECMASK V7SAVWECMASK V7SAVMASK_MGBL_SUSD
V8MASK = DFM COPY V8SAVNECMASK V8SAVWECMASK V8SAVMASK_MGBL_SUSD
ACTIVE_VEE = EXPAND EDGE ACTIVE_VE OUTSIDE BY 0.019
FIN_KEEP_MASK = DFM COPY ACTIVE ACTIVE_VEE
FIN_KEPT = FIN AND FIN_KEEP_MASK
FIN_EXCISED = FIN NOT FIN_KEPT
VARIABLE VAR_M4_YOFFSET ENVIRONMENT
VARIABLE VAR_M4_1X_DBU 240
M4_OFFGRID = OFFGRID M4 1 VAR_M4_1X_DBU OFFSET 0 VAR_M4_YOFFSET 
M4_OFFGRIDR = DFM COPY M4_OFFGRID REGION
VARIABLE VAR_M4_1X (VAR_M4_1X_DBU/10000)
VARIABLE VAR_M4_1X_DECOMP_GRID (2*(1+1)*VAR_M4_1X_DBU)
VARIABLE VAR_M4_1X_OFFSET_GRIDA (1*(VAR_M4_1X_DBU/2))
VARIABLE VAR_M4_1X_OFFSET_GRIDB (((1.5*1)+1)*VAR_M4_1X_DBU)
VARIABLE VAR_M4_1X_OFFSET_GRIDA_TOT (VAR_M4_1X_OFFSET_GRIDA + VAR_M4_YOFFSET)
VARIABLE VAR_M4_1X_OFFSET_GRIDB_TOT (VAR_M4_1X_OFFSET_GRIDB + VAR_M4_YOFFSET)
M4_1X_ALL = INTERNAL M4_HE == VAR_M4_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
M4_1X_ALL_VE = M4_1X_ALL ANGLE == 90
M4_1X_ALL_HE = M4_1X_ALL ANGLE == 0
M4_1X_E = INTERNAL M4_HE == VAR_M4_1X OPPOSITE PARALLEL ONLY PROJ > 0
M4_1X_CL = DFM COPY M4_1X_E CENTERLINE
M4_OFFTRACK_ERR = OFFGRID (M4_1X_CL NOT INSIDE EDGE M4_OFFGRIDR) 1 (2*VAR_M4_1X_DBU) OFFSET 0 (-VAR_M4_1X_OFFSET_GRIDA_TOT)
M4_OFFTRACKR = DFM COPY M4_OFFTRACK_ERR REGION
M4_OFFTRACK = M4 ENCLOSE M4_OFFTRACKR
M4_1X_GA_CL = OFFGRID M4_1X_CL 1 VAR_M4_1X_DECOMP_GRID EDGE OFFSET 0 (-VAR_M4_1X_OFFSET_GRIDB_TOT)
M4_1X_GA_CLEE = EXPAND EDGE M4_1X_GA_CL BY (VAR_M4_1X/4)
M4_1X_GA = (M4 ENCLOSE M4_1X_GA_CLEE) NOT (M4_OFFGRIDR OR M4_OFFTRACK)
M4_1X_GA_VE = M4_1X_GA ANGLE == 90
M4_1X_GA_HE = M4_1X_GA ANGLE == 0
M4_1X_GB_CL = OFFGRID M4_1X_CL 1 VAR_M4_1X_DECOMP_GRID EDGE OFFSET 0 (-VAR_M4_1X_OFFSET_GRIDA_TOT)
M4_1X_GB_CLEE = EXPAND EDGE M4_1X_GB_CL BY (VAR_M4_1X/4)
M4_1X_GB = (M4 ENCLOSE M4_1X_GB_CLEE) NOT (M4_OFFGRIDR OR M4_OFFTRACK)
M4_1X_GB_VE = M4_1X_GB ANGLE == 90
M4_1X_GB_HE = M4_1X_GB ANGLE == 0
M4_1X_ALLOT = M4_1X_GA OR M4_1X_GB
M4_1X_ALLOT_VE = M4_1X_ALLOT ANGLE == 90
M4_1X_ALLOT_HE = M4_1X_ALLOT ANGLE == 0
M4_1X_GA_IMGAP = EXTERNAL M4_1X_GA_VE > 0 < 1000 REGION OPPOSITE PARALLEL ONLY PROJ > 0
M4_1X_GB_IMGAP = EXTERNAL M4_1X_GB_VE > 0 < 1000 REGION OPPOSITE PARALLEL ONLY PROJ > 0
M4_1X_IMGAP = EXTERNAL M4_1X_ALLOT_VE > 0 < 1000 REGION OPPOSITE PARALLEL ONLY PROJ > 0
M4_1X_GA_EXGAP = ENCLOSURE M4_1X_GA M4_EXTENT_VE > 0 < 1000 EXCLUDE SHIELDED 4 BY LAYER M4_1X_GA REGION OPPOSITE PARALLEL ONLY PROJ > 0
M4_1X_GB_EXGAP = ENCLOSURE M4_1X_GB M4_EXTENT_VE > 0 < 1000 EXCLUDE SHIELDED 4 BY LAYER M4_1X_GB REGION OPPOSITE PARALLEL ONLY PROJ > 0
M4_1X_EXGAP = ENCLOSURE M4_1X_ALLOT M4_EXTENT_VE > 0 < 1000 EXCLUDE SHIELDED 4 BY LAYER M4_1X_ALLOT REGION OPPOSITE PARALLEL ONLY PROJ > 0
M4_1X_GA_STRIPES = DFM COPY M4_1X_GA M4_1X_GA_IMGAP M4_1X_GA_EXGAP
M4_1X_GB_STRIPES = DFM COPY M4_1X_GB M4_1X_GB_IMGAP M4_1X_GB_EXGAP
M4_1X_STRIPES = DFM COPY M4_1X_ALLOT M4_1X_IMGAP M4_1X_EXGAP
M4_1X_GA_STRIPES_NWM = M4_1X_GA_STRIPES NOT M4_WIDE
M4_1X_GB_STRIPES_NWM = M4_1X_GB_STRIPES NOT M4_WIDE
M4_1X_STRIPES_NWM = M4_1X_GA_STRIPES_NWM OR M4_1X_GB_STRIPES_NWM
M4_1X_GA_STRIPES_VE = M4_1X_GA_STRIPES ANGLE == 90
M4_1X_GA_STRIPES_HE = M4_1X_GA_STRIPES ANGLE == 0
M4_1X_GB_STRIPES_VE = M4_1X_GB_STRIPES ANGLE == 90
M4_1X_GB_STRIPES_HE = M4_1X_GB_STRIPES ANGLE == 0
M4_1X_STRIPES_VE = M4_1X_STRIPES ANGLE == 90
M4_1X_STRIPES_HE = M4_1X_STRIPES ANGLE == 0
M4_1X_GA_STRIPES_NWM_VE = M4_1X_GA_STRIPES_NWM ANGLE == 90
M4_1X_GA_STRIPES_NWM_HE = M4_1X_GA_STRIPES_NWM ANGLE == 0
M4_1X_GB_STRIPES_NWM_VE = M4_1X_GB_STRIPES_NWM ANGLE == 90
M4_1X_GB_STRIPES_NWM_HE = M4_1X_GB_STRIPES_NWM ANGLE == 0
M4_1X_STRIPES_NWM_VE = M4_1X_STRIPES_NWM ANGLE == 90
M4_1X_STRIPES_NWM_HE = M4_1X_STRIPES_NWM ANGLE == 0
VARIABLE VAR_M5_XOFFSET ENVIRONMENT
VARIABLE VAR_M5_1X_DBU 240
M5_OFFGRID = OFFGRID M5 VAR_M5_1X_DBU 1 OFFSET VAR_M5_XOFFSET 0
M5_OFFGRIDR = DFM COPY M5_OFFGRID REGION
VARIABLE VAR_M5_1X (VAR_M5_1X_DBU/10000)
VARIABLE VAR_M5_1X_DECOMP_GRID (2*(1+1)*VAR_M5_1X_DBU)
VARIABLE VAR_M5_1X_OFFSET_GRIDA (1*(VAR_M5_1X_DBU/2))
VARIABLE VAR_M5_1X_OFFSET_GRIDB (((1.5*1)+1)*VAR_M5_1X_DBU)
VARIABLE VAR_M5_1X_OFFSET_GRIDA_TOT (VAR_M5_1X_OFFSET_GRIDA + VAR_M5_XOFFSET)
VARIABLE VAR_M5_1X_OFFSET_GRIDB_TOT (VAR_M5_1X_OFFSET_GRIDB + VAR_M5_XOFFSET)
M5_1X_ALL = INTERNAL M5_VE == VAR_M5_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
M5_1X_ALL_VE = M5_1X_ALL ANGLE == 90
M5_1X_ALL_HE = M5_1X_ALL ANGLE == 0
M5_1X_E = INTERNAL M5_VE == VAR_M5_1X OPPOSITE PARALLEL ONLY PROJ > 0
M5_1X_CL = DFM COPY M5_1X_E CENTERLINE
M5_OFFTRACK_ERR = OFFGRID (M5_1X_CL NOT INSIDE EDGE M5_OFFGRIDR) (2*VAR_M5_1X_DBU) 1 OFFSET (-VAR_M5_1X_OFFSET_GRIDA_TOT) 0 
M5_OFFTRACKR = DFM COPY M5_OFFTRACK_ERR REGION
M5_OFFTRACK = M5 ENCLOSE M5_OFFTRACKR
M5_1X_GA_CL = OFFGRID M5_1X_CL VAR_M5_1X_DECOMP_GRID 1 EDGE OFFSET (-VAR_M5_1X_OFFSET_GRIDB_TOT) 0 
M5_1X_GA_CLEE = EXPAND EDGE M5_1X_GA_CL BY (VAR_M5_1X/4)
M5_1X_GA = (M5 ENCLOSE M5_1X_GA_CLEE) NOT (M5_OFFGRIDR OR M5_OFFTRACK)
M5_1X_GA_VE = M5_1X_GA ANGLE == 90
M5_1X_GA_HE = M5_1X_GA ANGLE == 0
M5_1X_GB_CL = OFFGRID M5_1X_CL VAR_M5_1X_DECOMP_GRID 1 EDGE OFFSET (-VAR_M5_1X_OFFSET_GRIDA_TOT) 0 
M5_1X_GB_CLEE = EXPAND EDGE M5_1X_GB_CL BY (VAR_M5_1X/4)
M5_1X_GB = (M5 ENCLOSE M5_1X_GB_CLEE) NOT (M5_OFFGRIDR OR M5_OFFTRACK)
M5_1X_GB_VE = M5_1X_GB ANGLE == 90
M5_1X_GB_HE = M5_1X_GB ANGLE == 0
M5_1X_ALLOT = M5_1X_GA OR M5_1X_GB
M5_1X_ALLOT_VE = M5_1X_ALLOT ANGLE == 90
M5_1X_ALLOT_HE = M5_1X_ALLOT ANGLE == 0
M5_1X_GA_IMGAP = EXTERNAL M5_1X_GA_HE > 0 < 1000 REGION OPPOSITE PARALLEL ONLY PROJ > 0
M5_1X_GB_IMGAP = EXTERNAL M5_1X_GB_HE > 0 < 1000 REGION OPPOSITE PARALLEL ONLY PROJ > 0
M5_1X_IMGAP = EXTERNAL M5_1X_ALLOT_HE > 0 < 1000 REGION OPPOSITE PARALLEL ONLY PROJ > 0
M5_1X_GA_EXGAP = ENCLOSURE M5_1X_GA M5_EXTENT_HE > 0 < 1000 EXCLUDE SHIELDED 4 BY LAYER M5_1X_GA REGION OPPOSITE PARALLEL ONLY PROJ > 0
M5_1X_GB_EXGAP = ENCLOSURE M5_1X_GB M5_EXTENT_HE > 0 < 1000 EXCLUDE SHIELDED 4 BY LAYER M5_1X_GB REGION OPPOSITE PARALLEL ONLY PROJ > 0
M5_1X_EXGAP = ENCLOSURE M5_1X_ALLOT M5_EXTENT_HE > 0 < 1000 EXCLUDE SHIELDED 4 BY LAYER M5_1X_ALLOT REGION OPPOSITE PARALLEL ONLY PROJ > 0
M5_1X_GA_STRIPES = DFM COPY M5_1X_GA M5_1X_GA_IMGAP M5_1X_GA_EXGAP
M5_1X_GB_STRIPES = DFM COPY M5_1X_GB M5_1X_GB_IMGAP M5_1X_GB_EXGAP
M5_1X_STRIPES = DFM COPY M5_1X_ALLOT M5_1X_IMGAP M5_1X_EXGAP
M5_1X_GA_STRIPES_NWM = M5_1X_GA_STRIPES NOT M5_WIDE
M5_1X_GB_STRIPES_NWM = M5_1X_GB_STRIPES NOT M5_WIDE
M5_1X_STRIPES_NWM = M5_1X_GA_STRIPES_NWM OR M5_1X_GB_STRIPES_NWM
M5_1X_GA_STRIPES_VE = M5_1X_GA_STRIPES ANGLE == 90
M5_1X_GA_STRIPES_HE = M5_1X_GA_STRIPES ANGLE == 0
M5_1X_GB_STRIPES_VE = M5_1X_GB_STRIPES ANGLE == 90
M5_1X_GB_STRIPES_HE = M5_1X_GB_STRIPES ANGLE == 0
M5_1X_STRIPES_VE = M5_1X_STRIPES ANGLE == 90
M5_1X_STRIPES_HE = M5_1X_STRIPES ANGLE == 0
M5_1X_GA_STRIPES_NWM_VE = M5_1X_GA_STRIPES_NWM ANGLE == 90
M5_1X_GA_STRIPES_NWM_HE = M5_1X_GA_STRIPES_NWM ANGLE == 0
M5_1X_GB_STRIPES_NWM_VE = M5_1X_GB_STRIPES_NWM ANGLE == 90
M5_1X_GB_STRIPES_NWM_HE = M5_1X_GB_STRIPES_NWM ANGLE == 0
M5_1X_STRIPES_NWM_VE = M5_1X_STRIPES_NWM ANGLE == 90
M5_1X_STRIPES_NWM_HE = M5_1X_STRIPES_NWM ANGLE == 0
VARIABLE VAR_M6_YOFFSET ENVIRONMENT
VARIABLE VAR_M6_1X_DBU 320
M6_OFFGRID = OFFGRID M6 1 VAR_M6_1X_DBU OFFSET 0 VAR_M6_YOFFSET 
M6_OFFGRIDR = DFM COPY M6_OFFGRID REGION
VARIABLE VAR_M6_1X (VAR_M6_1X_DBU/10000)
VARIABLE VAR_M6_1X_DECOMP_GRID (2*(1+1)*VAR_M6_1X_DBU)
VARIABLE VAR_M6_1X_OFFSET_GRIDA (1*(VAR_M6_1X_DBU/2))
VARIABLE VAR_M6_1X_OFFSET_GRIDB (((1.5*1)+1)*VAR_M6_1X_DBU)
VARIABLE VAR_M6_1X_OFFSET_GRIDA_TOT (VAR_M6_1X_OFFSET_GRIDA + VAR_M6_YOFFSET)
VARIABLE VAR_M6_1X_OFFSET_GRIDB_TOT (VAR_M6_1X_OFFSET_GRIDB + VAR_M6_YOFFSET)
M6_1X_ALL = INTERNAL M6_HE == VAR_M6_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
M6_1X_ALL_VE = M6_1X_ALL ANGLE == 90
M6_1X_ALL_HE = M6_1X_ALL ANGLE == 0
M6_1X_E = INTERNAL M6_HE == VAR_M6_1X OPPOSITE PARALLEL ONLY PROJ > 0
M6_1X_CL = DFM COPY M6_1X_E CENTERLINE
M6_OFFTRACK_ERR = OFFGRID (M6_1X_CL NOT INSIDE EDGE M6_OFFGRIDR) 1 (2*VAR_M6_1X_DBU) OFFSET 0 (-VAR_M6_1X_OFFSET_GRIDA_TOT)
M6_OFFTRACKR = DFM COPY M6_OFFTRACK_ERR REGION
M6_OFFTRACK = M6 ENCLOSE M6_OFFTRACKR
M6_1X_GA_CL = OFFGRID M6_1X_CL 1 VAR_M6_1X_DECOMP_GRID EDGE OFFSET 0 (-VAR_M6_1X_OFFSET_GRIDB_TOT)
M6_1X_GA_CLEE = EXPAND EDGE M6_1X_GA_CL BY (VAR_M6_1X/4)
M6_1X_GA = (M6 ENCLOSE M6_1X_GA_CLEE) NOT (M6_OFFGRIDR OR M6_OFFTRACK)
M6_1X_GA_VE = M6_1X_GA ANGLE == 90
M6_1X_GA_HE = M6_1X_GA ANGLE == 0
M6_1X_GB_CL = OFFGRID M6_1X_CL 1 VAR_M6_1X_DECOMP_GRID EDGE OFFSET 0 (-VAR_M6_1X_OFFSET_GRIDA_TOT)
M6_1X_GB_CLEE = EXPAND EDGE M6_1X_GB_CL BY (VAR_M6_1X/4)
M6_1X_GB = (M6 ENCLOSE M6_1X_GB_CLEE) NOT (M6_OFFGRIDR OR M6_OFFTRACK)
M6_1X_GB_VE = M6_1X_GB ANGLE == 90
M6_1X_GB_HE = M6_1X_GB ANGLE == 0
M6_1X_ALLOT = M6_1X_GA OR M6_1X_GB
M6_1X_ALLOT_VE = M6_1X_ALLOT ANGLE == 90
M6_1X_ALLOT_HE = M6_1X_ALLOT ANGLE == 0
M6_1X_GA_IMGAP = EXTERNAL M6_1X_GA_VE > 0 < 1000 REGION OPPOSITE PARALLEL ONLY PROJ > 0
M6_1X_GB_IMGAP = EXTERNAL M6_1X_GB_VE > 0 < 1000 REGION OPPOSITE PARALLEL ONLY PROJ > 0
M6_1X_IMGAP = EXTERNAL M6_1X_ALLOT_VE > 0 < 1000 REGION OPPOSITE PARALLEL ONLY PROJ > 0
M6_1X_GA_EXGAP = ENCLOSURE M6_1X_GA M6_EXTENT_VE > 0 < 1000 EXCLUDE SHIELDED 4 BY LAYER M6_1X_GA REGION OPPOSITE PARALLEL ONLY PROJ > 0
M6_1X_GB_EXGAP = ENCLOSURE M6_1X_GB M6_EXTENT_VE > 0 < 1000 EXCLUDE SHIELDED 4 BY LAYER M6_1X_GB REGION OPPOSITE PARALLEL ONLY PROJ > 0
M6_1X_EXGAP = ENCLOSURE M6_1X_ALLOT M6_EXTENT_VE > 0 < 1000 EXCLUDE SHIELDED 4 BY LAYER M6_1X_ALLOT REGION OPPOSITE PARALLEL ONLY PROJ > 0
M6_1X_GA_STRIPES = DFM COPY M6_1X_GA M6_1X_GA_IMGAP M6_1X_GA_EXGAP
M6_1X_GB_STRIPES = DFM COPY M6_1X_GB M6_1X_GB_IMGAP M6_1X_GB_EXGAP
M6_1X_STRIPES = DFM COPY M6_1X_ALLOT M6_1X_IMGAP M6_1X_EXGAP
M6_1X_GA_STRIPES_NWM = M6_1X_GA_STRIPES NOT M6_WIDE
M6_1X_GB_STRIPES_NWM = M6_1X_GB_STRIPES NOT M6_WIDE
M6_1X_STRIPES_NWM = M6_1X_GA_STRIPES_NWM OR M6_1X_GB_STRIPES_NWM
M6_1X_GA_STRIPES_VE = M6_1X_GA_STRIPES ANGLE == 90
M6_1X_GA_STRIPES_HE = M6_1X_GA_STRIPES ANGLE == 0
M6_1X_GB_STRIPES_VE = M6_1X_GB_STRIPES ANGLE == 90
M6_1X_GB_STRIPES_HE = M6_1X_GB_STRIPES ANGLE == 0
M6_1X_STRIPES_VE = M6_1X_STRIPES ANGLE == 90
M6_1X_STRIPES_HE = M6_1X_STRIPES ANGLE == 0
M6_1X_GA_STRIPES_NWM_VE = M6_1X_GA_STRIPES_NWM ANGLE == 90
M6_1X_GA_STRIPES_NWM_HE = M6_1X_GA_STRIPES_NWM ANGLE == 0
M6_1X_GB_STRIPES_NWM_VE = M6_1X_GB_STRIPES_NWM ANGLE == 90
M6_1X_GB_STRIPES_NWM_HE = M6_1X_GB_STRIPES_NWM ANGLE == 0
M6_1X_STRIPES_NWM_VE = M6_1X_STRIPES_NWM ANGLE == 90
M6_1X_STRIPES_NWM_HE = M6_1X_STRIPES_NWM ANGLE == 0
VARIABLE VAR_M7_XOFFSET ENVIRONMENT
VARIABLE VAR_M7_1X_DBU 320
M7_OFFGRID = OFFGRID M7 VAR_M7_1X_DBU 1 OFFSET VAR_M7_XOFFSET 0
M7_OFFGRIDR = DFM COPY M7_OFFGRID REGION
VARIABLE VAR_M7_1X (VAR_M7_1X_DBU/10000)
VARIABLE VAR_M7_1X_DECOMP_GRID (2*(1+1)*VAR_M7_1X_DBU)
VARIABLE VAR_M7_1X_OFFSET_GRIDA (1*(VAR_M7_1X_DBU/2))
VARIABLE VAR_M7_1X_OFFSET_GRIDB (((1.5*1)+1)*VAR_M7_1X_DBU)
VARIABLE VAR_M7_1X_OFFSET_GRIDA_TOT (VAR_M7_1X_OFFSET_GRIDA + VAR_M7_XOFFSET)
VARIABLE VAR_M7_1X_OFFSET_GRIDB_TOT (VAR_M7_1X_OFFSET_GRIDB + VAR_M7_XOFFSET)
M7_1X_ALL = INTERNAL M7_VE == VAR_M7_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
M7_1X_ALL_VE = M7_1X_ALL ANGLE == 90
M7_1X_ALL_HE = M7_1X_ALL ANGLE == 0
M7_1X_E = INTERNAL M7_VE == VAR_M7_1X OPPOSITE PARALLEL ONLY PROJ > 0
M7_1X_CL = DFM COPY M7_1X_E CENTERLINE
M7_OFFTRACK_ERR = OFFGRID (M7_1X_CL NOT INSIDE EDGE M7_OFFGRIDR) (2*VAR_M7_1X_DBU) 1 OFFSET (-VAR_M7_1X_OFFSET_GRIDA_TOT) 0 
M7_OFFTRACKR = DFM COPY M7_OFFTRACK_ERR REGION
M7_OFFTRACK = M7 ENCLOSE M7_OFFTRACKR
M7_1X_GA_CL = OFFGRID M7_1X_CL VAR_M7_1X_DECOMP_GRID 1 EDGE OFFSET (-VAR_M7_1X_OFFSET_GRIDB_TOT) 0 
M7_1X_GA_CLEE = EXPAND EDGE M7_1X_GA_CL BY (VAR_M7_1X/4)
M7_1X_GA = (M7 ENCLOSE M7_1X_GA_CLEE) NOT (M7_OFFGRIDR OR M7_OFFTRACK)
M7_1X_GA_VE = M7_1X_GA ANGLE == 90
M7_1X_GA_HE = M7_1X_GA ANGLE == 0
M7_1X_GB_CL = OFFGRID M7_1X_CL VAR_M7_1X_DECOMP_GRID 1 EDGE OFFSET (-VAR_M7_1X_OFFSET_GRIDA_TOT) 0 
M7_1X_GB_CLEE = EXPAND EDGE M7_1X_GB_CL BY (VAR_M7_1X/4)
M7_1X_GB = (M7 ENCLOSE M7_1X_GB_CLEE) NOT (M7_OFFGRIDR OR M7_OFFTRACK)
M7_1X_GB_VE = M7_1X_GB ANGLE == 90
M7_1X_GB_HE = M7_1X_GB ANGLE == 0
M7_1X_ALLOT = M7_1X_GA OR M7_1X_GB
M7_1X_ALLOT_VE = M7_1X_ALLOT ANGLE == 90
M7_1X_ALLOT_HE = M7_1X_ALLOT ANGLE == 0
M7_1X_GA_IMGAP = EXTERNAL M7_1X_GA_HE > 0 < 1000 REGION OPPOSITE PARALLEL ONLY PROJ > 0
M7_1X_GB_IMGAP = EXTERNAL M7_1X_GB_HE > 0 < 1000 REGION OPPOSITE PARALLEL ONLY PROJ > 0
M7_1X_IMGAP = EXTERNAL M7_1X_ALLOT_HE > 0 < 1000 REGION OPPOSITE PARALLEL ONLY PROJ > 0
M7_1X_GA_EXGAP = ENCLOSURE M7_1X_GA M7_EXTENT_HE > 0 < 1000 EXCLUDE SHIELDED 4 BY LAYER M7_1X_GA REGION OPPOSITE PARALLEL ONLY PROJ > 0
M7_1X_GB_EXGAP = ENCLOSURE M7_1X_GB M7_EXTENT_HE > 0 < 1000 EXCLUDE SHIELDED 4 BY LAYER M7_1X_GB REGION OPPOSITE PARALLEL ONLY PROJ > 0
M7_1X_EXGAP = ENCLOSURE M7_1X_ALLOT M7_EXTENT_HE > 0 < 1000 EXCLUDE SHIELDED 4 BY LAYER M7_1X_ALLOT REGION OPPOSITE PARALLEL ONLY PROJ > 0
M7_1X_GA_STRIPES = DFM COPY M7_1X_GA M7_1X_GA_IMGAP M7_1X_GA_EXGAP
M7_1X_GB_STRIPES = DFM COPY M7_1X_GB M7_1X_GB_IMGAP M7_1X_GB_EXGAP
M7_1X_STRIPES = DFM COPY M7_1X_ALLOT M7_1X_IMGAP M7_1X_EXGAP
M7_1X_GA_STRIPES_NWM = M7_1X_GA_STRIPES NOT M7_WIDE
M7_1X_GB_STRIPES_NWM = M7_1X_GB_STRIPES NOT M7_WIDE
M7_1X_STRIPES_NWM = M7_1X_GA_STRIPES_NWM OR M7_1X_GB_STRIPES_NWM
M7_1X_GA_STRIPES_VE = M7_1X_GA_STRIPES ANGLE == 90
M7_1X_GA_STRIPES_HE = M7_1X_GA_STRIPES ANGLE == 0
M7_1X_GB_STRIPES_VE = M7_1X_GB_STRIPES ANGLE == 90
M7_1X_GB_STRIPES_HE = M7_1X_GB_STRIPES ANGLE == 0
M7_1X_STRIPES_VE = M7_1X_STRIPES ANGLE == 90
M7_1X_STRIPES_HE = M7_1X_STRIPES ANGLE == 0
M7_1X_GA_STRIPES_NWM_VE = M7_1X_GA_STRIPES_NWM ANGLE == 90
M7_1X_GA_STRIPES_NWM_HE = M7_1X_GA_STRIPES_NWM ANGLE == 0
M7_1X_GB_STRIPES_NWM_VE = M7_1X_GB_STRIPES_NWM ANGLE == 90
M7_1X_GB_STRIPES_NWM_HE = M7_1X_GB_STRIPES_NWM ANGLE == 0
M7_1X_STRIPES_NWM_VE = M7_1X_STRIPES_NWM ANGLE == 90
M7_1X_STRIPES_NWM_HE = M7_1X_STRIPES_NWM ANGLE == 0

/*
———————————————————————————————————————————————————————————————————————————
				Rule Name Format
———————————————————————————————————————————————————————————————————————————
*/
/*
For inter-layer rules: PrimaryLayer.SecondaryLayer.Type.Number
For intra-layer rules: PrimaryLayer.Type.Number
An inter-layer rule refers to a rule defined between two different
layers and an intra-layer rule refers to a rule defined for a single
layer.
'PrimaryLayer'and 'SecondaryLayer'represent the layers for which a rule
is written. The string 'Type' may have the values listed below: 
A	: An area rule (inter/intra layer rule). 
EN 	: An enclosure rule (inter layer). Denotes the distance between the
	  exterior side of one layer's edge and the interior side of
	  another layer's edge, where one of the layer geometry lies
	  completely within another layer geometry.
EX 	: An extension rule (inter layer). Denotes the distance between the
	  exterior side of one layer's edge and the interior side of
	  another layer's edge, where one of the layer geometry lies
	  partially within another layer geometry.
L	: A length (intra layer) rule. Denotes the length of a polygon's
	  edge. The scope of this rule type is not limited to just the
	  distance between the interior side of edges of a layer geometry.
LUP	: Latch-up prevention rule.
OV	: An overlap rule (inter layer). Denotes the distance between
	  interior side of edges of two layers.
R	: A recommended rule (may be waived).
S	: A spacing rule (inter/intra layer rule). Denotes the distance
	  between the exterior side of edges of one or two layers.
SRAM	: SRAM related rules——these rules only apply to SRAM cells and may be
	  waived for the other cells.
W	: A width rule (intra layer). Denotes the distance between interior
       side of edges of a specific layer.
AUX	: Auxiliary rules——the ones that do not fall under any of the
	  above categories (may not be waived).
*/
/*
———————————————————————————————————————————————————————————————————————————
				Rule Checks
———————————————————————————————————————————————————————————————————————————
*/
GEOMETRY.NONORTHOGONAL{
 @ GEOMETRY.NONORTHOGONAL
 @ Non-orthogonal shapes are not allowed
 DRAWN ACUTE
 DRAWN ANGLED
 DRAWN SKEW
}
WELL.W.1{
 @ WELL.W.1
 @ Minimum horizontal width of WELL is 108 nm.
 INTERNAL WELL_VE < 0.108 
}
WELL.W.2{
 @ WELL.W.2
 @ Minimum vertical width of WELL is 54 nm.
 INTERNAL WELL_HE < 0.054 
}
WELL.S.1{
 @ WELL.S.1
 @ Minimum vertical spacing between WELL layer polygons is 108 nm.
 EXTERNAL WELL_VE < 0.108 
}
WELL.S.2{
 @ WELL.S.2
 @ Minimum horizontal spacing between WELL layer polygons is 54 nm.
 EXTERNAL WELL_HE  < 0.054
}
WELL.A.1A{
 @ WELL.A.1A
 @ Minimum area of WELL is 5832 nm-sq.
 AREA WELL  < 0.005832 
}
WELL.A.1B{
 @ WELL.A.1B
 @ Minimum enclosed area of WELL is 5832 nm-sq.
 HOLES WELL < 0.005832
}
WELL.GATE.EX.1{
 @ WELL.GATE.EX.1
 @ Minimum horizontal extension of WELL past GATE (not cut by GCUT layer) is 7 nm
 ENCLOSURE GATE_NGC_VE WELL_VE  < VAR_OPT_MISALI OPPOSITE
}
WELL.GATE.EX.2{ 
 @ WELL.GATE.EX.2
 @ Minimum vertical extension of WELL past GATE (not cut by GCUT layer)
 @ that does not interact with SRAMDRC, is 7 nm
 ENCLOSURE GATE_NGC_NIS_HE WELL_HE < VAR_OPT_EUV_MISALI_GRDBND OPPOSITE
}
FIN.W.1{
 @ FIN.W.1
 @ Exact vertical FIN width is 7 nm.
 INTERNAL FIN_HE < 0.007 
 INTERNAL FIN_HE > 0.007 < 0.5
}
FIN.W.2{
 @ FIN.W.2
 @ Minimum horizontal FIN width is 108 nm.
 INTERNAL FIN_VE < 0.108 
}
FIN.S.1{
 @ FIN.S.1
 @ Exact vertical FIN pitch is 27 nm. 
X_new = INTERNAL FIN_HE < 1
y = DFM COPY X_new CENTERLINE
z = MERGE y
z_copy = EXPAND EDGE z INSIDE BY 0.001
z_copy_HE = z_copy ANGLE == 0
EXTERNAL z_copy_HE < 0.026 
EXTERNAL z_copy_HE > 0.026 < 0.053
}
FIN.AUX.1{
 @ FIN.AUX.1
 @ FIN may not bend.
 CONVEX EDGE FIN ANGLE1 > 90 ANGLE2 > 0
}
GATE.W.1
{
 @ GATE.W.1
 @ Exact horizontal GATE width is 20 nm.
 INTERNAL GATE_VE < 0.020 
 INTERNAL GATE_VE > 0.020 < 1000
}
GATE.W.2{
 @ GATE.W.2
 @ Minimum vertical GATE width is 40 nm.
 INTERNAL GATE_HE < VAR_OPT_RES 
}
GATE.S.1
{
 @ GATE.S.1
 @ Exact horizontal GATE pitch is 54 nm.
 x = INTERNAL GATE_VE < 1000
 y = DFM COPY x CENTERLINE
 y_copy = EXPAND EDGE y INSIDE BY 0.001
 EXTERNAL y_copy < 0.053 OPPOSITE 
 EXTERNAL y_copy > 0.053 < 0.107 OPPOSITE
}
GATE.S.2
{
 @ GATE.S2
 @ Minimum horizontal GATE spacing is 34 nm.
 EXTERNAL GATE_VE < 0.034 ABUT 
}
GATE.S.3{
 @ GATE.S.3
 @ Every GATE (not cut by GCUT and not interacting with the layer SRAMDRC)
 @ must have at least one other GATE within 54 nm of its surrounding along the
 @ horizontal axis. The spacing being the distance between centers of the two
 @ GATE layer polygons. 
 NOT WITH NEIGHBOR (GATE NOT INTERACT SRAMDRC) >= 1 SPACE == 0.054  CENTERS ORTHOGONAL ONLY 
}
GATE.AUX.1
{
 @ GATE.AUX.1 
 @ GATE may not bend.
 CONVEX EDGE GATE ANGLE1 > 90 ANGLE2 > 0 
}
GATE.AUX.2{
 @ GATE.AUX.2
 @ GATE may not be discontinuous along the vertical axis. Use GCUT layer to
 @ mark cuts in the GATE.
 EXTERNAL GATE_HE > 0 < 1000 OPPOSITE 
}
GATE.ACTIVE.AUX.3{
 @ GATE.ACTIVE.AUX.3
 @ ACTIVE layer vertical edge may not lie inside, or coincide with, the GATE layer.
 ACTIVE_VE INSIDE EDGE GATE
 ACTIVE_VE COINCIDENT EDGE GATE
}
GATE.ACTIVE.EX.1
{
 @ GATE.ACTIVE.EX1
 @ Minimum vertical extension of GATE (not cut by GCUT) past ACTIVE is 4 nm.
 ENCLOSURE ACTIVE_HE GATE_NGC_HE < VAR_EUV_MISALI OPPOSITE
}
GATE.ACTIVE.EX.2
{
 @ GATE.ACTIVE.EX2
 @ Minimum horizontal extension of ACTIVE interacting with GATE (not cut by
 @ GCUT layer) past GATE (not cut by GCUT layer) is 25 nm.
 ENCLOSURE GATE_NGC_VE ACTIVE_IGNGC_VE < 0.025 OPPOSITE
}
GATE.ACTIVE.S.4
{
 @ GATE.ACTIVE.S.4
 @ Minimum horizontal spacing between ACTIVE and GATE (not cut by GCUT and not
 @ interacting with ACTIVE) is 9 nm.
 EXTERNAL ACTIVE_VE GATE_NGC_NIA_VE < 0.009 OPPOSITE ABUT < 90
}
ACTIVE.FIN.EX.1{
 @ ACTIVE.FIN.EX.1
 @ Minimum vertical extension of ACTIVE past FIN is 10 nm.
 ENCLOSURE FIN_HE ACTIVE_HE < 0.010 ABUT < 90
}
ACTIVE.W.1{
 @ ACTIVE.W.1
 @ Minimum vertical width of ACTIVE layer is 27 nm.		 
 INTERNAL ACTIVE_HE < 0.027 
}
ACTIVE.W.2{
 @ ACTIVE.W.2
 @ ACTIVE layer vertical width increment is an integer multiple of 27 nm.
INTERNAL ACTIVE_HE < 0.027
INTERNAL ACTIVE_HE > 0.027 < 0.054 OPPOSITE
INTERNAL ACTIVE_HE > 0.054 < 0.081 OPPOSITE
INTERNAL ACTIVE_HE > 0.081 < 0.108 OPPOSITE
INTERNAL ACTIVE_HE > 0.108 < 0.135 OPPOSITE
INTERNAL ACTIVE_HE > 0.135 < 0.162 OPPOSITE
INTERNAL ACTIVE_HE > 0.162 < 0.189 OPPOSITE 
INTERNAL ACTIVE_HE > 0.189 < 0.216 OPPOSITE
INTERNAL ACTIVE_HE > 0.216 < 0.243 OPPOSITE
INTERNAL ACTIVE_HE > 0.243 < 0.270 OPPOSITE
INTERNAL ACTIVE_HE > 0.270 < 0.297 OPPOSITE
INTERNAL ACTIVE_HE > 0.297 < 0.324 OPPOSITE 
INTERNAL ACTIVE_HE > 0.324 < 0.351 OPPOSITE
INTERNAL ACTIVE_HE > 0.351 < 0.378 OPPOSITE
INTERNAL ACTIVE_HE > 0.378 < 0.405 OPPOSITE
INTERNAL ACTIVE_HE > 0.405 < 0.432 OPPOSITE
INTERNAL ACTIVE_HE > 0.432 < 0.459 OPPOSITE
INTERNAL ACTIVE_HE > 0.459 < 0.486 OPPOSITE
INTERNAL ACTIVE_HE > 0.486 < 0.513 OPPOSITE
INTERNAL ACTIVE_HE > 0.513 < 0.540 OPPOSITE
INTERNAL ACTIVE_HE > 0.540 < 0.567 OPPOSITE
INTERNAL ACTIVE_HE > 0.567 < 0.594 OPPOSITE
INTERNAL ACTIVE_HE > 0.594 < 0.621 OPPOSITE
INTERNAL ACTIVE_HE > 0.621 < 0.648 OPPOSITE
INTERNAL ACTIVE_HE > 0.648 < 0.675 OPPOSITE
}
ACTIVE.W.3{
 @ ACTIVE.W.3
 @ Minimum horizontal width of ACTIVE is 16 nm.
 INTERNAL ACTIVE_VE < 0.016
}
ACTIVE.S.1{
 @ ACTIVE.S.1
 @ Minimum vertical spacing of ACTIVE is 27 nm. 
 EXTERNAL ACTIVE_HE < 0.027 SPACE
}
ACTIVE.S.2A{ 
 @ ACTIVE.S.2A	
 @ Minimum horizontal spacing between ACTIVE layers forming source/drain
 @ regions (of different transistors) on different nets is 92 nm.
 EXTERNAL (ACTIVE_SD NOT INTERACT SRAMDRC) > 0.020 <= 0.038 NOT CONNECTED OPPOSITE
}
ACTIVE.S.2B{ 
 @ ACTIVE.S.2B
 @ Minimum horizontal spacing of ACTIVE is 38 nm.
  EXTERNAL ACTIVE_VE < 0.038 OPPOSITE
}
ACTIVE.WELL.S.4{
 @ ACTIVE.WELL.S.4
 @ Minimum spacing of ACTIVE (outside the layer SRAMDRC) to WELL is 27 nm.
 EXTERNAL WELL (ACTIVE OUTSIDE SRAMDRC) < 0.027 ABUT < 90
 }
SRAM.ACTIVE.WELL.S.5{
 @ SRAM.ACTIVE.WELL.S.5
 @ Minimum spacing of ACTIVE (interacting with the layer SRAMDRC) to WELL
 @ is 13.5 nm.
 EXTERNAL WELL ACTIVE_IS < 0.0135 ABUT < 90
 }
ACTIVE.WELL.EN.1{
 @ ACTIVE.WELL.EN.1
 @ Minimum enclosure of ACTIVE (outside the layer SRAMDRC) by WELL is 27
 @ nm.
 ENCLOSURE (ACTIVE OUTSIDE SRAMDRC) WELL < 0.027 ABUT < 90
}
SRAM.ACTIVE.WELL.EN.2{
 @ SRAM.ACTIVE.WELL.EN.2
 @ Minimum enclosure of ACTIVE (interacting with the layer SRAMDRC) by WELL
 @ is 13.5 nm.
 ENCLOSURE ACTIVE_IS WELL < 0.0135 ABUT < 90
}
ACTIVE.A.1A{
 @ ACTIVE.A.1A
 @ Minimum area of an ACTIVE layer polygon that does not interact with the
 @ layer SRAMDRC is 864 nm-sq.
 AREA ACTIVE_NIS  < 0.000864
} 
ACTIVE.A.1B{
 @ ACTIVE.A.1B
 @ Minimum enclosed area of an ACTIVE layer polygon that does not interact with the
 @ layer SRAMDRC is 864 nm-sq.
 HOLES ACTIVE_NIS < 0.000864
}
SRAM.ACTIVE.A.2A{
 @ SRAM.ACTIVE.A.2A
 @ Minimum area of an ACTIVE layer polygon that interacts with the
 @ layer SRAMDRC is 432 nm-sq
 AREA ACTIVE_IS  < 0.000432
} 
SRAM.ACTIVE.A.2B{
 @ SRAM.ACTIVE.A.2B
 @ Minimum enclosed area of an ACTIVE layer polygon that interacts with the
 @ layer SRAMDRC is 432 nm-sq.
 HOLES ACTIVE_IS < 0.000432
}
ACTIVE.AUX.1{
 @ ACTIVE.AUX.1
 @ ACTIVE must always be enclosed by NSELECT or PSELECT, such that no ACTIVE
 @ layer edge(s) coincide with NSELECT or PSELECT layer edge(s). 
 ACTIVE NOT INSIDE (NSELECT OR PSELECT)
 ACTIVE COINCIDENT EDGE (NSELECT OR PSELECT)
}
SRAM.ACTIVE.AUX.2{
@ SRAM.ACTIVE.AUX.2
@ ACTIVE layer polygons not belonging to an SRAM cell, i.e. those that are
@ either completely outside the SRAMDRC layer or those that do not
@ intersect the SRAMDRC layer, may not touch the SRAMDRC layer.
SRAMDRC COINCIDENT OUTSIDE EDGE ACTIVE
}
ACTIVE.AUX.3{
 @ ACTIVE.AUX.3
 @ A notch in ACTIVE along vertical axis is not allowed. 
 EXTERNAL ACTIVE_HE > 0 < 1000 NOTCH OPPOSITE
}
ACTIVE.LUP.1{
 @ ACTIVE.LUP.1
 @ Maximum distance, to prevent latch-up, between ACTIVE forming a MOS
 @ device and ACTIVE forming a bulk/substrate contact within the same
 @ WELL/substrate is 30 um.
 ACTIVE_MOS_SD = (WELL AND ACTIVE) AND PSELECT
 ACT_TAP = (NSELECT AND ACTIVE) AND WELL
 ACT_TAP_VE = ACT_TAP ANGLE == 90
 ACT_TAP_EXE = EXPAND EDGE ACT_TAP_VE OUTSIDE BY 30
 ACT_TAP_DERIVED = DFM COPY ACT_TAP ACT_TAP_EXE
 a = ACT_TAP SIZE BY 30
 ACTIVE_MOS_SD NOT INSIDE  a   
}
GCUT.W.1{
 @ GCUT.W.1
 @ Minimum vertical width of GCUT is 17 nm.
 INTERNAL GCUT_HE < 0.017 ABUT < 90 OPPOSITE
}
GCUT.ACTIVE.S.1{
 @ GCUT.ACTIVE.S.1
 @ Minimum vertical spacing between GCUT and channel is 4 nm.
 EXTERNAL GCUT_HE CHANNELR_HE  < VAR_EUV_MISALI ABUT < 90
 EXTERNAL GCUT CHANNELR < 0.001 SINGULAR
}
GCUT.GATE.EX.1{
 @ GCUT.GATE.EX.1
 @ Minimum horizontal extension of GCUT past GATE is 17 nm. 
 ENCLOSURE GATE_VE GCUT_VE < 0.017 OPPOSITE
}
GCUT.GATE.S.2{
 @ GCUT.GATE.S.2
 @ Minimum spacing of GCUT to GATE, when the former is not being used to
 @ cut a particular polygon drawn using the latter, is 17 nm.
 EXTERNAL GATE_VE GCUT_VE <  0.017 ABUT < 90
 EXTERNAL GATE GCUT < 0.001 SINGULAR
 }
GCUT.S.3{ 
 @ GCUT.S.3
 @ Minimum vertical spacing between two GCUT layer polygons is 35 nm.
 EXTERNAL GCUT_HE < 0.035 ABUT < 90 OPPOSITE
 EXTERNAL GCUT < 0.001  SINGULAR 
}
GCUT.AUX.1{
 @ GCUT.AUX.1 
 @ GCUT layer may not exist without the layer GATE.
 OUTSIDE GCUT GATE 
}
GCUT.AUX.2{
 @ GCUT.AUX.2
 @ GCUT layer vertical edge may not lie inside, or coincide with, the GATE layer.
 GCUT_VE INSIDE EDGE GATE
 GCUT_VE COINCIDENT EDGE GATE
}
GCUT.AUX.3
{
 @ GCUT.AUX.3
 @ GCUT may not interact with channel.
 GCUT INTERACT CHANNELR
}
NSELECT.W.1{
@ NSELECT.W.1 
@ Minimum horizontal width of NSELECT is 108 nm.
 INTERNAL NSELECT_VE < 0.108 OPPOSITE
}
NSELECT.W.2{
@ NSELECT.W.2 
@ Minimum vertical width of NSELECT is 54 nm.
 INTERNAL NSELECT_HE < 0.054 OPPOSITE
}
NSELECT.ACTIVE.EN.1{
 @ NSELECT.ACTIVE.EN.1
 @ Minimum horizontal enclosure of ACTIVE (not interacting with SRAMDRC) by
 @ NSELECT is 46 nm.
 ENCLOSURE ACTIVE_NIS_VE NSELECT_VE < 0.046 ABUT < 90
}
NSELECT.ACTIVE.EN.2{
 @ NSELECT.ACTIVE.EN.2
 @ Minimum vertical enclosure of ACTIVE (not interacting with SRAMDRC) by
 @ NSELECT is 27 nm.
 ENCLOSURE ACTIVE_NIS_HE NSELECT_HE < 0.027 ABUT < 90
}
SRAM.NSELECT.ACTIVE.EN.3{
 @ SRAM.NSELECT.ACTIVE.EN.3
 @ Minimum horizontal enclosure of ACTIVE (interacting with SRAMDRC) by
 @ NSELECT is 13.5 nm.
 ENCLOSURE ACTIVE_IS_VE NSELECT_VE < 0.0135 ABUT < 90
}
SRAM.NSELECT.ACTIVE.EN.4{
 @ SRAM.NSELECT.ACTIVE.EN.4
 @ Minimum vertical enclosure of ACTIVE (interacting with SRAMDRC) by
 @ NSELECT is 13.5 nm.
 ENCLOSURE ACTIVE_IS_HE NSELECT_HE < 0.0135 ABUT < 90
}
NSELECT.GATE.EX.1{
 @ NSELECT.GATE.EX.1 
 @ Minimum horizontal extension of NSELECT past GATE (not cut by GCUT) is
 @ 7 nm.
 ENCLOSURE GATE_NGC_VE NSELECT_VE < VAR_OPT_MISALI
}
NSELECT.GATE.EX.2{ 
 @ NSELECT.GATE.EX.2
 @ Minimum vertical extension of NSELECT past GATE (not cut by GCUT layer)
 @ is 7 nm.
 ENCLOSURE GATE_NGC_HE NSELECT_HE < VAR_OPT_EUV_MISALI_GRDBND OPPOSITE
}
PSELECT.W.1{
@ PSELECT.W.1 
@ Minimum horizontal width of PSELECT is 108 nm.
 INTERNAL PSELECT_VE < 0.108 OPPOSITE
}
PSELECT.W.2{
@ PSELECT.W.2 
@ Minimum vertical width of PSELECT is 54 nm.
 INTERNAL PSELECT_HE < 0.054 OPPOSITE
}
PSELECT.ACTIVE.EN.1{
 @ PSELECT.ACTIVE.EN.1
 @ Minimum horizontal enclosure of ACTIVE (not interacting with SRAMDRC) by
 @ PSELECT 46 nm.
 ENCLOSURE ACTIVE_NIS_VE PSELECT_VE < 0.046 ABUT < 90
}
PSELECT.ACTIVE.EN.2{
 @ PSELECT.ACTIVE.EN.2
 @ Minimum vertical enclosure of ACTIVE (not interacting with SRAMDRC) by
 @ PSELECT is 27 nm.
 ENCLOSURE ACTIVE_NIS_HE PSELECT_HE < 0.027 ABUT < 90
}
SRAM.PSELECT.ACTIVE.EN.3{
 @ SRAM.PSELECT.ACTIVE.EN.3
 @ Minimum horizontal enclosure of ACTIVE (interacting with SRAMDRC) by
 @ PSELECT is 13.5 nm.
 ENCLOSURE ACTIVE_IS_VE PSELECT_VE < 0.0135 ABUT < 90
}
SRAM.PSELECT.ACTIVE.EN.4{
 @ SRAM.PSELECT.ACTIVE.EN.4
 @ Minimum vertical enclosure of ACTIVE (interacting with SRAMDRC) by
 @ PSELECT is 13.5 nm.
 ENCLOSURE ACTIVE_IS_HE PSELECT_HE < 0.0135 ABUT < 90
}
PSELECT.GATE.EX.1{
 @ PSELECT.GATE.EX.1 
 @ Minimum horizontal extension of PSELECT past GATE (not cut by GCUT) is 
 @ 7 nm.
 ENCLOSURE GATE_NGC_VE PSELECT_VE < VAR_OPT_MISALI
}
PSELECT.GATE.EX.2{ 
 @ PSELECT.GATE.EX.2
 @ Minimum vertical extension of PSELECT past GATE (not cut by GCUT layer)
 @ is 7 nm.
 ENCLOSURE GATE_NGC_HE PSELECT_HE < VAR_OPT_EUV_MISALI_GRDBND OPPOSITE
}
NSELECT.PSELECT.AUX.1{
 @ NSELECT.PSELECT.AUX.1
 @ NSELECT and PSELECT may not overlap
 NSELECT AND PSELECT 
}
SLVT.W.1{
@ SLVT.W.1 
@ Minimum horizontal width of SLVT is 108 nm.
 INTERNAL SLVT_VE < 0.108 OPPOSITE
}
SLVT.W.2{
@ SLVT.W.2 
@ Minimum vertical width of SLVT is 54 nm.
 INTERNAL SLVT_HE < 0.054 OPPOSITE
}
SLVT.ACTIVE.EN.1{
 @ SLVT.ACTIVE.EN.1
 @ Minimum horizontal enclosure of ACTIVE (not interacting with SRAMDRC) by
 @ SLVT is 46 nm.
 ENCLOSURE ACTIVE_NIS_VE SLVT_VE < 0.046 ABUT < 90
}
SLVT.ACTIVE.EN.2{
 @ SLVT.ACTIVE.EN.2
 @ Minimum vertical enclosure of ACTIVE (not interacting with SRAMDRC) by
 @ SLVT is 27 nm.
 ENCLOSURE ACTIVE_NIS_HE SLVT_HE < 0.027 ABUT < 90
}
SRAM.SLVT.ACTIVE.EN.3{
 @ SRAM.SLVT.ACTIVE.EN.3
 @ Minimum horizontal enclosure of ACTIVE (interacting with SRAMDRC) by
 @ SLVT is 13.5 nm.
 ENCLOSURE ACTIVE_IS_VE SLVT_VE < 0.0135 ABUT < 90
}
SRAM.SLVT.ACTIVE.EN.4{
 @ SRAM.SLVT.ACTIVE.EN.4
 @ Minimum vertical enclosure of ACTIVE (interacting with SRAMDRC) by
 @ SLVT is 13.5 nm.
 ENCLOSURE ACTIVE_IS_HE SLVT_HE < 0.0135 ABUT < 90
}
SLVT.GATE.EX.1{
 @ SLVT.GATE.EX.1 
 @ Minimum horizontal extension of SLVT past GATE (not cut by GCUT) is
 @ 7 nm.
 ENCLOSURE GATE_NGC_VE SLVT_VE < VAR_OPT_MISALI
}
SLVT.GATE.EX.2{ 
 @ SLVT.GATE.EX.2
 @ Minimum vertical extension of SLVT past GATE (not cut by GCUT layer) is
 @ 7 nm.
 ENCLOSURE GATE_NGC_HE SLVT_HE < VAR_OPT_EUV_MISALI_GRDBND OPPOSITE
}
LVT.W.1{
@ LVT.W.1 
@ Minimum horizontal width of LVT is 108 nm.
 INTERNAL LVT_VE < 0.108 OPPOSITE
}
LVT.W.2{
@ LVT.W.2 
@ Minimum vertical width of LVT is 54 nm.
 INTERNAL LVT_HE < 0.054 OPPOSITE
}
LVT.ACTIVE.EN.1{
 @ LVT.ACTIVE.EN.1
 @ Minimum horizontal enclosure of ACTIVE (not interacting with SRAMDRC) by
 @ LVT is 46 nm.
 ENCLOSURE ACTIVE_NIS_VE LVT_VE < 0.046 ABUT < 90
}
LVT.ACTIVE.EN.2{
 @ LVT.ACTIVE.EN.2
 @ Minimum vertical enclosure of ACTIVE (not interacting with SRAMDRC) by
 @ LVT is 27 nm.
 ENCLOSURE ACTIVE_NIS_HE LVT_HE < 0.027 ABUT < 90
}
SRAM.LVT.ACTIVE.EN.3{
 @ SRAM.LVT.ACTIVE.EN.3
 @ Minimum horizontal enclosure of ACTIVE (interacting with SRAMDRC) by
 @ LVT is 13.5 nm.
 ENCLOSURE ACTIVE_IS_VE LVT_VE < 0.0135 ABUT < 90
}
SRAM.LVT.ACTIVE.EN.4{
 @ SRAM.LVT.ACTIVE.EN.4
 @ Minimum vertical enclosure of ACTIVE (interacting with SRAMDRC) by
 @ LVT is 13.5 nm.
 ENCLOSURE ACTIVE_IS_HE LVT_HE < 0.0135 ABUT < 90
}
LVT.GATE.EX.1{
 @ LVT.GATE.EX.1 
 @ Minimum horizontal extension of LVT past GATE (not cut by GCUT) is
 @ 7 nm.
 ENCLOSURE GATE_NGC_VE LVT_VE < VAR_OPT_MISALI
}
LVT.GATE.EX.2{ 
 @ LVT.GATE.EX.2
 @ Minimum vertical extension of LVT past GATE (not cut by GCUT layer) is 7 nm.
 ENCLOSURE GATE_NGC_HE LVT_HE < VAR_OPT_EUV_MISALI_GRDBND OPPOSITE
}
SRAMVT.W.1{
@ SRAMVT.W.1 
@ Minimum horizontal width of SRAMVT is 108 nm.
 INTERNAL SRAMVT_VE < 0.108 OPPOSITE
}
SRAMVT.W.2{
@ SRAMVT.W.2 
@ Minimum vertical width of SRAMVT is 54 nm.
 INTERNAL SRAMVT_HE < 0.054 OPPOSITE
}
SRAMVT.ACTIVE.EN.1{
 @ SRAMVT.ACTIVE.EN.1
 @ Minimum horizontal enclosure of ACTIVE (not interacting with SRAMDRC) by
 @ SRAMVT is 46 nm.
 ENCLOSURE ACTIVE_NIS_VE SRAMVT_VE < 0.046 ABUT < 90
}
SRAMVT.ACTIVE.EN.2{
 @ SRAMVT.ACTIVE.EN.2
 @ Minimum vertical enclosure of ACTIVE (not interacting with SRAMDRC) by
 @ SRAMVT is 27 nm.
 ENCLOSURE ACTIVE_NIS_HE SRAMVT_HE < 0.027 ABUT < 90
}
SRAM.SRAMVT.ACTIVE.EN.3{
 @ SRAM.SRAMVT.ACTIVE.EN.3
 @ Minimum horizontal enclosure of ACTIVE (interacting with SRAMDRC) by
 @ SRAMVT is 13.5 nm.
 ENCLOSURE ACTIVE_IS_VE SRAMVT_VE < 0.0135 ABUT < 90
}
SRAM.SRAMVT.ACTIVE.EN.4{
 @ SRAM.SRAMVT.ACTIVE.EN.4
 @ Minimum vertical enclosure of ACTIVE (interacting with SRAMDRC) by
 @ SRAMVT is 13.5 nm.
 ENCLOSURE ACTIVE_IS_HE SRAMVT_HE < 0.0135 ABUT < 90
}
SRAMVT.GATE.EX.1{
 @ SRAMVT.GATE.EX.1 
 @ Minimum horizontal extension of SRAMVT past GATE (not cut by GCUT) is
 @ 7 nm.
 ENCLOSURE GATE_NGC_VE SRAMVT_VE < VAR_OPT_MISALI
}
SRAMVT.GATE.EX.2{ 
 @ SRAMVT.GATE.EX.2
 @ Minimum vertical extension of SRAMVT past GATE (not cut by GCUT layer)
 @ is 7 nm.
 ENCLOSURE GATE_NGC_HE SRAMVT_HE < VAR_OPT_EUV_MISALI_GRDBND OPPOSITE
}
VT.AUX.2{
@ VT.AUX.2
@ VT layers (LVT, SLVT, and SRAMVT) may not overlap.
SLVT AND LVT
SLVT AND SRAMVT
LVT AND SRAMVT
}
DUMMY.W.1{
@DUMMY.W.1
@Width of dummy should be 40 nm 
INTERNAL DUMMY_VE <0.040 
INTERNAL DUMMY_VE >0.040 < 0.5
}
DUMMY.CHANNEL.S.1{
@DUMMY.CHANNEL.S.1
@DUMMY spacing from CHANNEL in horizontal direction is 24 nm
EXTERNAL CHANNEL_VE DUMMY_VE <0.024
INTERNAL ACTIVE_VE DUMMY_VE < 0.001
}
DUMMY.CHANNEL.AUX.1{
 @DUMMY.CHANNEL.AUX.1
 @DUMMY must exactly overlap active and may not extend beyond it vertically
 Dum_Act = DUMMY NOT ACTIVE
 Dum_Act_HE = Dum_Act ANGLE == 0
 EXTERNAL ACTIVE_HE Dum_Act_HE >0.001 < 0.002 ABUT
}
DUMMY.AUX.2{
 @DUMMY.AUX.2
 @DUMMY must overlap active. DUMMY without active is not allowed
 EXTERNAL DUMMY ACTIVE > 0.001 < 0.01 
}
SDT.W.1
{
 @ SDT.W.1
 @ Minimum horizontal width of SDT is 24 nm.
 INTERNAL SDT_VE < 0.024 OPPOSITE
}
SDT.W.2
{
 @ SDT.W.2
 @ Minimum vertical width of SDT (not interacting with SRAMDRC) is 27 nm. 
 INTERNAL SDT_NIS_HE < 0.027 OPPOSITE
}
SDT.W.3
{
 @ SDT.W.3
 @ SDT (not interacting with SRAMDRC) layer vertical width increment is an
 @ integer multiple of 27 nm.
 INTERNAL SDT_NIS_HE > 0.027 < 0.054 OPPOSITE
 INTERNAL SDT_NIS_HE > 0.054 < 0.081 OPPOSITE
 INTERNAL SDT_NIS_HE > 0.081 < 0.108 OPPOSITE
 INTERNAL SDT_NIS_HE > 0.108 < 0.135 OPPOSITE
 INTERNAL SDT_NIS_HE > 0.135 < 0.162 OPPOSITE
 INTERNAL SDT_NIS_HE > 0.162 < 0.189 OPPOSITE 
 INTERNAL SDT_NIS_HE > 0.189 < 0.216 OPPOSITE
 INTERNAL SDT_NIS_HE > 0.216 < 0.243 OPPOSITE
 INTERNAL SDT_NIS_HE > 0.243 < 0.270 OPPOSITE
 INTERNAL SDT_NIS_HE > 0.270 < 0.297 OPPOSITE
 INTERNAL SDT_NIS_HE > 0.297 < 0.324 OPPOSITE 
 INTERNAL SDT_NIS_HE > 0.324 < 0.351 OPPOSITE
 INTERNAL SDT_NIS_HE > 0.351 < 0.378 OPPOSITE
 INTERNAL SDT_NIS_HE > 0.378 < 0.405 OPPOSITE
 INTERNAL SDT_NIS_HE > 0.405 < 0.432 OPPOSITE
 INTERNAL SDT_NIS_HE > 0.432 < 0.459 OPPOSITE
 INTERNAL SDT_NIS_HE > 0.459 < 0.486 OPPOSITE
 INTERNAL SDT_NIS_HE > 0.486 < 0.513 OPPOSITE
 INTERNAL SDT_NIS_HE > 0.513 < 0.540 OPPOSITE
 INTERNAL SDT_NIS_HE > 0.540 < 0.567 OPPOSITE
 INTERNAL SDT_NIS_HE > 0.567 < 0.594 OPPOSITE
 INTERNAL SDT_NIS_HE > 0.594 < 0.621 OPPOSITE
 INTERNAL SDT_NIS_HE > 0.621 < 0.648 OPPOSITE
 INTERNAL SDT_NIS_HE > 0.648 < 0.675 OPPOSITE
}
SRAM.SDT.W.4
{
 @ SRAM.SDT.W.4
 @ Minimum vertical width of SDT (interacting with SRAMDRC) is 17 nm.
 INTERNAL SDT_IS_HE < 0.017 OPPOSITE
}
SDT.S.1
{
 @ SDT.S.1
 @ Minimum horizontal spacing between two SDT layer polygons is 30 nm.
 EXTERNAL SDT_VE < 0.030 OPPOSITE
}
SDT.GATE.S.2
{
 @ SDT.GATE.S.2
 @ Minimum horizontal spacing between SDT and GATE is 5 nm.
 EXTERNAL SDT_VE GATE_VE < 0.005 OPPOSITE
}
SDT.ACTIVE.OV.1
{
 @ SDT.ACTIVE.OV.1
 @ Minimum vertical overlap between SDT and ACTIVE is 27 nm. 
 INTERNAL SDT_NIS_HE ACTIVE_NIS_HE < 0.027 OPPOSITE
}
SDT.LISD.OV.2
{
 @ SDT.LISD.OV.2
 @ Minimum vertical overlap between SDT and LISD is 27 nm. 
 INTERNAL SDT_NIS_HE LISD_OS_HE < 0.027 OPPOSITE
}
SRAM.SDT.ACTIVE.OV.3
{
 @ SRAM.SDT.ACTIVE.OV.3
 @ Minimum vertical overlap between SDT (interacting with SRAMDRC) and
 @ ACTIVE is 17 nm.
 INTERNAL SDT_IS_HE ACTIVE_IS_HE < 0.017 OPPOSITE
}
SRAM.SDT.LISD.OV.4
{
 @ SRAM.SDT.LISD.OV.4
 @ Minimum vertical overlap between SDT (interacting with SRAMDRC) and LISD
 @ is 17 nm.
 INTERNAL SDT_IS_HE LISD_IS_HE < 0.017 OPPOSITE
}
SDT.GATE.AUX.1
{
 @ SDT.GATE.AUX.1
 @ SDT and GATE may not overlap or touch.
 SDT AND GATE
 SDT COINCIDENT EDGE GATE
}
SDT.ACTIVE.AUX.2
{
 @ SDT.ACTIVE.AUX.2
 @ SDT (not interacting with SRAMDRC) horizontal edges must coincide with
 @ ACTIVE horizontal edges.
 SDT_NIS_AND_ACTIVE_HE NOT COINCIDENT EDGE ACTIVE_NIS_HE 
}
SDT.ACTIVE.AUX.3
{
 @ SDT.ACTIVE.AUX.3
 @ SDT may not be entirely outside ACTIVE.
 SDT OUTSIDE ACTIVE
}
SDT.LISD.AUX.4
{
 @ SDT.LISD.AUX.4
 @ SDT must always be inside LISD.
 SDT NOT INSIDE LISD 
}
LISD.W.1
{
@ LISD.W.1
@ Minimum width of LISD is 24 nm.
INTERNAL LISD < 0.024
}
LISD.S.1
{
@ LISD.S.1
@ Minimum (side-to-side) spacing between two LISD layer polygons' edges, when
@ both edges are > 36 nm, is 18 nm.
EXTERNAL LISD_SIDE < 0.018 ABUT < 90
}
LISD.S.2
{
@ LISD.S.2
@ Minimum (tip-to-side) spacing between two LISD layer polygons' edges, when
@ one edge is <= 36 nm and the other edge is > 36 nm, is 25 nm.
EXTERNAL LISD_TIP LISD_SIDE < 0.025 ABUT < 90 PROJECTING NOT CORNER
}
LISD.S.3
{
@ LISD.S.3
@ Minimum (tip-to-tip) spacing between two LISD layer polygons' (lying
@ completely outside the layer SRAMDRC) edges, when both edges are >= 24
@ nm and <= 36 nm, is 27 nm.
EXTERNAL LISD_OS_WIDE_TIP < 0.027 ABUT < 90 PROJECTING NOT CORNER
}
SRAM.LISD.S.4
{
@ SRAM.LISD.S.4
@ Minimum (tip-to-tip) spacing between two LISD layer polygons'
@ (interacting with the layer SRAMDRC) edges, when both edges are <=
@ 36 nm, is 27 nm. 
EXTERNAL LISD_IS_TIP < 0.027 ABUT < 90 PROJECTING NOT CORNER
}
LISD.A.1
{
@ LISD.A.1
@ Minimum LISD area is 648 nm-sq.
AREA LISD < 0.000648
}
SRAM.LISD.AUX.1
{
@ SRAM.LISD.AUX.1
@ LISD layer polygons, which are either completely outside the SRAMDRC
@ layer or which do not intersect the SRAMDRC layer, may not touch the SRAMDRC
@ layer.
SRAMDRC COINCIDENT OUTSIDE EDGE LISD
}
LIG.W.1
{
@ LIG.W.1
@ Minimum width of LIG is 16 nm.
INTERNAL LIG < 0.016
}
LIG.S.1
{
@ LIG.S.1
@ Minimum (side-to-side) spacing between two LIG layer polygons' edges, when
@ both edges are > 36 nm, is 18 nm.
EXTERNAL LIG_SIDE < 0.018 ABUT < 90 
}
LIG.S.2
{
@ LIG.S.2
@ Minimum (tip-to-side) spacing between two LIG layer polygons' edges, when
@ one edge is <= 36 nm and the other edge is > 36 nm, is 25 nm.
EXTERNAL LIG_TIP LIG_SIDE < 0.025 ABUT < 90 PROJECTING NOT CORNER
}
LIG.S.3
{
@ LIG.S.3
@ Minimum (tip-to-tip) spacing between two LIG layer polygons' (lying
@ completely outside the layer SRAMDRC) edges, when both edges are >= 24 nm
@ and <= 36 nm, is 27 nm.
EXTERNAL LIG_WIDE_TIP < 0.027 ABUT < 90 PROJECTING NOT CORNER
}
LIG.S.4
{
@ LIG.S.4
@ Minimum (tip-to-tip) spacing between two LIG layer polygons' (lying
@ completely outside the layer SRAMDRC) edges, when both edges are < 24 nm,
@ is 31 nm.
EXTERNAL LIG_NARROW_TIP < 0.031 ABUT < 90 PROJECTING NOT CORNER
}
LIG.S.5
{
@ LIG.S.5
@ Minimum (tip-to-tip) spacing between two LIG layer polygons' (lying
@ completely outside the layer SRAMDRC) edges, when one of the edges is >=
@ 24 nm and <= 36 nm, and the other is < 24 nm, is 31 nm.
EXTERNAL LIG_WIDE_TIP LIG_NARROW_TIP < 0.031 ABUT < 90 PROJECTING NOT CORNER
}
LIG.LISD.S.6
{
@ LIG.LISD.S.6
@ Minimum spacing between LIG and LISD layer polygons not on the same net
@ is 14 nm.
EXTERNAL LISD LIG < 0.014 ABUT < 90 SINGULAR NOT CONNECTED
}
LIG.LISD.S.7
{
@ LIG.LISD.S.7
@ Minimum corner-to-corner spacing between LISD and LIG not on the same net
@ is 15 nm.
EXTERNAL LISD LIG < 0.015 ABUT < 90 CORNER TO CORNER SINGULAR NOT CONNECTED
}
LIG.SDT.S.8
{
@ LIG.SDT.S.8
@ Minimum spacing between LIG and SDT layer polygons not on the same net is
@ 14 nm.
EXTERNAL SDT LIG < 0.014 ABUT < 90 SINGULAR NOT CONNECTED
}
LIG.GATE.S.9A
{
@ LIG.GATE.S.9A
@ Minimum vertical spacing between LIG and GATE (not cut using GCUT) layer
@ polygons is 14 nm.
EXTERNAL LIG_HE GATE_NGC_HE < 0.014 ABUT < 90 
EXTERNAL LIG GATE_NGC < 0.001 SINGULAR
}
LIG.GATE.S.9B
{
@ LIG.GATE.S.9B
@ Minimum horizontal spacing between LIG and GATE (not cut using GCUT) layer
@ polygons is 17 nm.
EXTERNAL LIG_VE GATE_NGC_VE < 0.017 ABUT < 90 
}
LIG.GATE.S.10
{
@ LIG.GATE.S.10
@ Minimum spacing between LIG and GATE (not cut using GCUT) forming
@ a channel (GATE layer polygon over ACTIVE) is 5 nm. 
EXTERNAL LIG CHANNELR < 0.005 ABUT < 90 SINGULAR
LIG INTERACT CHANNELR
}
LIG.GCUT.S.11
{
@ LIG.GCUT.S.11
@ Minimum vertical spacing between LIG and GCUT is 5 nm.
 EXTERNAL LIG_HE GCUT_HE < 0.005 ABUT < 90 
 EXTERNAL LIG GCUT < 0.001 SINGULAR
}
LIG.A.1
{
@ LIG.A.1
@ Minimum LIG area is 324 nm-sq.
AREA LIG < 0.000324
}
LIG.LISD.A.2
{
@ LIG.LISD.A.2
@ Minimum area of overlap between LIG and LISD is 128 nm-sq.
X = LIG AND LISD
AREA X < 0.000128
}
LIG.GATE.A.3
{
@ LIG.GATE.A.3
@ Minimum area of overlap between LIG (lying completely outside the layer
@ SRAMDRC) and GATE (not cut using GCUT) is 320 nm-sq.
X = LIG_OS AND GATE_NGC
AREA X < 0.000320
}
SRAM.LIG.GATE.A.4
{
@ SRAM.LIG.GATE.A.4
@ Minimum area of overlap between LIG (interacting with the layer
@ SRAMDRC) and GATE (not cut using GCUT) is 240 nm-sq.
X = LIG_IS AND GATE_NGC
AREA X < 0.000240
}
LIG.GATE.AUX.1{
 @ LIG.GATE.AUX.1
 @ LIG layer (lying completely outside the layer SRAMDRC) vertical edge may
 @ not lie inside, or coincide with, the GATE layer.
 LIG_OS_VE INSIDE EDGE GATE
 LIG_OS_VE COINCIDENT EDGE GATE
}
SRAM.LIG.AUX.2
{
@ SRAM.LIG.AUX.2
@ LIG layer polygons, which are either completely outside the SRAMDRC
@ layer or which do not intersect the SRAMDRC layer, may not touch the SRAMDRC
@ layer.
SRAMDRC COINCIDENT OUTSIDE EDGE LIG
}
LIG.GATE.EX.1
{
@ LIG.GATE.EX.1
@ Minimum extension of LIG (lying completely outside the layer SRAMDRC)
@ over GATE (not cut using GCUT) on both opposite sides is 1 nm.
ENCLOSURE GATE_NGC LIG_OS < 0.001
LIG_OS_VE = LIG_OS ANGLE == 90
LIG_OS_VE INSIDE EDGE GATE_NGC
LIG_OS_VE COINCIDENT EDGE GATE_NGC
}
LIG.LISD.OV.1
{
@ LIG.LISD.OV.1
@ Minimum overlap between LIG and LISD connected together is 8 nm.
INTERNAL LIG LISD< 0.008 OPPOSITE CONNECTED
}
SRAM.LIG.GATE.OV.2
{
@ SRAM.LIG.GATE.OV.2
@ Minimum overlap of LIG (interacting with the layer SRAMDRC) and GATE (not
@ cut using GCUT) is 15 nm.
INTERNAL LIG_IS GATE_NGC < 0.015 OPPOSITE CONNECTED
}
V0.W.1
{
@ V0.W.1
@ Minimum width of a V0 instance along the length of M1 is 18 nm.
INTERNAL V0 < 0.018 OPPOSITE
COPY V0SAVNEC_NARROW_ED
COPY V0SAVWEC_NARROW_ED
}
V0.S.1
{
@ V0.S.1
@ Minimum spacing between V0 instances [on the same M1 track | on parallel M1
@ tracks, if they are not aligned with each other | on parallel M1 tracks, if
@ they are fully or partially aligned with each other], is [18 nm | 27 nm |
@ 18 nm]. 
@ NOTE: The lower bound in the last case will be set by M1, precluding any
@ occurrence of V0 instances at a distance smaller than the minimum spacing
@ between M1. 
V0MASKNM1 = V0MASK NOT M1
V0MASKNM1NTE = V0MASKNM1 NOT TOUCH EDGE M1 ENDPOINT ALSO
EXTERNAL V0MASKNM1NTE < 0.017 ABUT < 90 OPPOSITE
V0MASKAV = V0MASK AND V0
V0MASKAVNCIEM = V0MASKAV NOT COINCIDENT INSIDE EDGE M1
EXTERNAL V0MASKAVNCIEM < 0.018 ABUT < 90 OPPOSITE
EXTERNAL V0MASK < 0.001 SINGULAR 
}
V0.S.2
{
@ V0.S.2
@ Minimum corner-to-corner spacing between two V0 instances——both with a 5
@ nm M1 end-cap——is 23 nm.
EXTERNAL V0SAVWECMASK < 0.01640 SINGULAR CORNER TO CORNER
}
V0.S.3
{
@ V0.S.3
@ Minimum corner-to-corner spacing between two V0 instance——both without a
@ 5 nm M1 end-cap——is 30 nm.
EXTERNAL V0SAVNECMASK < 0.01612 SINGULAR CORNER TO CORNER
}
V0.S.4
{
@ V0.S.4
@ Minimum corner-to-corner spacing between two V0 instances——one with
@ and another without, a 5 nm M1 end-cap——is 27 nm.
EXTERNAL V0SAVWECMASK V0SAVNECMASK < 0.01711 SINGULAR CORNER TO CORNER
}
V0.M1.EN.1
{
@ V0.M1.EN.1
@ Minimum enclosure of V0 by M1 on two opposite sides is 5 & 5 nm or 5 & 0 nm. 
RECTANGLE ENCLOSURE V0 M1 ABUT>0<90 SINGULAR ORTHOGONAL ONLY OUTSIDE ALSO
GOOD 0.005 0 0.005 0
GOOD 0 0.005 0 0.005
GOOD 0 0 0.005 0
GOOD 0.005 0 0 0
GOOD 0 0.005 0 0
GOOD 0 0 0 0.005
ENCLOSURE V0 M1 > 0 < 0.005 OPPOSITE PARALLEL ONLY PROJ > 0
}
V0.LISD.EN.2
{
@ V0.LISD.EN.2
 @ Minimum enclosure of V0 (interacting with LISD, but not with LIG) by LISD
 @ on at least two opposite sides is 3 nm and such a V0 must lie 
 @ completely inside LISD. 
 RECTANGLE ENCLOSURE V0_ILISD_NILIG LISD ABUT>0<90 SINGULAR ORTHOGONAL ONLY OUTSIDE ALSO
 GOOD 0 0.003 0 0.003
 GOOD 0.003 0 0.003 0
}
V0.LISD.EN.3
{
@ V0.LISD.EN.3
 @ Minimum enclosure of V0 (sharing some, but not all its area with LISD) by
 @ LISD (interacting with LIG) on at least two opposite sides is 3 nm and such a
 @ V0 does not need to lie completely inside LISD. 
 RECTANGLE ENCLOSURE V0_ILIG_CLISD LISD_ILIG  SINGULAR ORTHOGONAL ONLY
 GOOD 0 0.003 0 0.003
 GOOD 0.003 0 0.003 0
}
V0.LIG.EN.4
{
@ V0.LIG.EN.4
@ Minimum enclosure of LIG by V0 (interacting with LIG and not inside LISD)
@ on two opposite sides is 1 nm. 
 ENCLOSURE LIG V0_ILIG_NINSLISD < 0.001 OPPOSITE
}
V0.LIG.A.1
{
 @ V0.LIG.A.1
 @ Minimum area of overlap between V0 (interacting with LIG and not inside
 @ LISD) and LIG is 288 nm-sq.
 X = V0_ILIG_NINSLISD AND LIG
 AREA X  < 0.000288 
}
V0.AUX.1
{
@ V0.AUX.1
 @ V0 must always interact with M1 and [LISD|LIG]. 
 X = (M1 AND LISD) OR (M1 AND LIG)
 V0 NOT INTERACT X
}
V0.LIG.AUX.2
{
@ V0.LIG.AUX.2
@ An instance of V0 (interacting with LIG but not inside LIG and not inside
@ LISD) with an edge (parallel to the LIG length) lying inside, or touching
@ LIG, is not permitted.
X = V0_ILIG_NINSLISD NOT INSIDE LIG
Y = X INSIDE EDGE LIG
P = CONVEX EDGE Y >= 1
Q = X COINCIDENT EDGE LIG
X WITH EDGE P
X WITH EDGE Q
}
V0.M1.AUX.3 
{
 @ V0.M1.AUX.3
 @ V0 must exactly be the same width as M1 along the direction perpendicular
 @ to the M1 length.
 V0 WITH EDGE V0NCIEM1B
}
M1.W.1{
@ M1.W.1
@ Minimum width of M1 is 18 nm.
INTERNAL M1 < 0.018
}
M1.S.1{
@ M1.S.1
@ Minimum (side-to-side) spacing between two M1 layer polygons' edges, when both
@ edges are > 36 nm, is 18 nm. 
EXTERNAL M1_SIDE < 0.018 ABUT < 90 
EXTERNAL M1 < 0.001 SINGULAR 
}
M1.S.2{
@ M1.S.2
@ Minimum (tip-to-side) spacing between two M1 layer polygons' edges, when
@ one of the edges is <= 36 nm and the other is > 36 nm, is 25 nm. 
EXTERNAL M1_TIP M1_SIDE < 0.025 ABUT < 90 PROJECTING NOT CORNER
}
M1.S.3{
@ M1.S.3
@ Minimum (tip-to-tip) spacing between two M1 layer polygons' edges, when
@ both edges are >= 24 nm and <= 36 nm, is 27 nm.
EXTERNAL M1_WIDE_TIP < 0.027 ABUT < 90 PROJECTING NOT CORNER
}
M1.S.4{
@ M1.S.4
@ Minimum (tip-to-tip) spacing between two M1 layer polygons' edges, when
@ both edges are < 24 nm, is 31 nm.
EXTERNAL M1_NARROW_TIP < 0.031 ABUT < 90 PROJECTING NOT CORNER
}
M1.S.5{
@ M1.S.5
@ Minimum (tip-to-tip) spacing between two M1 layer polygons' edges, when
@ one of the edges is >= 24 nm and <= 36 nm, and the other is < 24 nm, is
@ 31 nm.
EXTERNAL M1_WIDE_TIP M1_NARROW_TIP < 0.031 ABUT < 90 PROJECTING NOT CORNER
}
M1.S.6{
@ M1.S.6
@ Minimum corner-to-corner spacing between two M1 polygons is 20 nm.
EXTERNAL M1 < 0.020 SINGULAR CORNER TO CORNER
}
M1.A.1{
@ M1.A.1
@ Minimum M1 area is 504 nm-sq.
AREA M1 < 0.000504
}
M2.W.1{
@ M2.W.1
@ Minimum width of M2 is 18 nm.
INTERNAL M2 < 0.018
}
M2.S.1{
@ M2.S.1
@ Minimum (side-to-side) spacing between two M2 layer polygons' edges, when both
@ edges are > 36 nm, is 18 nm. 
EXTERNAL M2_SIDE < 0.018 ABUT < 90 
EXTERNAL M2 < 0.001 SINGULAR 
}
M2.S.2{
@ M2.S.2
@ Minimum (tip-to-side) spacing between two M2 layer polygons' edges, when
@ one of the edges is <= 36 nm and the other is > 36 nm, is 25 nm. 
EXTERNAL M2_TIP M2_SIDE < 0.025 ABUT < 90 PROJECTING NOT CORNER
}
M2.S.3{
@ M2.S.3
@ Minimum (tip-to-tip) spacing between two M2 layer polygons' edges, when
@ both edges are >= 24 nm and <= 36 nm, is 27 nm.
EXTERNAL M2_WIDE_TIP < 0.027 ABUT < 90 PROJECTING NOT CORNER
}
M2.S.4{
@ M2.S.4
@ Minimum (tip-to-tip) spacing between two M2 layer polygons' edges, when
@ both edges are < 24 nm, is 31 nm.
EXTERNAL M2_NARROW_TIP < 0.031 ABUT < 90 PROJECTING NOT CORNER
}
M2.S.5{
@ M2.S.5
@ Minimum (tip-to-tip) spacing between two M2 layer polygons' edges, when
@ one of the edges is >= 24 nm and <= 36 nm, and the other is < 24 nm, is
@ 31 nm.
EXTERNAL M2_WIDE_TIP M2_NARROW_TIP < 0.031 ABUT < 90 PROJECTING NOT CORNER
}
M2.S.6{
@ M2.S.6
@ Minimum corner-to-corner spacing between two M2 polygons is 20 nm.
EXTERNAL M2 < 0.020 SINGULAR CORNER TO CORNER
}
M2.A.1{
@ M2.A.1
@ Minimum M2 area is 504 nm-sq.
AREA M2 < 0.000504
}
M3.W.1{
@ M3.W.1
@ Minimum width of M3 is 18 nm.
INTERNAL M3 < 0.018
}
M3.S.1{
@ M3.S.1
@ Minimum (side-to-side) spacing between two M3 layer polygons' edges, when both
@ edges are > 36 nm, is 18 nm. 
EXTERNAL M3_SIDE < 0.018 ABUT < 90 
EXTERNAL M3 < 0.001 SINGULAR 
}
M3.S.2{
@ M3.S.2
@ Minimum (tip-to-side) spacing between two M3 layer polygons' edges, when
@ one of the edges is <= 36 nm and the other is > 36 nm, is 25 nm. 
EXTERNAL M3_TIP M3_SIDE < 0.025 ABUT < 90 PROJECTING NOT CORNER
}
M3.S.3{
@ M3.S.3
@ Minimum (tip-to-tip) spacing between two M3 layer polygons' edges, when
@ both edges are >= 24 nm and <= 36 nm, is 27 nm.
EXTERNAL M3_WIDE_TIP < 0.027 ABUT < 90 PROJECTING NOT CORNER
}
M3.S.4{
@ M3.S.4
@ Minimum (tip-to-tip) spacing between two M3 layer polygons' edges, when
@ both edges are < 24 nm, is 31 nm.
EXTERNAL M3_NARROW_TIP < 0.031 ABUT < 90 PROJECTING NOT CORNER
}
M3.S.5{
@ M3.S.5
@ Minimum (tip-to-tip) spacing between two M3 layer polygons' edges, when
@ one of the edges is >= 24 nm and <= 36 nm, and the other is < 24 nm, is
@ 31 nm.
EXTERNAL M3_WIDE_TIP M3_NARROW_TIP < 0.031 ABUT < 90 PROJECTING NOT CORNER
}
M3.S.6{
@ M3.S.6
@ Minimum corner-to-corner spacing between two M3 polygons is 20 nm.
EXTERNAL M3 < 0.020 SINGULAR CORNER TO CORNER
}
M3.A.1{
@ M3.A.1
@ Minimum M3 area is 504 nm-sq.
AREA M3 < 0.000504
}
V1.W.1
{
@ V1.W.1
@ Minimum width of a V1 instance along the length of M2 is 18 nm.
INTERNAL V1 < 0.018 OPPOSITE
COPY V1SAVNEC_NARROW_ED
COPY V1SAVWEC_NARROW_ED
}
V1.S.1
{
@ V1.S.1
@ Minimum spacing between V1 instances [on the same M2 track | on parallel M2
@ tracks, if they are not aligned with each other | on parallel M2 tracks, if
@ they are fully or partially aligned with each other], is [18 nm | 27 nm |
@ 18 nm]. 
@ NOTE: The lower bound in the last case will be set by M2, precluding any
@ occurrence of V1 instances at a distance smaller than the minimum spacing
@ between M2. 
V1MASKNM2 = V1MASK NOT M2
V1MASKNM2NTE = V1MASKNM2 NOT TOUCH EDGE M2 ENDPOINT ALSO
EXTERNAL V1MASKNM2NTE < 0.017 ABUT < 90 OPPOSITE
V1MASKAV = V1MASK AND V1
V1MASKAVNCIEM = V1MASKAV NOT COINCIDENT INSIDE EDGE M2
EXTERNAL V1MASKAVNCIEM < 0.018 ABUT < 90 OPPOSITE
EXTERNAL V1MASK < 0.001 SINGULAR 
}
V1.S.2
{
@ V1.S.2
@ Minimum corner-to-corner spacing between two V1 instances——both with a 5
@ nm M2 end-cap——is 23 nm.
EXTERNAL V1SAVWECMASK < 0.01640 SINGULAR CORNER TO CORNER
}
V1.S.3
{
@ V1.S.3
@ Minimum corner-to-corner spacing between two V1 instances——both without a
@ 5 nm M2 end-cap——is 30 nm.
EXTERNAL V1SAVNECMASK < 0.01612 SINGULAR CORNER TO CORNER
}
V1.S.4
{
@ V1.S.4
@ Minimum corner-to-corner spacing between two V1 instances——one with
@ and another without, a 5 nm M2 end-cap——is 27 nm.
EXTERNAL V1SAVWECMASK V1SAVNECMASK < 0.01711 SINGULAR CORNER TO CORNER
}
V1.M1.EN.1{
@ V1.M1.EN.1
@ Minimum enclosure of V1 by M1 on two opposite sides is 5 & 2 nm.
RECTANGLE ENCLOSURE V1 M1 ABUT>0<90 SINGULAR ORTHOGONAL ONLY OUTSIDE ALSO
GOOD 0.005 0 0.002 0
GOOD 0 0.002 0 0.005
}
V1.M2.EN.2{
@ V1.M2.EN.2
@ Minimum enclosure of V1 by M2 on two opposite sides is 5 & 5 nm or 5 & 0 nm. 
RECTANGLE ENCLOSURE V1 M2 ABUT>0<90 SINGULAR ORTHOGONAL ONLY OUTSIDE ALSO
GOOD 0.005 0 0.005 0
GOOD 0 0.005 0 0.005
GOOD 0.005 0 0 0
GOOD 0 0.005 0 0
GOOD 0 0 0.005 0
GOOD 0 0 0 0.005
ENCLOSURE V1 M2 > 0 < 0.005 OPPOSITE PARALLEL ONLY PROJ > 0
}
V1.AUX.1{
@ V1.AUX.1
@ V1 must be inside M1 and M2.
V1 NOT INSIDE (M1 AND M2)
}
V1.M2.AUX.2 {
 @ V1.M2.AUX.2
 @ V1 must exactly be the same width as M2 along the direction perpendicular
 @ to the M2 length.
 V1 WITH EDGE V1NCIEM2B
}
V2.W.1
{
@ V2.W.1
@ Minimum width of a V2 instance along the length of M3 is 18 nm.
INTERNAL V2 < 0.018 OPPOSITE
COPY V2SAVNEC_NARROW_ED
COPY V2SAVWEC_NARROW_ED
}
V2.S.1
{
@ V2.S.1
@ Minimum spacing between V2 instances [on the same M3 track | on parallel M3
@ tracks, if they are not aligned with each other | on parallel M3 tracks, if
@ they are fully or partially aligned with each other], is [18 nm | 27 nm |
@ 18 nm]. 
@ NOTE: The lower bound in the last case will be set by M3, precluding any
@ occurrence of V2 instances at a distance smaller than the minimum spacing
@ between M3. 
V2MASKNM3 = V2MASK NOT M3
V2MASKNM3NTE = V2MASKNM3 NOT TOUCH EDGE M3 ENDPOINT ALSO
EXTERNAL V2MASKNM3NTE < 0.017 ABUT < 90 OPPOSITE
V2MASKAV = V2MASK AND V2
V2MASKAVNCIEM = V2MASKAV NOT COINCIDENT INSIDE EDGE M3
EXTERNAL V2MASKAVNCIEM < 0.018 ABUT < 90 OPPOSITE
EXTERNAL V2MASK < 0.001 SINGULAR 
}
V2.S.2
{
@ V2.S.2
@ Minimum corner-to-corner spacing between two V2 instances——both with a 5
@ nm M3 end-cap——is 23 nm.
EXTERNAL V2SAVWECMASK < 0.01640 SINGULAR CORNER TO CORNER
}
V2.S.3
{
@ V2.S.3
@ Minimum corner-to-corner spacing between two V2 instances——both without a
@ 5 nm M3 end-cap——is 30 nm.
EXTERNAL V2SAVNECMASK < 0.01612 SINGULAR CORNER TO CORNER
}
V2.S.4
{
@ V2.S.4
@ Minimum corner-to-corner spacing between two V2 instances——one with
@ and another without, a 5 nm M3 end-cap——is 27 nm.
EXTERNAL V2SAVWECMASK V2SAVNECMASK < 0.01711 SINGULAR CORNER TO CORNER
}
V2.M2.EN.1{
@ V2.M2.EN.1
@ Minimum enclosure of V2 by M2 on at least two opposite sides is 5 nm.
RECTANGLE ENCLOSURE V2 M2 ABUT>0<90 SINGULAR ORTHOGONAL ONLY OUTSIDE ALSO
GOOD 0.005 0 0.005 0
GOOD 0 0.005 0 0.005
}
V2.M3.EN.2{
@ V2.M3.EN.2
@ Minimum enclosure of V2 by M3 on two opposite sides is 5 & 5 nm or 5 & 0 nm.
RECTANGLE ENCLOSURE V2 M3 ABUT>0<90 SINGULAR ORTHOGONAL ONLY OUTSIDE ALSO
GOOD 0.005 0 0.005 0
GOOD 0 0.005 0 0.005
GOOD 0.005 0 0 0
GOOD 0 0.005 0 0
GOOD 0 0 0.005 0
GOOD 0 0 0 0.005
ENCLOSURE V2 M3 > 0 < 0.005 OPPOSITE PARALLEL ONLY PROJ > 0
}
V2.AUX.1{
@ V2.AUX.1
@ V2 must be inside M2 and M3.
V2 NOT INSIDE (M2 AND M3)
}
V2.M3.AUX.2 {
 @ V2.M3.AUX.2
 @ V2 must exactly be the same width as M3 along the direction perpendicular
 @ to the M3 length.
 V2 WITH EDGE V2NCIEM3B
}
V3.W.1
{
@ V3.W.1
@ Minimum width of a V3 instance along the length of M4 is 18 nm.
INTERNAL V3 < 0.018 OPPOSITE
COPY V3SAVNEC_NARROW_ED
COPY V3SAVWEC_NARROW_ED
}
V3.S.1
{
@ V3.S.1
@ Minimum spacing between V3 instances [on the same M4 track | on parallel M4
@ tracks, if they are not aligned with each other | on parallel M4 tracks, if
@ they are fully or partially aligned with each other], is [18 nm | 27 nm |
@ 18 nm]. 
@ NOTE: The lower bound in the last case will be set by M4, precluding any
@ occurrence of V3 instances at a distance smaller than the minimum spacing
@ between M4. 
V3MASKNM4 = V3MASK NOT M4
V3MASKNM4NTE = V3MASKNM4 NOT TOUCH EDGE M4 ENDPOINT ALSO
EXTERNAL V3MASKNM4NTE < 0.017 ABUT < 90 OPPOSITE
V3MASKAV = V3MASK AND V3
V3MASKAVNCIEM = V3MASKAV NOT COINCIDENT INSIDE EDGE M4
EXTERNAL V3MASKAVNCIEM < 0.018 ABUT < 90 OPPOSITE
EXTERNAL V3MASK < 0.001 SINGULAR 
}
V3.S.2
{
@ V3.S.2
@ Minimum corner-to-corner spacing between two V3 instances——both with a 5
@ nm M4 end-cap——is 23 nm.
EXTERNAL V3SAVWECMASK < 0.01640 SINGULAR CORNER TO CORNER
}
V3.S.3
{
@ V3.S.3
@ Minimum corner-to-corner spacing between two V3 instances——both without a
@ 5 nm M4 end-cap——is 30 nm.
EXTERNAL V3SAVNECMASK < 0.01612 SINGULAR CORNER TO CORNER
}
V3.S.4
{
@ V3.S.4
@ Minimum corner-to-corner spacing between two V3 instances——one with
@ and another without, a 5 nm M4 end-cap——is 27 nm.
EXTERNAL V3SAVWECMASK V3SAVNECMASK < 0.01711 SINGULAR CORNER TO CORNER
}
V3.M3.EN.1{
@ V3.M3.EN.1
@ Minimum enclosure of V3 by M3 on at least two opposite sides is 5 nm.
RECTANGLE ENCLOSURE V3 M3 ABUT>0<90 SINGULAR ORTHOGONAL ONLY OUTSIDE ALSO
GOOD 0.005 0 0.005 0
GOOD 0 0.005 0 0.005
}
V3.M4.EN.2{
@ V3.M4.EN.2
@ Minimum enclosure of V3 by M4 on at least two opposite sides is 11 nm.
RECTANGLE ENCLOSURE V3 M4 ABUT>0<90 SINGULAR ORTHOGONAL ONLY OUTSIDE ALSO
GOOD 0.011 0 0.011 0
GOOD 0 0.011 0 0.011
}
V3.AUX.1{
@ V3.AUX.1
@ V3 must be inside M3 and M4.
V3 NOT INSIDE (M3 AND M4)
}
V3.M4.AUX.2 {
 @ V3.M4.AUX.2
 @ V3 must exactly be the same width as M4 along the direction perpendicular
 @ to the M4 length.
 V3 WITH EDGE V3NCIEM4B
}
M4.W.1{
@ M4.W.1
@ Minimum vertical width of M4 is 24 nm.
INTERNAL M4_HE < VAR_M4_1X
}
M4.W.2{
@ M4.W.2
@ Maximum vertical width of M4 is 480 nm.
INTERNAL M4_HE > 20*VAR_M4_1X < 10000*VAR_M4_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
}
M4.W.3{
@ M4.W.3
@ M4 vertical width may not be an even integer multiple of its minimum
@ width. 
INTERNAL M4_HE ==  2*VAR_M4_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M4_HE ==  4*VAR_M4_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M4_HE ==  6*VAR_M4_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M4_HE ==  8*VAR_M4_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M4_HE == 10*VAR_M4_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M4_HE == 12*VAR_M4_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M4_HE == 14*VAR_M4_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M4_HE == 16*VAR_M4_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M4_HE == 18*VAR_M4_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M4_HE == 20*VAR_M4_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
}
M4.W.4{
@ M4.W.4
@ M4 vertical width, resulting in the polygon spanning an even number of
@ minimum width routing tracks vertically, is not allowed.
INTERNAL M4_HE ==  3*VAR_M4_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M4_HE ==  7*VAR_M4_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M4_HE == 11*VAR_M4_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M4_HE == 15*VAR_M4_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M4_HE == 19*VAR_M4_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
}
M4.W.5{
@ M4.W.5
@ Minimum horizontal width of M4 is 44 nm.
INTERNAL M4_VE < VAR_BLOCK_MASK_T2T
}
M4.S.1{
@ M4.S.1
@ Minimum vertical spacing between two M4 layer polygons'
@ edges, regardless of the edge lengths and mask colors, is 24 nm.
EXTERNAL M4_HE < VAR_M4_1X ABUT < 90
EXTERNAL M4 < 0.001 SINGULAR 
}
M4.S.2{
@ M4.S.2
@ Minimum horizontal spacing between two M4 layer polygons'
@ edges, regardless of the edge lengths and mask colors, is 40 nm.
EXTERNAL M4_VE < VAR_BLOCK_MASK_W ABUT < 90
EXTERNAL M4 < 0.001 SINGULAR 
}
M4.S.3{
@ M4.S.3
@ Minimum tip-to-tip spacing between two M4 layer polygons——that do not
@ share a parallel run length——on adjacent tracks is 40 nm.
M4_LE_EXTE = M4_VE EXPAND EDGE INSIDE BY 0.0001 EXTEND BY (VAR_M4_1X + (VAR_M4_1X/4))
M4_LE_EXTENM = M4_LE_EXTE NOT M4
M4_LE_EXTENM CONVEX EDGE ANGLE1 < 180 ANGLE2 > 180
M4_LE_EXTETIEM = M4_LE_EXTENM TOUCH EDGE M4 ENDPOINT ONLY
EXTERNAL M4_LE_EXTETIEM M4_VE < VAR_BLOCK_MASK_W EXCLUDE SHIELDED 4 BY LAYER M4_VE OPPOSITE PARALLEL ONLY PROJ > 0
}
M4.S.4{
@ M4.S.4
@ Minimum tip-to-tip spacing between two M4 layer polygons——that 
@ share a parallel run length——on adjacent tracks is 40 nm.
M4_LE_EXTE = M4_VE EXPAND EDGE INSIDE BY 0.0001 EXTEND BY (VAR_M4_1X + (VAR_M4_1X/4))
M4_LE_EXTENM = M4_LE_EXTE NOT M4
M4_LE_EXTETIEM = M4_LE_EXTENM TOUCH EDGE M4 ENDPOINT ONLY
ENCLOSURE M4_VE M4_LE_EXTETIEM < VAR_BLOCK_MASK_W EXCLUDE SHIELDED 4 BY LAYER M4_VE OPPOSITE PARALLEL ONLY PROJ > 0
}
M4.S.5{
@ M4.S.5
@ Minimum parallel run length of two M4 layer polygons on adjacent
@ tracks is 44 nm.
M4_PRLR = EXTERNAL M4_HE == VAR_M4_1X EXCLUDE SHIELDED 4 REGION OPPOSITE PARALLEL ONLY PROJ > 0 
M4_PRLR_VE = M4_PRLR ANGLE == 90
INTERNAL M4_PRLR_VE < VAR_BLOCK_MASK_T2T EXCLUDE SHIELDED 4 OPPOSITE PARALLEL ONLY PROJ > 0 
}
M4.AUX.1{
@ M4.AUX.1
@ M4 horizontal edges must be at a grid of 24 nm.
OFFGRID M4 1 VAR_M4_1X_DBU OFFSET 0 VAR_M4_YOFFSET HINT
}
M4.AUX.2{
@ M4.AUX.2
@ Minimum width M4 tracks must lie along the horizontal routing tracks. 
@ These tracks are located at a spacing equal to:
@ 2N x minimum metal width + offset from the origin, where N ϵ Z-+.
OFFGRID (M4_1X_CL NOT INSIDE EDGE M4_OFFGRIDR) 1 (2*VAR_M4_1X_DBU) OFFSET 0 (-VAR_M4_1X_OFFSET_GRIDA_TOT) HINT
}
M4.AUX.3{
@ M4.AUX.3
@ M4 may not bend.
CONVEX EDGE M4 ANGLE1 > 90 ANGLE2 > 0
}
M4.AUX.4{
@ M4.AUX.4
@ Outside edge of a wide M4 layer polygon may not touch a routing track
@ edge.
M4_WIDE TOUCH OUTSIDE EDGE M4_1X_STRIPES
}
M5.W.1{
@ M5.W.1
@ Minimum horizontal width of M5 is 24 nm.
INTERNAL M5_VE < VAR_M5_1X
}
M5.W.2{
@ M5.W.2
@ Maximum horizontal width of M5 is 480 nm.
INTERNAL M5_VE > 20*VAR_M5_1X < 10000*VAR_M5_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
}
M5.W.3{
@ M5.W.3
@ M5 horizontal width may not be an even integer multiple of its minimum
@ width. 
INTERNAL M5_VE ==  2*VAR_M5_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M5_VE ==  4*VAR_M5_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M5_VE ==  6*VAR_M5_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M5_VE ==  8*VAR_M5_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M5_VE == 10*VAR_M5_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M5_VE == 12*VAR_M5_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M5_VE == 14*VAR_M5_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M5_VE == 16*VAR_M5_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M5_VE == 18*VAR_M5_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M5_VE == 20*VAR_M5_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
}
M5.W.4{
@ M5.W.4
@ M5 horizontal width, resulting in the polygon spanning an even number of
@ minimum width routing tracks horizontally, is not allowed.
INTERNAL M5_VE ==  3*VAR_M5_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M5_VE ==  7*VAR_M5_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M5_VE == 11*VAR_M5_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M5_VE == 15*VAR_M5_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M5_VE == 19*VAR_M5_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
}
M5.W.5{
@ M5.W.5
@ Minimum vertical width of M5 is 44 nm.
INTERNAL M5_HE < VAR_BLOCK_MASK_T2T
}
M5.S.1{
@ M5.S.1
@ Minimum horizontal spacing between two M5 layer polygons'
@ edges, regardless of the edge lengths and mask colors, is 24 nm.
EXTERNAL M5_VE < VAR_M5_1X ABUT < 90
EXTERNAL M5 < 0.001 SINGULAR 
}
M5.S.2{
@ M5.S.2
@ Minimum vertical spacing between two M5 layer polygons'
@ edges, regardless of the edge lengths and mask colors, is 40 nm.
EXTERNAL M5_HE < VAR_BLOCK_MASK_W ABUT < 90
EXTERNAL M5 < 0.001 SINGULAR 
}
M5.S.3{
@ M5.S.3
@ Minimum tip-to-tip spacing between two M5 layer polygons——that do not
@ share a parallel run length——on adjacent tracks is 40 nm.
M5_LE_EXTE = M5_HE EXPAND EDGE INSIDE BY 0.0001 EXTEND BY (VAR_M5_1X + (VAR_M5_1X/4))
M5_LE_EXTENM = M5_LE_EXTE NOT M5
M5_LE_EXTENM CONVEX EDGE ANGLE1 < 180 ANGLE2 > 180
M5_LE_EXTETIEM = M5_LE_EXTENM TOUCH EDGE M5 ENDPOINT ONLY
EXTERNAL M5_LE_EXTETIEM M5_HE < VAR_BLOCK_MASK_W EXCLUDE SHIELDED 4 BY LAYER M5_HE OPPOSITE PARALLEL ONLY PROJ > 0
}
M5.S.4{
@ M5.S.4
@ Minimum tip-to-tip spacing between two M5 layer polygons——that 
@ share a parallel run length——on adjacent tracks is 40 nm.
M5_LE_EXTE = M5_HE EXPAND EDGE INSIDE BY 0.0001 EXTEND BY (VAR_M5_1X + (VAR_M5_1X/4))
M5_LE_EXTENM = M5_LE_EXTE NOT M5
M5_LE_EXTETIEM = M5_LE_EXTENM TOUCH EDGE M5 ENDPOINT ONLY
ENCLOSURE M5_HE M5_LE_EXTETIEM < VAR_BLOCK_MASK_W EXCLUDE SHIELDED 4 BY LAYER M5_HE OPPOSITE PARALLEL ONLY PROJ > 0
}
M5.S.5{
@ M5.S.5
@ Minimum parallel run length of two M5 layer polygons on adjacent
@ tracks is 44 nm.
M5_PRLR = EXTERNAL M5_VE == VAR_M5_1X EXCLUDE SHIELDED 4 REGION OPPOSITE PARALLEL ONLY PROJ > 0 
M5_PRLR_HE = M5_PRLR ANGLE == 0
INTERNAL M5_PRLR_HE < VAR_BLOCK_MASK_T2T EXCLUDE SHIELDED 4 OPPOSITE PARALLEL ONLY PROJ > 0 
}
M5.AUX.1{
@ M5.AUX.1
@ M5 vertical edges must be at a grid of 24 nm.
OFFGRID M5 VAR_M5_1X_DBU 1 OFFSET VAR_M5_XOFFSET 0 HINT
}
M5.AUX.2{
@ M5.AUX.2
@ Minimum width M5 tracks must lie along the vertical routing tracks. 
@ These tracks are located at a spacing equal to:
@ 2N x minimum metal width + offset from the origin, where N ϵ Z-+.
OFFGRID (M5_1X_CL NOT INSIDE EDGE M5_OFFGRIDR) (2*VAR_M5_1X_DBU) 1 OFFSET (-VAR_M5_1X_OFFSET_GRIDA_TOT) 0 HINT
}
M5.AUX.3{
@ M5.AUX.3
@ M5 may not bend.
CONVEX EDGE M5 ANGLE1 > 90 ANGLE2 > 0
}
M5.AUX.4{
@ M5.AUX.4
@ Outside edge of a wide M5 layer polygon may not touch a routing track
@ edge.
M5_WIDE TOUCH OUTSIDE EDGE M5_1X_STRIPES
}
M6.W.1{
@ M6.W.1
@ Minimum vertical width of M6 is 32 nm.
INTERNAL M6_HE < VAR_M6_1X
}
M6.W.2{
@ M6.W.2
@ Maximum vertical width of M6 is 640 nm.
INTERNAL M6_HE > 20*VAR_M6_1X < 10000*VAR_M6_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
}
M6.W.3{
@ M6.W.3
@ M6 vertical width may not be an even integer multiple of its minimum
@ width. 
INTERNAL M6_HE ==  2*VAR_M6_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M6_HE ==  4*VAR_M6_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M6_HE ==  6*VAR_M6_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M6_HE ==  8*VAR_M6_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M6_HE == 10*VAR_M6_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M6_HE == 12*VAR_M6_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M6_HE == 14*VAR_M6_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M6_HE == 16*VAR_M6_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M6_HE == 18*VAR_M6_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M6_HE == 20*VAR_M6_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
}
M6.W.4{
@ M6.W.4
@ M6 vertical width, resulting in the polygon spanning an even number of
@ minimum width routing tracks vertically, is not allowed.
INTERNAL M6_HE ==  3*VAR_M6_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M6_HE ==  7*VAR_M6_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M6_HE == 11*VAR_M6_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M6_HE == 15*VAR_M6_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M6_HE == 19*VAR_M6_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
}
M6.W.5{
@ M6.W.5
@ Minimum horizontal width of M6 is 44 nm.
INTERNAL M6_VE < VAR_BLOCK_MASK_T2T
}
M6.S.1{
@ M6.S.1
@ Minimum vertical spacing between two M6 layer polygons'
@ edges, regardless of the edge lengths and mask colors, is 32 nm.
EXTERNAL M6_HE < VAR_M6_1X ABUT < 90
EXTERNAL M6 < 0.001 SINGULAR 
}
M6.S.2{
@ M6.S.2
@ Minimum horizontal spacing between two M6 layer polygons'
@ edges, regardless of the edge lengths and mask colors, is 40 nm.
EXTERNAL M6_VE < VAR_BLOCK_MASK_W ABUT < 90
EXTERNAL M6 < 0.001 SINGULAR 
}
M6.S.3{
@ M6.S.3
@ Minimum tip-to-tip spacing between two M6 layer polygons——that do not
@ share a parallel run length——on adjacent tracks is 40 nm.
M6_LE_EXTE = M6_VE EXPAND EDGE INSIDE BY 0.0001 EXTEND BY (VAR_M6_1X + (VAR_M6_1X/4))
M6_LE_EXTENM = M6_LE_EXTE NOT M6
M6_LE_EXTENM CONVEX EDGE ANGLE1 < 180 ANGLE2 > 180
M6_LE_EXTETIEM = M6_LE_EXTENM TOUCH EDGE M6 ENDPOINT ONLY
EXTERNAL M6_LE_EXTETIEM M6_VE < VAR_BLOCK_MASK_W EXCLUDE SHIELDED 4 BY LAYER M6_VE OPPOSITE PARALLEL ONLY PROJ > 0
}
M6.S.4{
@ M6.S.4
@ Minimum tip-to-tip spacing between two M6 layer polygons——that
@ share a parallel run length——on adjacent tracks is 40 nm.
M6_LE_EXTE = M6_VE EXPAND EDGE INSIDE BY 0.0001 EXTEND BY (VAR_M6_1X + (VAR_M6_1X/4))
M6_LE_EXTENM = M6_LE_EXTE NOT M6
M6_LE_EXTETIEM = M6_LE_EXTENM TOUCH EDGE M6 ENDPOINT ONLY
ENCLOSURE M6_VE M6_LE_EXTETIEM < VAR_BLOCK_MASK_W EXCLUDE SHIELDED 4 BY LAYER M6_VE OPPOSITE PARALLEL ONLY PROJ > 0
}
M6.S.5{
@ M6.S.5
@ Minimum parallel run length of two M6 layer polygons on adjacent
@ tracks is 44 nm.
M6_PRLR = EXTERNAL M6_HE == VAR_M6_1X EXCLUDE SHIELDED 4 REGION OPPOSITE PARALLEL ONLY PROJ > 0 
M6_PRLR_VE = M6_PRLR ANGLE == 90
INTERNAL M6_PRLR_VE < VAR_BLOCK_MASK_T2T EXCLUDE SHIELDED 4 OPPOSITE PARALLEL ONLY PROJ > 0 
}
M6.AUX.1{
@ M6.AUX.1
@ M6 horizontal edges must be at a grid of 32 nm.
OFFGRID M6 1 VAR_M6_1X_DBU OFFSET 0 VAR_M6_YOFFSET HINT
}
M6.AUX.2{
@ M6.AUX.2
@ Minimum width M6 tracks must lie along the horizontal routing tracks. 
@ These tracks are located at a spacing equal to:
@ 2N x minimum metal width + offset from the origin, where N ϵ Z-+.
OFFGRID (M6_1X_CL NOT INSIDE EDGE M6_OFFGRIDR) 1 (2*VAR_M6_1X_DBU) OFFSET 0 (-VAR_M6_1X_OFFSET_GRIDA_TOT) HINT
}
M6.AUX.3{
@ M6.AUX.3
@ M6 may not bend.
CONVEX EDGE M6 ANGLE1 > 90 ANGLE2 > 0
}
M6.AUX.4{
@ M6.AUX.4
@ Outside edge of a wide M6 layer polygon may not touch a routing track
@ edge.
M6_WIDE TOUCH OUTSIDE EDGE M6_1X_STRIPES
}
M7.W.1{
@ M7.W.1
@ Minimum horizontal width of M7 is 32 nm.
INTERNAL M7_VE < VAR_M7_1X
}
M7.W.2{
@ M7.W.2
@ Maximum horizontal width of M7 is 640 nm.
INTERNAL M7_VE > 20*VAR_M7_1X < 10000*VAR_M7_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
}
M7.W.3{
@ M7.W.3
@ M7 horizontal width may not be an even integer multiple of its minimum
@ width. 
INTERNAL M7_VE ==  2*VAR_M7_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M7_VE ==  4*VAR_M7_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M7_VE ==  6*VAR_M7_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M7_VE ==  8*VAR_M7_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M7_VE == 10*VAR_M7_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M7_VE == 12*VAR_M7_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M7_VE == 14*VAR_M7_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M7_VE == 16*VAR_M7_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M7_VE == 18*VAR_M7_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M7_VE == 20*VAR_M7_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
}
M7.W.4{
@ M7.W.4
@ M7 horizontal width, resulting in the polygon spanning an even number of
@ minimum width routing tracks horizontally, is not allowed.
INTERNAL M7_VE ==  3*VAR_M7_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M7_VE ==  7*VAR_M7_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M7_VE == 11*VAR_M7_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M7_VE == 15*VAR_M7_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
INTERNAL M7_VE == 19*VAR_M7_1X REGION OPPOSITE PARALLEL ONLY PROJ > 0
}
M7.W.5{
@ M7.W.5
@ Minimum vertical width of M7 is 44 nm.
INTERNAL M7_HE < VAR_BLOCK_MASK_T2T
}
M7.S.1{
@ M7.S.1
@ Minimum horizontal spacing between two M7 layer polygons'
@ edges, regardless of the edge lengths and mask colors, is 32 nm.
EXTERNAL M7_VE < VAR_M7_1X ABUT < 90
EXTERNAL M7 < 0.001 SINGULAR 
}
M7.S.2{
@ M7.S.2
@ Minimum vertical spacing between two M7 layer polygons'
@ edges, regardless of the edge lengths and mask colors, is 40 nm.
EXTERNAL M7_HE < VAR_BLOCK_MASK_W ABUT < 90
EXTERNAL M7 < 0.001 SINGULAR 
}
M7.S.3{
@ M7.S.3
@ Minimum tip-to-tip spacing between two M7 layer polygons——that do not
@ share a parallel run length——on adjacent tracks is 40 nm.
M7_LE_EXTE = M7_HE EXPAND EDGE INSIDE BY 0.0001 EXTEND BY (VAR_M7_1X + (VAR_M7_1X/4))
M7_LE_EXTENM = M7_LE_EXTE NOT M7
M7_LE_EXTENM CONVEX EDGE ANGLE1 < 180 ANGLE2 > 180
M7_LE_EXTETIEM = M7_LE_EXTENM TOUCH EDGE M7 ENDPOINT ONLY
EXTERNAL M7_LE_EXTETIEM M7_HE < VAR_BLOCK_MASK_W EXCLUDE SHIELDED 4 BY LAYER M7_HE OPPOSITE PARALLEL ONLY PROJ > 0
}
M7.S.4{
@ M7.S.4
@ Minimum tip-to-tip spacing between two M7 layer polygons——that
@ share a parallel run length——on adjacent tracks is 40 nm.
M7_LE_EXTE = M7_HE EXPAND EDGE INSIDE BY 0.0001 EXTEND BY (VAR_M7_1X + (VAR_M7_1X/4))
M7_LE_EXTENM = M7_LE_EXTE NOT M7
M7_LE_EXTETIEM = M7_LE_EXTENM TOUCH EDGE M7 ENDPOINT ONLY
ENCLOSURE M7_HE M7_LE_EXTETIEM < VAR_BLOCK_MASK_W EXCLUDE SHIELDED 4 BY LAYER M7_HE OPPOSITE PARALLEL ONLY PROJ > 0
}
M7.S.5{
@ M7.S.5
@ Minimum parallel run length of two M7 layer polygons on adjacent
@ tracks is 44 nm.
M7_PRLR = EXTERNAL M7_VE == VAR_M7_1X EXCLUDE SHIELDED 4 REGION OPPOSITE PARALLEL ONLY PROJ > 0 
M7_PRLR_HE = M7_PRLR ANGLE == 0
INTERNAL M7_PRLR_HE < VAR_BLOCK_MASK_T2T EXCLUDE SHIELDED 4 OPPOSITE PARALLEL ONLY PROJ > 0 
}
M7.AUX.1{
@ M7.AUX.1
@ M7 vertical edges must be at a grid of 32 nm.
OFFGRID M7 VAR_M7_1X_DBU 1 OFFSET VAR_M7_XOFFSET 0 HINT
}
M7.AUX.2{
@ M7.AUX.2
@ Minimum width M7 tracks must lie along the vertical routing tracks. 
@ These tracks are located at a spacing equal to:
@ 2N x minimum metal width + offset from the origin, where N ϵ Z-+.
OFFGRID (M7_1X_CL NOT INSIDE EDGE M7_OFFGRIDR) (2*VAR_M7_1X_DBU) 1 OFFSET (-VAR_M7_1X_OFFSET_GRIDA_TOT) 0 HINT
}
M7.AUX.3{
@ M7.AUX.3
@ M7 may not bend.
CONVEX EDGE M7 ANGLE1 > 90 ANGLE2 > 0
}
M7.AUX.4{
@ M7.AUX.4
@ Outside edge of a wide M7 layer polygon may not touch a routing track
@ edge.
M7_WIDE TOUCH OUTSIDE EDGE M7_1X_STRIPES
}
V4.W.1{
@ V4.W.1
@ Minimum width of a V4 instance along the length of M5 is 24 nm.
INTERNAL V4 < 0.024 OPPOSITE
COPY V4SAVNEC_NARROW_ED
COPY V4SAVWEC_NARROW_ED
}
V4.S.1{
@ V4.S.1
@ Minimum spacing between V4 instances on the same net is 33 nm.
EXTERNAL V4 < 0.033 CONNECTED SINGULAR PROJECTING NOT CORNER
}
V4.S.2{
@ V4.S.2
@ Minimum spacing between V4 instances on different nets is 33 nm.
EXTERNAL V4 < 0.033 NOT CONNECTED SINGULAR PROJECTING NOT CORNER
}
V4.S.3{
@ V4.S.3
@ Minimum corner-to-corner spacing between two V4 instances is 33 nm.
EXTERNAL V4 < 0.033 SINGULAR CORNER TO CORNER
}
V4.M4.EN.1{
@ V4.M4.EN.1
@ Minimum enclosure of V4 by M4 on at least two opposite sides is 11 nm. 		
RECTANGLE ENCLOSURE V4 M4 ABUT > 0 < 90 SINGULAR ORTHOGONAL ONLY
GOOD 0.011 0 0.011 0
GOOD 0 0.011 0 0.011
}
V4.M5.EN.2{
@ V4.M5.EN.2
@ Minimum enclosure of V4 by M5 on two opposite sides is 11 nm. 		
RECTANGLE ENCLOSURE V4 M5 ABUT > 0 < 90 SINGULAR ORTHOGONAL ONLY
GOOD 0.011 0 0.011 0
GOOD 0 0.011 0 0.011
}
V4.AUX.1{
@ V4.AUX.1
@ V4 must be inside M4 and M5.
V4 NOT INSIDE (M4 AND M5)
}
V4.M5.AUX.2 {
 @ V4.M5.AUX.2
 @ V4 must exactly be the same width as M5 along the direction perpendicular
 @ to the M5 length.
 V4 WITH EDGE V4NCIEM5B
}
V5.W.1{
@ V5.W.1
@ Minimum width of a V5 instance along the length of M6 is 24 nm.
INTERNAL V5 < 0.024 OPPOSITE
COPY V5SAVNEC_NARROW_ED
COPY V5SAVWEC_NARROW_ED
}
V5.S.1{
@ V5.S.1
@ Minimum spacing between V5 instances on the same net is 33 nm.
EXTERNAL V5 < 0.033 CONNECTED SINGULAR PROJECTING NOT CORNER
}
V5.S.2{
@ V5.S.2
@ Minimum spacing between V5 instances on different nets is 33 nm.
EXTERNAL V5 < 0.033 NOT CONNECTED SINGULAR PROJECTING NOT CORNER
}
V5.S.3{
@ V5.S.3
@ Minimum corner-to-corner spacing between two V5 instances is 33 nm.
EXTERNAL V5 < 0.033 SINGULAR CORNER TO CORNER
}
V5.M5.EN.1{
@ V5.M5.EN.1
@ Minimum enclosure of V5 by M5 on at least two opposite sides is 11 nm. 		
RECTANGLE ENCLOSURE V5 M5 ABUT > 0 < 90 SINGULAR ORTHOGONAL ONLY
GOOD 0.011 0 0.011 0
GOOD 0 0.011 0 0.011
}
V5.M6.EN.2{
@ V5.M6.EN.2
@ Minimum enclosure of V5 by M6 on two opposite sides is 11 nm. 		
RECTANGLE ENCLOSURE V5 M6 ABUT > 0 < 90 SINGULAR ORTHOGONAL ONLY
GOOD 0.011 0 0.011 0
GOOD 0 0.011 0 0.011
}
V5.AUX.1{
@ V5.AUX.1
@ V5 must be inside M5 and M6.
V5 NOT INSIDE (M5 AND M6)
}
V5.M6.AUX.2 {
 @ V5.M6.AUX.2
 @ V5 must exactly be the same width as M6 along the direction perpendicular
 @ to the M6 length.
 V5 WITH EDGE V5NCIEM6B
}
V6.W.1{
@ V6.W.1
@ Minimum width of a V6 instance along the length of M7 is 32 nm.
INTERNAL V6 < 0.032 OPPOSITE
COPY V6SAVNEC_NARROW_ED
COPY V6SAVWEC_NARROW_ED
}
V6.S.1{
@ V6.S.1
@ Minimum spacing between V6 instances on the same net is 45 nm.
EXTERNAL V6 < 0.045 CONNECTED SINGULAR PROJECTING NOT CORNER
}
V6.S.2{
@ V6.S.2
@ Minimum spacing between V6 instances on different nets is 45 nm.
EXTERNAL V6 < 0.045 NOT CONNECTED SINGULAR PROJECTING NOT CORNER
}
V6.S.3{
@ V6.S.3
@ Minimum corner-to-corner spacing between two V6 instances is 45 nm.
EXTERNAL V6 < 0.045 SINGULAR CORNER TO CORNER
}
V6.M6.EN.1{
@ V6.M6.EN.1
@ Minimum enclosure of V6 by M6 on at least two opposite sides is 11 nm. 		
RECTANGLE ENCLOSURE V6 M6 ABUT > 0 < 90 SINGULAR ORTHOGONAL ONLY
GOOD 0.011 0 0.011 0
GOOD 0 0.011 0 0.011
}
V6.M7.EN.2{
@ V6.M7.EN.2
@ Minimum enclosure of V6 by M7 on two opposite sides is 11 nm. 		
RECTANGLE ENCLOSURE V6 M7 ABUT > 0 < 90 SINGULAR ORTHOGONAL ONLY
GOOD 0.011 0 0.011 0
GOOD 0 0.011 0 0.011
}
V6.AUX.1{
@ V6.AUX.1
@ V6 must be inside M6 and M7.
V6 NOT INSIDE (M6 AND M7)
}
V6.M7.AUX.2 {
 @ V6.M7.AUX.2
 @ V6 must exactly be the same width as M7 along the direction perpendicular
 @ to the M7 length.
 V6 WITH EDGE V6NCIEM7B
}
V7.W.1{
@ V7.W.1
@ Minimum width of a V7 instance along the length of M8 is 32 nm.
INTERNAL V7 < 0.032 OPPOSITE
COPY V7SAVNEC_NARROW_ED
COPY V7SAVWEC_NARROW_ED
}
V7.S.1{
@ V7.S.1
@ Minimum spacing between V7 instances on the same net is 45 nm.
EXTERNAL V7 < 0.045 CONNECTED SINGULAR PROJECTING NOT CORNER
}
V7.S.2{
@ V7.S.2
@ Minimum spacing between V7 instances on different nets is 45 nm.
EXTERNAL V7 < 0.045 NOT CONNECTED SINGULAR PROJECTING NOT CORNER
}
V7.S.3{
@ V7.S.3
@ Minimum corner-to-corner spacing between two V7 instances is 45 nm.
EXTERNAL V7 < 0.045 SINGULAR CORNER TO CORNER
}
V7.M7.EN.1{
@ V7.M7.EN.1
@ Minimum enclosure of V7 by M7 on at least two opposite sides is 11 nm. 		
RECTANGLE ENCLOSURE V7 M7 ABUT > 0 < 90 SINGULAR ORTHOGONAL ONLY
GOOD 0.011 0 0.011 0
GOOD 0 0.011 0 0.011
}
V7.M8.EN.2{
@ V7.M8.EN.2
@ Minimum enclosure of V7 by M8 on two opposite sides is 11 nm. 		
RECTANGLE ENCLOSURE V7 M8 ABUT > 0 < 90 SINGULAR ORTHOGONAL ONLY
GOOD 0.011 0 0.011 0
GOOD 0 0.011 0 0.011
}
V7.AUX.1{
@ V7.AUX.1
@ V7 must be inside M7 and M8.
V7 NOT INSIDE (M7 AND M8)
}
V7.M8.AUX.2 {
 @ V7.M8.AUX.2
 @ V7 must exactly be the same width as M8 along the direction perpendicular
 @ to the M8 length.
 V7 WITH EDGE V7NCIEM8B
}
M8.W.1{
@ M8.W.1
@ Minimum width of M8 is 40 nm.
INTERNAL M8 < 0.040 
}
M8.W.2{
@ M8.W.2
@ Minimum width of M8, when its length >= 400 nm and < 1200 nm, is 60 nm.
X = LENGTH M8 > 0.4 < 1.2
Y = M8 WITH EDGE X 
INTERNAL Y < 0.060
}
M8.W.3{
@ M8.W.3
@ Minimum width of M8, when its length >= 1200 nm and < 1800 nm, is 80 nm.
X = LENGTH M8 >=1.2 < 1.8
Y = M8 WITH EDGE X
INTERNAL Y < 0.080
}
M8.W.4{
@ M8.W.4
@ Minimum width of M8, when its length >= 1800 nm, is 120 nm.
X = LENGTH M8 >=1.8
Y = M8 WITH EDGE X
INTERNAL Y < 0.12
}
M8.W.5{
@ M8.W.5
@ Maximum width of M8 is 2000 nm.
INTERNAL M8 > 2.000 < 10.0 
}
M8.S.1{
@ M8.S.1
@ Minimum (side-to-side) spacing between two M8 layer polygons' edges, when both
@ edges are >= 80 nm, is 40 nm. 
EXTERNAL M8_SIDE < 0.040 ABUT < 90
}
M8.S.2{
@ M8.S.2
@ Minimum (tip-to-side) spacing between two M8 layer polygons' edges, when
@ one of the edges is < 80 nm and the other is >= 80 nm, is 43 nm. 
EXTERNAL M8_TIP M8_SIDE < 0.043 ABUT < 90
}
M8.S.3{
@ M8.S.3
@ Minimum (tip-to-tip) spacing between two M8 layer polygons' edges, when
@ both edges are < 80 nm, is 46 nm.
EXTERNAL M8_TIP < 0.046 ABUT < 90
}
M8.S.4{
@ M8.S.4
@ Minimum spacing between two M8 layer polygons' edges, when one of the
@ edges is >= 60 nm and < 80 nm, is 60 nm.
X= M8 WITH WIDTH >=0.06 < 0.08
EXTERNAL X M8 < 0.06 ABUT < 90
}
M8.S.5{
@ M8.S.5
@ Minimum spacing between two M8 layer polygons' edges, when one of the
@ edges is >= 80 nm and < 120 nm, is 80 nm.
X= M8 WITH WIDTH >=0.08 < 0.12
EXTERNAL X M8 < 0.080 ABUT < 90
}
M8.S.6{
@ M8.S.6
@ Minimum spacing between two M8 layer polygons' edges, when one of the
@ edges is >= 120 nm and < 500 nm, is 120 nm.
X= M8 WITH WIDTH >= 0.12 < 0.5
EXTERNAL X M8 < 0.12 ABUT < 90
}
M8.S.7{
@ M8.S.7
@ Minimum spacing between two M8 layer polygons' edges, when one of the
@ edges is >= 500 nm and < 1000 nm, is 500 nm.
X= M8 WITH WIDTH >= 0.5 < 1
EXTERNAL X M8 < 0.5 ABUT < 90
}
M8.S.8{
@ M8.S.8
@ Minimum spacing between two M8 layer polygons' edges, when one of the
@ edges is >= 1000 nm, is 1000 nm.
X= M8 WITH WIDTH >=1 
EXTERNAL X M8 < 1 ABUT < 90
}
M8.A.1{
@ M8.A.1
@ Minimum area of M8 is 7520 nm-sq.
AREA M8 < 0.007520
}
M8.L.1 {
@ M8.L.1
@ Minimum feature length of M8 is 40 nm.
CONVEX EDGE M8 ANGLE1 == 90 ANGLE2 > 90 WITH LENGTH < 0.040
}
M9.W.1{
@ M9.W.1
@ Minimum width of M9 is 40 nm.
INTERNAL M9 < 0.040 
}
M9.W.2{
@ M9.W.2
@ Minimum width of M9, when its length >= 400 nm and < 1200 nm, is 60 nm.
X = LENGTH M9 > 0.4 < 1.2
Y = M9 WITH EDGE X 
INTERNAL Y < 0.060
}
M9.W.3{
@ M9.W.3
@ Minimum width of M9, when its length >= 1200 nm and < 1800 nm, is 80 nm.
X = LENGTH M9 >=1.2 < 1.8
Y = M9 WITH EDGE X
INTERNAL Y < 0.080
}
M9.W.4{
@ M9.W.4
@ Minimum width of M9, when its length >= 1800 nm, is 120 nm.
X = LENGTH M9 >=1.8
Y = M9 WITH EDGE X
INTERNAL Y < 0.12
}
M9.W.5{
@ M9.W.5
@ Maximum width of M9 is 2000 nm.
INTERNAL M9 > 2.000 < 10.0 
}
M9.S.1{
@ M9.S.1
@ Minimum (side-to-side) spacing between two M9 layer polygons' edges, when both
@ edges are >= 80 nm, is 40 nm. 
EXTERNAL M9_SIDE < 0.040 ABUT < 90
}
M9.S.2{
@ M9.S.2
@ Minimum (tip-to-side) spacing between two M9 layer polygons' edges, when
@ one of the edges is < 80 nm and the other is >= 80 nm, is 43 nm. 
EXTERNAL M9_TIP M9_SIDE < 0.043 ABUT < 90
}
M9.S.3{
@ M9.S.3
@ Minimum (tip-to-tip) spacing between two M9 layer polygons' edges, when
@ both edges are < 80 nm, is 46 nm.
EXTERNAL M9_TIP < 0.046 ABUT < 90
}
M9.S.4{
@ M9.S.4
@ Minimum spacing between two M9 layer polygons' edges, when one of the
@ edges is >= 60 nm and < 80 nm, is 60 nm.
X= M9 WITH WIDTH >=0.06 < 0.08
EXTERNAL X M9 < 0.06 ABUT < 90
}
M9.S.5{
@ M9.S.5
@ Minimum spacing between two M9 layer polygons' edges, when one of the
@ edges is >= 80 nm and < 120 nm, is 80 nm.
X= M9 WITH WIDTH >=0.08 < 0.12
EXTERNAL X M9 < 0.080 ABUT < 90
}
M9.S.6{
@ M9.S.6
@ Minimum spacing between two M9 layer polygons' edges, when one of the
@ edges is >= 120 nm and < 500 nm, is 120 nm.
X= M9 WITH WIDTH >= 0.12 < 0.5
EXTERNAL X M9 < 0.12 ABUT < 90
}
M9.S.7{
@ M9.S.7
@ Minimum spacing between two M9 layer polygons' edges, when one of the
@ edges is >= 500 nm and < 1000 nm, is 500 nm.
X= M9 WITH WIDTH >= 0.5 < 1
EXTERNAL X M9 < 0.5 ABUT < 90
}
M9.S.8{
@ M9.S.8
@ Minimum spacing between two M9 layer polygons' edges, when one of the
@ edges is >= 1000 nm, is 1000 nm.
X= M9 WITH WIDTH >=1 
EXTERNAL X M9 < 1 ABUT < 90
}
M9.A.1{
@ M9.A.1
@ Minimum area of M9 is 7520 nm-sq.
AREA M9 < 0.007520
}
M9.L.1 {
@ M9.L.1
@ Minimum feature length of M9 is 40 nm.
CONVEX EDGE M9 ANGLE1 == 90 ANGLE2 > 90 WITH LENGTH < 0.040
}
V8.W.1{
@ V8.W.1
@ Exact width of a V8 instance is [40 nm x 40 nm | 40 nm x 120 nm |
@ 120 nm x 40 nm].
x= NOT RECTANGLE V8 == 0.04 BY ==0.04
y= NOT RECTANGLE V8 == 0.12 BY ==0.04
z= NOT RECTANGLE V8 == 0.04 BY ==0.12
x AND (y AND z)
}
V8.S.1{
@ V8.S.1
@ Minimum spacing between two V8 instances is 57 nm.
EXTERNAL V8 < 0.057 ABUT < 90 
}
V8.S.2{
@ V8.S.2
@ Minimum corner-to-corner spacing between V8 instances is 57 nm.
EXTERNAL V8 < 0.057 CORNER TO CORNER ABUT < 90
}
V8.M8.EN.1{
@ V8.M8.EN.1
@ Minimum enclosure of V8 by M8 on at least two opposite sides is 20 nm.
RECTANGLE ENCLOSURE V8 M8 ABUT > 0 < 90 SINGULAR ORTHOGONAL ONLY
GOOD 0.02 0 0.02 0
GOOD 0 0.02 0 0.02
}
V8.M9.EN.2{
@ V8.M9.EN.2
@ Minimum enclosure of V8 by M9 on at least two opposite sides is 20 nm.
RECTANGLE ENCLOSURE V8 M9 ABUT > 0 < 90 SINGULAR ORTHOGONAL ONLY
GOOD 0.02 0 0.02 0
GOOD 0 0.02 0 0.02
}
V8.AUX.1{
@ V8.AUX.1
@ V8 must be inside M8 and M9.
X= M8 AND M9
V8 NOT INSIDE X
}
V9.W.1{
@ V9.W.1
@ Exact width of a V9 instance is [40 nm x 40 nm | 40 nm x 120 nm |
@ 120 nm x 40 nm].
x= NOT RECTANGLE V9 == 0.04 BY ==0.04
y= NOT RECTANGLE V9 == 0.12 BY ==0.04
z= NOT RECTANGLE V9 == 0.04 BY ==0.12
x AND (y AND z)
}
V9.S.1{
@ V9.S.1
@ Minimum spacing between two V9 instances is 57 nm.
EXTERNAL V9 < 0.057 ABUT < 90 
}
V9.S.2{
@ V9.S.2
@ Minimum corner-to-corner spacing between V9 instances is 57 nm.
EXTERNAL V9 < 0.057 CORNER TO CORNER ABUT < 90
}
V9.M9.EN.1{
@ V9.M9.EN.1
@ Minimum enclosure of V9 by M9 on at least two opposite sides is 20 nm.
RECTANGLE ENCLOSURE V9 M9 ABUT > 0 < 90 SINGULAR ORTHOGONAL ONLY
GOOD 0.02 0 0.02 0
GOOD 0 0.02 0 0.02
}
V9.PAD.EN.2{
@ V9.PAD.EN.2
@ Minimum enclosure of V9 by PAD on at least two opposite sides is 20 nm.
RECTANGLE ENCLOSURE V9 PAD ABUT > 0 < 90 SINGULAR ORTHOGONAL ONLY
GOOD 0.02 0 0.02 0
GOOD 0 0.02 0 0.02
}
V9.AUX.1{
@ V9.AUX.1
@ V9 must be inside M9 and PAD.
X= M9 AND PAD
V9 NOT INSIDE X
}
