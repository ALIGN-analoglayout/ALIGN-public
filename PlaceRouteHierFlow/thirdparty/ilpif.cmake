FetchContent_Declare(
  ilpsolverif
  GIT_REPOSITORY https://github.com/ALIGN-analoglayout/ILPSolverInterface.git
)
include(ProcessorCount)
ProcessorCount(N)
if (N GREATER 8)
  set (N 8)
endif ()
FetchContent_GetProperties(ilpsolverif)
if(NOT ilpsolverif_POPULATED)
  FetchContent_Populate(ilpsolverif)
  set (solver_search_path ${ilpsolverif_SOURCE_DIR}/lib)
  if (DEFINED ENV{BUILD_PLATFORM})
    set (solver_search_path ${ilpsolverif_SOURCE_DIR}/$ENV{BUILD_PLATFORM}/lib)
  elseif(DEFINED ENV{ALIGN_ILP_PATH})
    set (solver_search_path $ENV{ALIGN_ILP_PATH}/lib)
  endif()
  find_library(
    ilp_solver_lib
    NAMES libILPSolverIf.a
    PATHS ${solver_search_path})
  if (NOT ilp_solver_lib)
    message(STATUS "Building ILP solver interface from source.")
    add_subdirectory(${ilpsolverif_SOURCE_DIR} ${ilpsolverif_BINARY_DIR})
    target_include_directories(ILPSolverIf INTERFACE ${ilpsolverif_SOURCE_DIR}/ILPSolverIf)
    target_include_directories(ILPSolverIf INTERFACE ${ilpsolverif_LIBRARY_DIR})
    add_library(ilp_solver::ilp_solver ALIAS ILPSolverIf)
  else()
    message(STATUS "ILP solver lib found in ${ilp_solver_lib}")
    add_library(ilp_solver_if SHARED IMPORTED)
    add_library(cbc_if SHARED IMPORTED)
    add_library(clp_if SHARED IMPORTED)
    add_library(cgl_if SHARED IMPORTED)
    add_library(osi_if SHARED IMPORTED)
    add_library(osiclp_if SHARED IMPORTED)
    add_library(osicbc_if SHARED IMPORTED)
    add_library(coinutils_if SHARED IMPORTED)
    add_library(clpsolver_if SHARED IMPORTED)
    add_library(cbcsolver_if SHARED IMPORTED)
    add_library(sym_if SHARED IMPORTED)
    add_library(osisym_if SHARED IMPORTED)
    set_property(TARGET ilp_solver_if PROPERTY IMPORTED_LOCATION ${ilp_solver_lib})
    target_include_directories(ilp_solver_if INTERFACE ${ilpsolverif_SOURCE_DIR}/ILPSolverIf)
    target_include_directories(ilp_solver_if INTERFACE ${solver_search_path})
    find_library(cbc_lib NAMES libCbc.a PATHS ${solver_search_path})
    set_property(TARGET cbc_if PROPERTY IMPORTED_LOCATION ${cbc_lib})
    find_library(cbcsolver_lib NAMES libCbcSolver.a PATHS ${solver_search_path})
    set_property(TARGET cbcsolver_if PROPERTY IMPORTED_LOCATION ${cbcsolver_lib})
    find_library(clp_lib NAMES libClp.a PATHS ${solver_search_path})
    set_property(TARGET clp_if PROPERTY IMPORTED_LOCATION ${clp_lib})
    find_library(cgl_lib NAMES libCgl.a PATHS ${solver_search_path})
    set_property(TARGET cgl_if PROPERTY IMPORTED_LOCATION ${cgl_lib})
    find_library(osi_lib NAMES libOsi.a PATHS ${solver_search_path})
    set_property(TARGET osi_if PROPERTY IMPORTED_LOCATION ${osi_lib})
    find_library(osiclp_lib NAMES libOsiClp.a PATHS ${solver_search_path})
    set_property(TARGET osiclp_if PROPERTY IMPORTED_LOCATION ${osiclp_lib})
    find_library(coinutils_lib NAMES libCoinUtils.a PATHS ${solver_search_path})
    set_property(TARGET coinutils_if PROPERTY IMPORTED_LOCATION ${coinutils_lib})
    find_library(clpsolver_lib NAMES libClpSolver.a PATHS ${solver_search_path})
    set_property(TARGET clpsolver_if PROPERTY IMPORTED_LOCATION ${clpsolver_lib})
    find_library(osicbc_lib NAMES libOsiCbc.a PATHS ${solver_search_path})
    set_property(TARGET osicbc_if PROPERTY IMPORTED_LOCATION ${osicbc_lib})
    find_library(sym_lib NAMES libSym.a PATHS ${solver_search_path})
    set_property(TARGET sym_if PROPERTY IMPORTED_LOCATION ${sym_lib})
    find_library(osisym_lib NAMES libOsiSym.a PATHS ${solver_search_path})
    set_property(TARGET osisym_if PROPERTY IMPORTED_LOCATION ${osisym_lib})

    add_library(ilp_solver INTERFACE)
    target_link_libraries(ilp_solver INTERFACE ilp_solver_if sym_if osicbc_if cbcsolver_if cbc_if cgl_if osisym_if osiclp_if clpsolver_if clp_if osi_if coinutils_if)
    add_library(ilp_solver::ilp_solver ALIAS ilp_solver)
  endif()
endif()
