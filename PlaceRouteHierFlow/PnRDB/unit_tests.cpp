
#include <gtest/gtest.h>
#include "datatype.h"
#include "PnRdatabase.h"

#include <sstream>
#include <algorithm>

TEST(PnRTest, True) {
    EXPECT_TRUE( 1);
};

TEST(PnRTest, PnRdatabase_Constructor) {
  PnRdatabase foo;
  EXPECT_EQ( foo.get_unitScale(), 2000);
  EXPECT_EQ( foo.get_maxNode(), 0);
}

TEST(PnRTest, get_number) {
  PnRdatabase foo;
  EXPECT_EQ( foo.get_number( "23"), 23);
  EXPECT_EQ( foo.get_number( "457"), 457);
  EXPECT_EQ( foo.get_number( "10000000000000"), 10000000000000ULL);
}

TEST(PnRTest, ReadVerilog) {
  PnRdatabase db;

  PnRDB::metal_info mi;
  db.DRC_info.Metal_info.push_back( mi);
  db.DRC_info.Metal_info.back().direct = 1;
  db.DRC_info.Metal_info.back().grid_unit_y = 100;
  db.DRC_info.Metal_info.back().grid_unit_x = 100;
  db.DRC_info.Metal_info.push_back( mi);
  db.DRC_info.Metal_info.back().direct = 0;
  db.DRC_info.Metal_info.back().grid_unit_y = 100;
  db.DRC_info.Metal_info.back().grid_unit_x = 100;

  string str =
"//Verilog block level netlist file for telescopic_ota\n"
"//Generated by UMN for ALIGN project\n" 
"\n"
"\n"
"module telescopic_ota ( voutn, vss, vinp, vbiasp1, vbiasnd, vbiasn, voutp, vbiasp2, vinn, d1, vdd ); \n"
"input voutn, vss, vinp, vbiasp1, vbiasnd, vbiasn, voutp, vbiasp2, vinn, d1, vdd; \n"
"\n"
"CMC_PMOS_S_n12_X1_Y1 m2_m1 ( .DA(net012), .G(vbiasp1), .DB(net06), .S(vdd) ); \n"
"DP_NMOS_n12_X3_Y3 m3_m0 ( .DA(net014), .GA(vinn), .S(net10), .DB(net8), .GB(vinp) ); \n"
"CMFB_NMOS_n12_X3_Y1 m5_m4 ( .DA(d1), .S(vss), .DB(net10), .GB(vbiasnd) ); \n"
"CMC_PMOS_n12_X2_Y1 m6_m7 ( .DA(voutn), .G(vbiasp2), .DB(voutp), .SA(net06), .SB(net012) ); \n"
"CMC_NMOS_n12_X3_Y1 m9_m8 ( .DA(voutn), .G(vbiasn), .DB(voutp), .SA(net8), .SB(net014) ); \n"
"\n"
"endmodule\n";

  ReadVerilogHelper rvh(db);
  std::istringstream is(str);

  rvh( is, ".", "telescopic_ota");

  EXPECT_EQ( db.hierTree.size(), 1);

  const auto& ht = db.hierTree[0];

  EXPECT_EQ( ht.name, "telescopic_ota");

  EXPECT_EQ( ht.parent.size(), 0);
  EXPECT_EQ( ht.Blocks.size(), 5);

  EXPECT_EQ( ht.Nets.size(), 16);
  EXPECT_EQ( ht.Terminals.size(), 11);

  EXPECT_FALSE( ht.isCompleted);
  EXPECT_TRUE( ht.isTop);

  EXPECT_EQ( ht.width, 0);
  EXPECT_EQ( ht.height, 0);
}

TEST(PnRTest, ReadVerilog2) {
  PnRdatabase db;

  PnRDB::metal_info mi;
  db.DRC_info.Metal_info.push_back( mi);
  db.DRC_info.Metal_info.back().direct = 1;
  db.DRC_info.Metal_info.back().grid_unit_y = 100;
  db.DRC_info.Metal_info.back().grid_unit_x = 100;
  db.DRC_info.Metal_info.push_back( mi);
  db.DRC_info.Metal_info.back().direct = 0;
  db.DRC_info.Metal_info.back().grid_unit_y = 100;
  db.DRC_info.Metal_info.back().grid_unit_x = 100;

  // Missing space causes .S(vdd) to be dropped

  string str =
R"foo(//Verilog block level netlist file for telescopic_ota
//Generated by UMN for ALIGN project

module telescopic_ota ( voutn, vss, vinp, vbiasp1, vbiasnd, vbiasn, voutp, vbiasp2, vinn, d1, vdd ); 
input voutn, vss, vinp, vbiasp1, vbiasnd, vbiasn, voutp, vbiasp2, vinn, d1, vdd; 

CMC_PMOS_S_n12_X1_Y1 m2_m1 ( .DA(net012), .G(vbiasp1), .DB(net06),.S(vdd) ); 
DP_NMOS_n12_X3_Y3 m3_m0 ( .DA(net014), .GA(vinn), .S(net10), .DB(net8), .GB(vinp) ); 
CMFB_NMOS_n12_X3_Y1 m5_m4 ( .DA(d1), .S(vss), .DB(net10), .GB(vbiasnd) ); 
CMC_PMOS_n12_X2_Y1 m6_m7 ( .DA(voutn), .G(vbiasp2), .DB(voutp), .SA(net06), .SB(net012) ); 
CMC_NMOS_n12_X3_Y1 m9_m8 ( .DA(voutn), .G(vbiasn), .DB(voutp), .SA(net8), .SB(net014) ); 

endmodule
)foo";

 ReadVerilogHelper rvh(db);
  std::istringstream is(str);

  rvh( is, ".", "telescopic_ota");

  EXPECT_EQ( db.hierTree.size(), 1);

  const auto& ht = db.hierTree[0];

  EXPECT_EQ( ht.name, "telescopic_ota");

  EXPECT_EQ( ht.parent.size(), 0);
  EXPECT_EQ( ht.Blocks.size(), 5);

  EXPECT_EQ( ht.Nets.size(), 15); // One dropped
  EXPECT_EQ( ht.Terminals.size(), 11);

  cout << "Nets:";
  for( auto p = ht.Nets.begin(); p != ht.Nets.end(); ++p) {
    cout << " " << p->name;
  }
  cout << endl;

  EXPECT_FALSE( ht.isCompleted);
  EXPECT_TRUE( ht.isTop);

  EXPECT_EQ( ht.width, 0);
  EXPECT_EQ( ht.height, 0);
}

TEST( Lexer, Silly)
{
  string str =
R"foo(//Verilog block level netlist file for telescopic_ota
//Generated by UMN for ALIGN project

module telescopic_ota ( voutn, vss, vinp, vbiasp1, vbiasnd, vbiasn, voutp, vbiasp2, vinn, d1, vdd ); 
input voutn, vss, vinp, vbiasp1, vbiasnd, vbiasn, voutp, vbiasp2, vinn, d1, vdd; 

CMC_PMOS_S_n12_X1_Y1 m2_m1 ( .DA(net012), .G(vbiasp1), .DB(net06),.S(vdd) ); 
DP_NMOS_n12_X3_Y3 m3_m0 ( .DA(net014), .GA(vinn), .S(net10), .DB(net8), .GB(vinp) ); 
CMFB_NMOS_n12_X3_Y1 m5_m4 ( .DA(d1), .S(vss), .DB(net10), .GB(vbiasnd) ); 
CMC_PMOS_n12_X2_Y1 m6_m7 ( .DA(voutn), .G(vbiasp2), .DB(voutp), .SA(net06), .SB(net012) ); 
CMC_NMOS_n12_X3_Y1 m9_m8 ( .DA(voutn), .G(vbiasn), .DB(voutp), .SA(net8), .SB(net014) ); 

endmodule
)foo";

  std::istringstream is(str);
  

  Lexer l(is);

  while ( l.current_token.tt != TokenType::EndOfFile) {
    cout << l.current_token << endl;
    EXPECT_NE( l.current_token.tt, TokenType::Undefined);
    l.get_token();
  }

}
